[
  {
    "id": "Aggregate",
    "label": "Aggregate",
    "version": "7.3.0",
    "description": "This application assign a class on each object of a segmentation by majority voting on a pixel-based classification.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "56867ddb-9cb3-4498-9bd4-5a0ec42a9f9c",
        "parentId": "Aggregate",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "f4474012-ec47-4a17-a8f7-ea3cd884b9a3",
        "parentId": "Aggregate",
        "name": "inseg",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "3cfb7202-89de-4622-bbe0-0a472652658a",
        "parentId": "Aggregate",
        "name": "outim",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Aggregate_1.tif"
        }
      },
      {
        "id": "02971e92-c4d0-483a-b857-da29225d7541",
        "parentId": "Aggregate",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_Aggregate_2.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Aggregate.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in\n$in\n-inseg\n$inseg\n-outim\n$outim\n-out\n$out"
  },
  {
    "id": "BandMath",
    "label": "BandMath",
    "version": "7.3.0",
    "description": "Outputs a monoband image which is the result of a mathematical operation on several multi-band images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "f944dd33-d96e-4a47-a59d-b92be8edfdb9",
        "parentId": "BandMath",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6506fe94-c4e0-4db8-b213-dd4c89cedd4e",
        "parentId": "BandMath",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BandMath_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_BandMath.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "exp_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The muParser mathematical expression to apply on input images.",
        "label": "exp",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-out\n$out\n-exp\n$exp_str"
  },
  {
    "id": "BandMathX",
    "label": "BandMathX",
    "version": "7.3.0",
    "description": "This application performs mathematical operations on several multiband images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "07b20306-e091-4b8b-9a81-03fad7a8f3e8",
        "parentId": "BandMathX",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8b88b7a9-d95d-4d21-ac9f-36d8b6ae8f0c",
        "parentId": "BandMathX",
        "name": "incontext",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "599aa3b5-f409-4bd7-97ca-f0a3223ba4fa",
        "parentId": "BandMathX",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BandMathX_1.tif"
        }
      },
      {
        "id": "6c31c787-8336-4083-a1cd-d1a4726e451b",
        "parentId": "BandMathX",
        "name": "outcontext",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_BandMathX_2.txt"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_BandMathX.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "exp_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Mathematical expression to apply.",
        "label": "exp",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-incontext\n$incontext\n-out\n$out\n-outcontext\n$outcontext\n-exp\n$exp_str"
  },
  {
    "id": "BinaryMorphologicalOperation",
    "label": "BinaryMorphologicalOperation",
    "version": "7.3.0",
    "description": "Performs morphological operations on an input image channel",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6b14af5f-a700-40a6-ab69-b78404deec2d",
        "parentId": "BinaryMorphologicalOperation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "01764354-b0b2-4635-b538-36509988a802",
        "parentId": "BinaryMorphologicalOperation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BinaryMorphologicalOperation_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_BinaryMorphologicalOperation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "structype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "box",
        "description": "Choice of the structuring element type",
        "label": "structype",
        "valueSet": [
          "box",
          "ball",
          "cross"
        ],
        "notNull": true
      },
      {
        "id": "xradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The structuring element radius along the X axis.",
        "label": "xradius",
        "notNull": true
      },
      {
        "id": "yradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The structuring element radius along the Y axis.",
        "label": "yradius",
        "notNull": true
      },
      {
        "id": "foreval_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0,
        "description": "Set the foreground value, default is 1.0.",
        "label": "foreval",
        "notNull": true
      },
      {
        "id": "backval_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0,
        "description": "Set the background value, default is 0.0.",
        "label": "backval",
        "notNull": true
      },
      {
        "id": "filter_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "dilate",
        "description": "Choice of the morphological operation",
        "label": "filter",
        "valueSet": [
          "dilate",
          "erode",
          "opening",
          "closing"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-structype\n$structype_str\n-xradius\n$xradius_number\n-yradius\n$yradius_number\n-foreval\n$foreval_number\n-backval\n$backval_number\n-filter\n$filter_str"
  },
  {
    "id": "BlockMatching",
    "label": "BlockMatching",
    "version": "7.3.0",
    "description": "Performs block-matching to estimate pixel-wise disparities between two images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "86a0e643-f570-49e8-9fa1-59a1061af137",
        "parentId": "BlockMatching",
        "name": "io.inleft",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1a2b6768-275c-4701-99a9-ae118760a5bb",
        "parentId": "BlockMatching",
        "name": "io.inright",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8033a7db-1cb4-44bd-8312-99f2736660c4",
        "parentId": "BlockMatching",
        "name": "mask.inleft",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "23984042-6907-4800-b0b5-50ca378bf6be",
        "parentId": "BlockMatching",
        "name": "mask.inright",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7b3f986b-392c-41b7-a288-d7a4a53552e7",
        "parentId": "BlockMatching",
        "name": "bm.initdisp.maps.hmap",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "b9e49d7f-21f7-4cf0-a96d-f10c381c03e4",
        "parentId": "BlockMatching",
        "name": "bm.initdisp.maps.vmap",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "a3756267-7e39-4d8d-9da5-2202f0b4f176",
        "parentId": "BlockMatching",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BlockMatching_1.tif"
        }
      },
      {
        "id": "47c457f1-ef9f-4b38-9d52-504ab73cf7f4",
        "parentId": "BlockMatching",
        "name": "io.outmask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BlockMatching_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_BlockMatching.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "io_outmetric_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If enabled, the output image will have a third component with metric optimal values",
        "label": "io.outmetric",
        "notNull": true
      },
      {
        "id": "mask_nodata_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0,
        "description": "This parameter allows discarding pixels whose value is equal to the user-defined no-data value.",
        "label": "mask.nodata",
        "notNull": true
      },
      {
        "id": "mask_variancet_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 100.0,
        "description": "This parameter allows discarding pixels whose local variance is too small (the size of the neighborhood is given by the radius parameter)",
        "label": "mask.variancet",
        "notNull": true
      },
      {
        "id": "bm_metric_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ssd",
        "description": "Metric to evaluate matching between two local windows.",
        "label": "bm.metric",
        "valueSet": [
          "ssd",
          "ncc",
          "lp"
        ],
        "notNull": true
      },
      {
        "id": "bm_metric_lp_p_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Value of the p parameter in Lp pseudo-norm (must be positive).",
        "label": "bm.metric.lp.p",
        "notNull": true
      },
      {
        "id": "bm_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "The radius (in pixels) of blocks in Block-Matching",
        "label": "bm.radius",
        "notNull": true
      },
      {
        "id": "bm_minhd_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Minimum horizontal disparity to explore (can be negative)",
        "label": "bm.minhd",
        "notNull": true
      },
      {
        "id": "bm_maxhd_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Maximum horizontal disparity to explore (can be negative)",
        "label": "bm.maxhd",
        "notNull": true
      },
      {
        "id": "bm_minvd_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Minimum vertical disparity to explore (can be negative)",
        "label": "bm.minvd",
        "notNull": true
      },
      {
        "id": "bm_maxvd_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Maximum vertical disparity to explore (can be negative)",
        "label": "bm.maxvd",
        "notNull": true
      },
      {
        "id": "bm_subpixel_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "none",
        "description": "Estimate disparities with sub-pixel precision",
        "label": "bm.subpixel",
        "valueSet": [
          "none",
          "parabolic",
          "triangular",
          "dichotomy"
        ],
        "notNull": true
      },
      {
        "id": "bm_step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Location step between computed disparities. Disparities will be computed every 'step' pixels in the left image (step for both rows and columns). For instance, a value of 1 corresponds to the classic dense disparity map.To enforce consistency with its spacing, output disparity map values are  divided by the step value.",
        "label": "bm.step",
        "notNull": true
      },
      {
        "id": "bm_startx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "X start index of the subsampled grid (wrt the input image grid). See parameter bm.step",
        "label": "bm.startx",
        "notNull": true
      },
      {
        "id": "bm_starty_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Y start index of the subsampled grid (wrt the input image grid). See parameter bm.step",
        "label": "bm.starty",
        "notNull": true
      },
      {
        "id": "bm_medianfilter_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Radius (in pixels) for median filter",
        "label": "bm.medianfilter.radius",
        "notNull": false
      },
      {
        "id": "bm_medianfilter_incoherence_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Incoherence threshold between original and filtered disparity",
        "label": "bm.medianfilter.incoherence",
        "notNull": false
      },
      {
        "id": "bm_initdisp_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "none",
        "description": "",
        "label": "bm.initdisp",
        "valueSet": [
          "none",
          "uniform",
          "maps"
        ],
        "notNull": true
      },
      {
        "id": "bm_initdisp_uniform_hdisp_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Value of the uniform horizontal disparity initial estimate (in pixels)",
        "label": "bm.initdisp.uniform.hdisp",
        "notNull": true
      },
      {
        "id": "bm_initdisp_uniform_vdisp_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Value of the uniform vertical disparity initial estimate (in pixels)",
        "label": "bm.initdisp.uniform.vdisp",
        "notNull": true
      },
      {
        "id": "bm_initdisp_uniform_hrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Horizontal exploration radius around the initial disparity estimate (in pixels)",
        "label": "bm.initdisp.uniform.hrad",
        "notNull": true
      },
      {
        "id": "bm_initdisp_uniform_vrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Vertical exploration radius around the initial disparity estimate (in pixels)",
        "label": "bm.initdisp.uniform.vrad",
        "notNull": true
      },
      {
        "id": "bm_initdisp_maps_hrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Horizontal exploration radius around the initial disparity estimate (in pixels)",
        "label": "bm.initdisp.maps.hrad",
        "notNull": true
      },
      {
        "id": "bm_initdisp_maps_vrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Vertical exploration radius around the initial disparity estimate (in pixels)",
        "label": "bm.initdisp.maps.vrad",
        "notNull": true
      }
    ],
    "templatecontents": "-io.inleft\n$io_inleft\n-io.inright\n$io_inright\n-mask.inleft\n$mask_inleft\n-mask.inright\n$mask_inright\n-bm.initdisp.maps.hmap\n$bm_initdisp_maps_hmap\n-bm.initdisp.maps.vmap\n$bm_initdisp_maps_vmap\n-io.out\n$io_out\n-io.outmask\n$io_outmask\n-io.outmetric\n$io_outmetric_bool\n-mask.nodata\n$mask_nodata_number\n-mask.variancet\n$mask_variancet_number\n-bm.metric\n$bm_metric_str\n-bm.metric.lp.p\n$bm_metric_lp_p_number\n-bm.radius\n$bm_radius_number\n-bm.minhd\n$bm_minhd_number\n-bm.maxhd\n$bm_maxhd_number\n-bm.minvd\n$bm_minvd_number\n-bm.maxvd\n$bm_maxvd_number\n-bm.subpixel\n$bm_subpixel_str\n-bm.step\n$bm_step_number\n-bm.startx\n$bm_startx_number\n-bm.starty\n$bm_starty_number\n-bm.medianfilter.radius\n$bm_medianfilter_radius_number\n-bm.medianfilter.incoherence\n$bm_medianfilter_incoherence_number\n-bm.initdisp\n$bm_initdisp_str\n-bm.initdisp.uniform.hdisp\n$bm_initdisp_uniform_hdisp_number\n-bm.initdisp.uniform.vdisp\n$bm_initdisp_uniform_vdisp_number\n-bm.initdisp.uniform.hrad\n$bm_initdisp_uniform_hrad_number\n-bm.initdisp.uniform.vrad\n$bm_initdisp_uniform_vrad_number\n-bm.initdisp.maps.hrad\n$bm_initdisp_maps_hrad_number\n-bm.initdisp.maps.vrad\n$bm_initdisp_maps_vrad_number"
  },
  {
    "id": "BundleToPerfectSensor",
    "label": "BundleToPerfectSensor",
    "version": "7.3.0",
    "description": "Perform P+XS pansharpening",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "de0bdf6b-82fc-4f56-9982-191f78d74c26",
        "parentId": "BundleToPerfectSensor",
        "name": "inp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e90eb27f-0778-47c1-a660-e693434580ca",
        "parentId": "BundleToPerfectSensor",
        "name": "inxs",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "72737393-301f-4619-8773-f9cce403c644",
        "parentId": "BundleToPerfectSensor",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "38bf3c9a-5946-4ee2-9942-d10ff7e14bb5",
        "parentId": "BundleToPerfectSensor",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_BundleToPerfectSensor_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_BundleToPerfectSensor.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "default",
        "description": "Superimposition mode",
        "label": "mode",
        "valueSet": [
          "default",
          "phr"
        ],
        "notNull": true
      },
      {
        "id": "method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "rcs",
        "description": "Selection of the pan-sharpening method.",
        "label": "method",
        "valueSet": [
          "rcs",
          "lmvm",
          "bayes"
        ],
        "notNull": true
      },
      {
        "id": "method_lmvm_radiusx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Set the x radius of the sliding window.",
        "label": "method.lmvm.radiusx",
        "notNull": true
      },
      {
        "id": "method_lmvm_radiusy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Set the y radius of the sliding window.",
        "label": "method.lmvm.radiusy",
        "notNull": true
      },
      {
        "id": "method_bayes_lambda_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.9998999834060669,
        "description": "Set the weighting value.",
        "label": "method.bayes.lambda",
        "notNull": true
      },
      {
        "id": "method_bayes_s_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Set the S coefficient.",
        "label": "method.bayes.s",
        "notNull": true
      },
      {
        "id": "lms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 4,
        "description": "Spacing of the deformation field. Default is 10 times the PAN image spacing.",
        "label": "lms",
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bco",
        "description": "This group of parameters allows defining how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "bco",
          "nn",
          "linear"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "This parameter allows controlling the size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artifacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      },
      {
        "id": "fv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Fill value for area outside the reprojected image",
        "label": "fv",
        "notNull": true
      }
    ],
    "templatecontents": "-inp\n$inp\n-inxs\n$inxs\n-elev.geoid\n$elev_geoid\n-out\n$out\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-mode\n$mode_str\n-method\n$method_str\n-method.lmvm.radiusx\n$method_lmvm_radiusx_number\n-method.lmvm.radiusy\n$method_lmvm_radiusy_number\n-method.bayes.lambda\n$method_bayes_lambda_number\n-method.bayes.s\n$method_bayes_s_number\n-lms\n$lms_number\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number\n-fv\n$fv_number"
  },
  {
    "id": "ClassificationMapRegularization",
    "label": "ClassificationMapRegularization",
    "version": "7.3.0",
    "description": "Filters the input labeled image using Majority Voting in a ball shaped neighbordhood",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "8730611b-c815-4a7d-ba3f-4b7f9c224184",
        "parentId": "ClassificationMapRegularization",
        "name": "io.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d8139d57-fd48-47f9-ae3c-aeb7413a8585",
        "parentId": "ClassificationMapRegularization",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ClassificationMapRegularization_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ClassificationMapRegularization.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "ip_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The radius of the ball shaped structuring element (in pixels).",
        "label": "ip.radius",
        "notNull": true
      },
      {
        "id": "ip_suvbool_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, set pixels with more than one majority class to an undecided value. If false, keep their original labels.",
        "label": "ip.suvbool",
        "notNull": true
      },
      {
        "id": "ip_nodatalabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label for the NoData class. Such input pixels keep their NoData label in the output image.",
        "label": "ip.nodatalabel",
        "notNull": true
      },
      {
        "id": "ip_undecidedlabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label for the Undecided class.",
        "label": "ip.undecidedlabel",
        "notNull": true
      },
      {
        "id": "ip_onlyisolatedpixels_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Only pixels whose label is unique in the neighbordhood will be processed.",
        "label": "ip.onlyisolatedpixels",
        "notNull": true
      },
      {
        "id": "ip_isolatedthreshold_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Maximum number of neighbours with the same label as the center pixel to consider that it is an isolated pixel.",
        "label": "ip.isolatedthreshold",
        "notNull": true
      }
    ],
    "templatecontents": "-io.in\n$io_in\n-io.out\n$io_out\n-ip.radius\n$ip_radius_number\n-ip.suvbool\n$ip_suvbool_bool\n-ip.nodatalabel\n$ip_nodatalabel_number\n-ip.undecidedlabel\n$ip_undecidedlabel_number\n-ip.onlyisolatedpixels\n$ip_onlyisolatedpixels_bool\n-ip.isolatedthreshold\n$ip_isolatedthreshold_number"
  },
  {
    "id": "ColorMapping",
    "label": "ColorMapping",
    "version": "7.3.0",
    "description": "Map a label image to 8-bits RGB using look-up tables.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "351084ac-43e3-4d7a-a6a6-27bd32a1971e",
        "parentId": "ColorMapping",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9adc8810-109a-4c71-b9e9-d57e82dac28d",
        "parentId": "ColorMapping",
        "name": "method.custom.lut",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "f9200855-69b6-4467-b7e8-d4a9b1b47237",
        "parentId": "ColorMapping",
        "name": "method.image.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8312d948-9901-47dc-9a28-8fd756b95901",
        "parentId": "ColorMapping",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ColorMapping_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ColorMapping.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "op_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "labeltocolor",
        "description": "Selection of the operation to execute (default is: label to color).",
        "label": "op",
        "valueSet": [
          "labeltocolor",
          "colortolabel"
        ],
        "notNull": true
      },
      {
        "id": "op_colortolabel_notfound_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 404,
        "description": "Label to use for unknown colors.",
        "label": "op.colortolabel.notfound",
        "notNull": true
      },
      {
        "id": "method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "custom",
        "description": "Selection of color mapping methods and their parameters.",
        "label": "method",
        "valueSet": [
          "custom",
          "continuous",
          "optimal",
          "image"
        ],
        "notNull": true
      },
      {
        "id": "method_continuous_lut_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "red",
        "description": "Available look-up tables.",
        "label": "method.continuous.lut",
        "valueSet": [
          "red",
          "green",
          "blue",
          "grey",
          "hot",
          "cool",
          "spring",
          "summer",
          "autumn",
          "winter",
          "copper",
          "jet",
          "hsv",
          "overunder",
          "relief"
        ],
        "notNull": true
      },
      {
        "id": "method_continuous_min_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Set the lower input value of the mapping range.",
        "label": "method.continuous.min",
        "notNull": true
      },
      {
        "id": "method_continuous_max_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Set the higher input value of the mapping range.",
        "label": "method.continuous.max",
        "notNull": true
      },
      {
        "id": "method_optimal_background_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Value of the background label",
        "label": "method.optimal.background",
        "notNull": true
      },
      {
        "id": "method_image_nodatavalue_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "NoData value for each channel of the support image, which will not be handled in the LUT estimation. If NOT checked, ALL the pixel values of the support image will be handled in the LUT estimation.",
        "label": "method.image.nodatavalue",
        "notNull": true
      },
      {
        "id": "method_image_low_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "lower quantile for image normalization",
        "label": "method.image.low",
        "notNull": true
      },
      {
        "id": "method_image_up_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "upper quantile for image normalization",
        "label": "method.image.up",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-method.custom.lut\n$method_custom_lut\n-method.image.in\n$method_image_in\n-out\n$out\n-op\n$op_str\n-op.colortolabel.notfound\n$op_colortolabel_notfound_number\n-method\n$method_str\n-method.continuous.lut\n$method_continuous_lut_str\n-method.continuous.min\n$method_continuous_min_number\n-method.continuous.max\n$method_continuous_max_number\n-method.optimal.background\n$method_optimal_background_number\n-method.image.nodatavalue\n$method_image_nodatavalue_number\n-method.image.low\n$method_image_low_number\n-method.image.up\n$method_image_up_number"
  },
  {
    "id": "CompareImages",
    "label": "CompareImages",
    "version": "7.3.0",
    "description": "Estimator between 2 images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "82d069e6-c0fe-4bf7-a25a-2577374e3515",
        "parentId": "CompareImages",
        "name": "ref.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "29836518-283b-4eca-b0d6-dfab627d907c",
        "parentId": "CompareImages",
        "name": "meas.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_CompareImages.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "ref_channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Used channel for the reference image.",
        "label": "ref.channel",
        "notNull": true
      },
      {
        "id": "meas_channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Used channel for the measured image.",
        "label": "meas.channel",
        "notNull": true
      },
      {
        "id": "roi_startx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "ROI start x position.",
        "label": "roi.startx",
        "notNull": true
      },
      {
        "id": "roi_starty_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "ROI start y position.",
        "label": "roi.starty",
        "notNull": true
      },
      {
        "id": "roi_sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Size along x in pixels.",
        "label": "roi.sizex",
        "notNull": true
      },
      {
        "id": "roi_sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Size along y in pixels.",
        "label": "roi.sizey",
        "notNull": true
      },
      {
        "id": "mse_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Mean Squared Error value.",
        "label": "mse",
        "notNull": true
      },
      {
        "id": "mae_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Mean Absolute Error value.",
        "label": "mae",
        "notNull": true
      },
      {
        "id": "psnr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Peak Signal to Noise Ratio value.",
        "label": "psnr",
        "notNull": true
      },
      {
        "id": "count_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Nb of pixels which are different.",
        "label": "count",
        "notNull": true
      }
    ],
    "templatecontents": "-ref.in\n$ref_in\n-meas.in\n$meas_in\n-ref.channel\n$ref_channel_number\n-meas.channel\n$meas_channel_number\n-roi.startx\n$roi_startx_number\n-roi.starty\n$roi_starty_number\n-roi.sizex\n$roi_sizex_number\n-roi.sizey\n$roi_sizey_number\n-mse\n$mse_number\n-mae\n$mae_number\n-psnr\n$psnr_number\n-count\n$count_number"
  },
  {
    "id": "ComputeConfusionMatrix",
    "label": "ComputeConfusionMatrix",
    "version": "7.3.0",
    "description": "Computes the confusion matrix of a classification",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7baaa393-069d-4af2-9b29-ec46ca77e34f",
        "parentId": "ComputeConfusionMatrix",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "21b90353-0f5f-41c3-8602-0102fb6c52cc",
        "parentId": "ComputeConfusionMatrix",
        "name": "ref.raster.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4d88c8d0-5758-40f3-aeb5-a632afd8fc25",
        "parentId": "ComputeConfusionMatrix",
        "name": "ref.vector.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "9cbc95b3-11aa-41b4-9f89-097eb96b5207",
        "parentId": "ComputeConfusionMatrix",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_ComputeConfusionMatrix_1.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ComputeConfusionMatrix.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "format_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "confusionmatrix",
        "description": "Choice of the output format as a contingency table for unsupervised algorithmsor confusion matrix for supervised ones.",
        "label": "format",
        "valueSet": [
          "confusionmatrix",
          "contingencytable"
        ],
        "notNull": true
      },
      {
        "id": "ref_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "raster",
        "description": "Choice of ground truth format",
        "label": "ref",
        "valueSet": [
          "raster",
          "vector"
        ],
        "notNull": true
      },
      {
        "id": "ref_raster_nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label to be treated as nodata in the reference raster.",
        "label": "ref.raster.nodata",
        "notNull": true
      },
      {
        "id": "ref_vector_field_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field name containing the label values",
        "label": "ref.vector.field",
        "notNull": true
      },
      {
        "id": "ref_vector_nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label to be treated as nodata in the reference vector. Please note that this value is always used in vector mode, to generate default values. Please set it to a value that does not correspond to a class label.",
        "label": "ref.vector.nodata",
        "notNull": true
      },
      {
        "id": "nodatalabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label to be treated as nodata in the input image",
        "label": "nodatalabel",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-ref.raster.in\n$ref_raster_in\n-ref.vector.in\n$ref_vector_in\n-out\n$out\n-format\n$format_str\n-ref\n$ref_str\n-ref.raster.nodata\n$ref_raster_nodata_number\n-ref.vector.field\n$ref_vector_field_None\n-ref.vector.nodata\n$ref_vector_nodata_number\n-nodatalabel\n$nodatalabel_number"
  },
  {
    "id": "ComputeImagesStatistics",
    "label": "ComputeImagesStatistics",
    "version": "7.3.0",
    "description": "Computes global mean and standard deviation for each band from a set of images and optionally saves the results in an XML file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ed71698f-a3f8-4106-acf2-29c30da00f15",
        "parentId": "ComputeImagesStatistics",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "7ffbecab-b3b6-4f98-be53-3b82560f8c7c",
        "parentId": "ComputeImagesStatistics",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_ComputeImagesStatistics_1.xml"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ComputeImagesStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "bv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Background value to ignore in computation of statistics.",
        "label": "bv",
        "notNull": false
      }
    ],
    "templatecontents": "-il\n$il\n-out\n$out\n-bv\n$bv_number"
  },
  {
    "id": "ComputeModulusAndPhase",
    "label": "ComputeModulusAndPhase",
    "version": "7.3.0",
    "description": "This application computes the modulus and the phase of a complex SAR image or an image with 2 components (real and imaginary parts).",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "77656dab-5efc-4222-8732-316480397c89",
        "parentId": "ComputeModulusAndPhase",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "62e9ba64-a7c5-41a5-b07a-be7d6315545b",
        "parentId": "ComputeModulusAndPhase",
        "name": "modulus",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ComputeModulusAndPhase_1.tif"
        }
      },
      {
        "id": "ac03d3bc-1d92-437e-9509-9c287512e0a5",
        "parentId": "ComputeModulusAndPhase",
        "name": "phase",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ComputeModulusAndPhase_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ComputeModulusAndPhase.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in\n$in\n-modulus\n$modulus\n-phase\n$phase"
  },
  {
    "id": "ComputeOGRLayersFeaturesStatistics",
    "label": "ComputeOGRLayersFeaturesStatistics",
    "version": "7.3.0",
    "description": "Compute statistics of the features in a set of OGR Layers",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "90d33867-cb5e-4db7-bb1c-4238b6947598",
        "parentId": "ComputeOGRLayersFeaturesStatistics",
        "name": "inshp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "4cc211ab-1b70-439e-8a7d-4b635a007738",
        "parentId": "ComputeOGRLayersFeaturesStatistics",
        "name": "outstats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_ComputeOGRLayersFeaturesStatistics_1.xml"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ComputeOGRLayersFeaturesStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of features to consider for statistics.",
        "label": "feat",
        "notNull": true
      }
    ],
    "templatecontents": "-inshp\n$inshp\n-outstats\n$outstats\n-feat\n$feat_None"
  },
  {
    "id": "ConcatenateImages",
    "label": "ConcatenateImages",
    "version": "7.3.0",
    "description": "Concatenate a list of images of the same size into a single multi-channel image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5959d96e-f0d8-41b9-a997-447427c51d2e",
        "parentId": "ConcatenateImages",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "0f0cdd24-067d-4d96-99cc-e4806b54bca6",
        "parentId": "ConcatenateImages",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ConcatenateImages_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ConcatenateImages.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-il\n$il\n-out\n$out"
  },
  {
    "id": "ConcatenateVectorData",
    "label": "ConcatenateVectorData",
    "version": "7.3.0",
    "description": "Concatenate vector data files",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "db85963c-a95a-4409-8882-e53c1d5f039f",
        "parentId": "ConcatenateVectorData",
        "name": "vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "f0369d51-bf0c-45dc-8533-c1b586e5849a",
        "parentId": "ConcatenateVectorData",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_ConcatenateVectorData_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ConcatenateVectorData.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-vd\n$vd\n-out\n$out"
  },
  {
    "id": "ConnectedComponentSegmentation",
    "label": "ConnectedComponentSegmentation",
    "version": "7.3.0",
    "description": "Connected component segmentation and object based image filtering of the input image according to user-defined criterions.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9dfb8788-3ffa-4b66-a6be-09ce5b1ff995",
        "parentId": "ConnectedComponentSegmentation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "398ee6e0-4026-4b5a-ac47-eb96d328a690",
        "parentId": "ConnectedComponentSegmentation",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "4c5cc607-c74b-48f3-8162-80032b139142",
        "parentId": "ConnectedComponentSegmentation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_ConnectedComponentSegmentation_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ConnectedComponentSegmentation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mask_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Mask mathematical expression (only if support image is given)",
        "label": "mask",
        "notNull": false
      },
      {
        "id": "expr_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Formula used for connected component segmentation",
        "label": "expr",
        "notNull": true
      },
      {
        "id": "minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Min object size (area in pixel)",
        "label": "minsize",
        "notNull": true
      },
      {
        "id": "obia_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "OBIA mathematical expression",
        "label": "obia",
        "notNull": false
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-elev.geoid\n$elev_geoid\n-out\n$out\n-mask\n$mask_str\n-expr\n$expr_str\n-minsize\n$minsize_number\n-obia\n$obia_str\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "ContrastEnhancement",
    "label": "ContrastEnhancement",
    "version": "7.3.0",
    "description": "This application is the implementation of the histogram equalization algorithm. It can be used to enhance contrast in an image or to reduce the dynamic of the image without losing too much contrast. It offers several options as a nodata value, a contrast limitation factor, a local version of the algorithm and also a mode to equalize the luminance of the image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b492429a-bfb8-4091-956d-e39df90c6a0b",
        "parentId": "ContrastEnhancement",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "69641216-298d-492a-b49b-666323884055",
        "parentId": "ContrastEnhancement",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ContrastEnhancement_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ContrastEnhancement.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "bins_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 256,
        "description": "Number of bins in the histogram",
        "label": "bins",
        "notNull": true
      },
      {
        "id": "hfact_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "This parameter will set the maximum height accepted in a bin on the input image histogram. The maximum height will be computed as hfact*eqHeight where eqHeight is the height of the theoretical flat histogram. The higher hfact, the higher the contrast.\nWhen using 'luminance mode', it is recommended to limit this factor to a small value (ex: 4)",
        "label": "hfact",
        "notNull": false
      },
      {
        "id": "nodata_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "If there is a value in the image that has no visualization meaning, it can be ignored by the algorithm.",
        "label": "nodata",
        "notNull": false
      },
      {
        "id": "spatial_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "local",
        "description": "",
        "label": "spatial",
        "valueSet": [
          "local",
          "global"
        ],
        "notNull": true
      },
      {
        "id": "spatial_local_h_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 256,
        "description": "Height of the thumbnail over which the histogram will be computed. The value is in pixels.",
        "label": "spatial.local.h",
        "notNull": true
      },
      {
        "id": "spatial_local_w_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 256,
        "description": "Width of the thumbnail over which the histogram will be computed. The value is in pixels.",
        "label": "spatial.local.w",
        "notNull": true
      },
      {
        "id": "minmax_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "auto",
        "description": "Minimum and maximum value that will bound the histogram and thus the dynamic of the resulting image. Values over those boundaries will be clipped.",
        "label": "minmax",
        "valueSet": [
          "auto",
          "manual"
        ],
        "notNull": true
      },
      {
        "id": "minmax_auto_global_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Min/max computation will result in the same minimum and maximum for all the bands.",
        "label": "minmax.auto.global",
        "notNull": true
      },
      {
        "id": "minmax_manual_min_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "minmax.manual.min",
        "notNull": false
      },
      {
        "id": "minmax_manual_max_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "minmax.manual.max",
        "notNull": false
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "each",
        "description": "",
        "label": "mode",
        "valueSet": [
          "each",
          "lum"
        ],
        "notNull": true
      },
      {
        "id": "mode_lum_red_ch_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "",
        "label": "mode.lum.red.ch",
        "notNull": true
      },
      {
        "id": "mode_lum_red_coef_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.20999999344348907,
        "description": "",
        "label": "mode.lum.red.coef",
        "notNull": true
      },
      {
        "id": "mode_lum_green_ch_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "mode.lum.green.ch",
        "notNull": true
      },
      {
        "id": "mode_lum_green_coef_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.7099999785423279,
        "description": "",
        "label": "mode.lum.green.coef",
        "notNull": true
      },
      {
        "id": "mode_lum_blue_ch_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "",
        "label": "mode.lum.blue.ch",
        "notNull": true
      },
      {
        "id": "mode_lum_blue_coef_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.07999999821186066,
        "description": "",
        "label": "mode.lum.blue.coef",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-bins\n$bins_number\n-hfact\n$hfact_number\n-nodata\n$nodata_number\n-spatial\n$spatial_str\n-spatial.local.h\n$spatial_local_h_number\n-spatial.local.w\n$spatial_local_w_number\n-minmax\n$minmax_str\n-minmax.auto.global\n$minmax_auto_global_bool\n-minmax.manual.min\n$minmax_manual_min_number\n-minmax.manual.max\n$minmax_manual_max_number\n-mode\n$mode_str\n-mode.lum.red.ch\n$mode_lum_red_ch_number\n-mode.lum.red.coef\n$mode_lum_red_coef_number\n-mode.lum.green.ch\n$mode_lum_green_ch_number\n-mode.lum.green.coef\n$mode_lum_green_coef_number\n-mode.lum.blue.ch\n$mode_lum_blue_ch_number\n-mode.lum.blue.coef\n$mode_lum_blue_coef_number"
  },
  {
    "id": "ConvertCartoToGeoPoint",
    "label": "ConvertCartoToGeoPoint",
    "version": "7.3.0",
    "description": "Convert cartographic coordinates to geographic ones.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ConvertCartoToGeoPoint.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "carto_x_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "X cartographic coordinates in the projection defined by mapproj parameter",
        "label": "carto.x",
        "notNull": true
      },
      {
        "id": "carto_y_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Y cartographic coordinates in the projection defined by mapproj parameter",
        "label": "carto.y",
        "notNull": true
      },
      {
        "id": "mapproj_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "mapproj",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "mapproj_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "mapproj.utm.zone",
        "notNull": true
      },
      {
        "id": "mapproj_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "mapproj.utm.northhem",
        "notNull": true
      },
      {
        "id": "mapproj_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "mapproj.epsg.code",
        "notNull": true
      },
      {
        "id": "long_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Point longitude coordinates in decimal degrees.",
        "label": "long",
        "notNull": true
      },
      {
        "id": "lat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Point latitude coordinates in decimal degrees.",
        "label": "lat",
        "notNull": true
      }
    ],
    "templatecontents": "-carto.x\n$carto_x_number\n-carto.y\n$carto_y_number\n-mapproj\n$mapproj_str\n-mapproj.utm.zone\n$mapproj_utm_zone_number\n-mapproj.utm.northhem\n$mapproj_utm_northhem_bool\n-mapproj.epsg.code\n$mapproj_epsg_code_number\n-long\n$long_number\n-lat\n$lat_number"
  },
  {
    "id": "ConvertSensorToGeoPoint",
    "label": "ConvertSensorToGeoPoint",
    "version": "7.3.0",
    "description": "Sensor to geographic coordinates conversion.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6766ea09-7ee9-4bda-9b82-3e829638e2cb",
        "parentId": "ConvertSensorToGeoPoint",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ConvertSensorToGeoPoint.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "input_idx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "X coordinate of the point to transform.",
        "label": "input.idx",
        "notNull": true
      },
      {
        "id": "input_idy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Y coordinate of the point to transform.",
        "label": "input.idy",
        "notNull": true
      },
      {
        "id": "output_idx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Output point longitude coordinate.",
        "label": "output.idx",
        "notNull": true
      },
      {
        "id": "output_idy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Output point latitude coordinate.",
        "label": "output.idy",
        "notNull": true
      },
      {
        "id": "output_town_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Nearest main town of the computed geographic point.",
        "label": "output.town",
        "notNull": true
      },
      {
        "id": "output_country_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Country of the input image",
        "label": "output.country",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-input.idx\n$input_idx_number\n-input.idy\n$input_idy_number\n-output.idx\n$output_idx_number\n-output.idy\n$output_idy_number\n-output.town\n$output_town_str\n-output.country\n$output_country_str"
  },
  {
    "id": "Despeckle",
    "label": "Despeckle",
    "version": "7.3.0",
    "description": "Perform speckle noise reduction on SAR image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "da7680e5-c979-40e9-ae59-e8f144761eff",
        "parentId": "Despeckle",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d65c0af9-d71a-44ba-ac1d-d1fa2aec283d",
        "parentId": "Despeckle",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Despeckle_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Despeckle.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "filter_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "lee",
        "description": "",
        "label": "filter",
        "valueSet": [
          "lee",
          "frost",
          "gammamap",
          "kuan"
        ],
        "notNull": true
      },
      {
        "id": "filter_lee_rad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius in pixel",
        "label": "filter.lee.rad",
        "notNull": true
      },
      {
        "id": "filter_lee_nblooks_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Number of looks in the input image.",
        "label": "filter.lee.nblooks",
        "notNull": true
      },
      {
        "id": "filter_frost_rad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius in pixel.",
        "label": "filter.frost.rad",
        "notNull": true
      },
      {
        "id": "filter_frost_deramp_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "factor use to control the\nexponential function used to weight effect of the distance between the\ncentral pixel and its neighborhood. Increasing the deramp parameter will\nlead to take more into account pixels farther from the center and\ntherefore increase the smoothing effects.",
        "label": "filter.frost.deramp",
        "notNull": true
      },
      {
        "id": "filter_gammamap_rad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius in pixel.",
        "label": "filter.gammamap.rad",
        "notNull": true
      },
      {
        "id": "filter_gammamap_nblooks_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Number of looks in the input image.",
        "label": "filter.gammamap.nblooks",
        "notNull": true
      },
      {
        "id": "filter_kuan_rad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Radius in pixel.",
        "label": "filter.kuan.rad",
        "notNull": true
      },
      {
        "id": "filter_kuan_nblooks_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Number of looks in the input image.",
        "label": "filter.kuan.nblooks",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-filter\n$filter_str\n-filter.lee.rad\n$filter_lee_rad_number\n-filter.lee.nblooks\n$filter_lee_nblooks_number\n-filter.frost.rad\n$filter_frost_rad_number\n-filter.frost.deramp\n$filter_frost_deramp_number\n-filter.gammamap.rad\n$filter_gammamap_rad_number\n-filter.gammamap.nblooks\n$filter_gammamap_nblooks_number\n-filter.kuan.rad\n$filter_kuan_rad_number\n-filter.kuan.nblooks\n$filter_kuan_nblooks_number"
  },
  {
    "id": "DimensionalityReduction",
    "label": "DimensionalityReduction",
    "version": "7.3.0",
    "description": "Perform Dimension reduction of the input image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "685174e6-0b45-489e-816f-36aa83a01896",
        "parentId": "DimensionalityReduction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "43ef8956-81f9-4174-86d3-8039a96a0108",
        "parentId": "DimensionalityReduction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_DimensionalityReduction_1.tif"
        }
      },
      {
        "id": "e2700aa9-d0f7-46a8-845a-890306806366",
        "parentId": "DimensionalityReduction",
        "name": "outinv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_DimensionalityReduction_2.tif"
        }
      },
      {
        "id": "70a69e8a-a44d-41e4-ab5c-5f53e51931f0",
        "parentId": "DimensionalityReduction",
        "name": "method.pca.outeigenvalues",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_DimensionalityReduction_3.txt"
        }
      },
      {
        "id": "a3c879e8-fd3b-4a57-bb64-5f9a8edb29c4",
        "parentId": "DimensionalityReduction",
        "name": "outmatrix",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_DimensionalityReduction_4.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_DimensionalityReduction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "rescale_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "no",
        "description": "Enable rescaling of the reduced output image.",
        "label": "rescale",
        "valueSet": [
          "no",
          "minmax"
        ],
        "notNull": true
      },
      {
        "id": "rescale_minmax_outmin_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minimum value of the output image.",
        "label": "rescale.minmax.outmin",
        "notNull": true
      },
      {
        "id": "rescale_minmax_outmax_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Maximum value of the output image.",
        "label": "rescale.minmax.outmax",
        "notNull": true
      },
      {
        "id": "method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "pca",
        "description": "Selection of the reduction dimension method.",
        "label": "method",
        "valueSet": [
          "pca",
          "napca",
          "maf",
          "ica"
        ],
        "notNull": true
      },
      {
        "id": "method_pca_whiten_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Perform whitening and ensure uncorrelated outputs with unit component wise variances",
        "label": "method.pca.whiten",
        "notNull": true
      },
      {
        "id": "method_napca_radiusx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "method.napca.radiusx",
        "notNull": true
      },
      {
        "id": "method_napca_radiusy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "method.napca.radiusy",
        "notNull": true
      },
      {
        "id": "method_ica_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 20,
        "description": "",
        "label": "method.ica.iter",
        "notNull": true
      },
      {
        "id": "method_ica_mu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "",
        "label": "method.ica.mu",
        "notNull": true
      },
      {
        "id": "method_ica_g_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "tanh",
        "description": "Nonlinearity used in the FastICA algorithm",
        "label": "method.ica.g",
        "valueSet": [
          "tanh",
          "exp",
          "u3"
        ],
        "notNull": true
      },
      {
        "id": "nbcomp_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Number of relevant components kept. By default all components are kept.",
        "label": "nbcomp",
        "notNull": true
      },
      {
        "id": "normalize_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Center and reduce data before Dimensionality reduction (if this parameter is set to false, the data will be centered but not reduced.",
        "label": "normalize",
        "notNull": true
      },
      {
        "id": "bv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Background value to ignore in computation of the transformation matrix. Note that all pixels will still be processed when applying the transformation.",
        "label": "bv",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-outinv\n$outinv\n-method.pca.outeigenvalues\n$method_pca_outeigenvalues\n-outmatrix\n$outmatrix\n-rescale\n$rescale_str\n-rescale.minmax.outmin\n$rescale_minmax_outmin_number\n-rescale.minmax.outmax\n$rescale_minmax_outmax_number\n-method\n$method_str\n-method.pca.whiten\n$method_pca_whiten_bool\n-method.napca.radiusx\n$method_napca_radiusx_number\n-method.napca.radiusy\n$method_napca_radiusy_number\n-method.ica.iter\n$method_ica_iter_number\n-method.ica.mu\n$method_ica_mu_number\n-method.ica.g\n$method_ica_g_str\n-nbcomp\n$nbcomp_number\n-normalize\n$normalize_bool\n-bv\n$bv_number"
  },
  {
    "id": "DisparityMapToElevationMap",
    "label": "DisparityMapToElevationMap",
    "version": "7.3.0",
    "description": "Projects a disparity map into a regular elevation map.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "74684498-066b-4bb4-9e8a-837d4e052ab0",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d3159373-f3e2-469a-bf14-f06577f18ff6",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.left",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "cf3844e6-2246-443c-8ce9-e379aca4c675",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.right",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "96564611-e439-48f7-90cb-5ae68b38220a",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.lgrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9bfaf345-bbda-438f-8851-6550236fa8cd",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.rgrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "11af28f8-9984-4b37-b6d3-bf708c5dfdf0",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1e98128e-9877-484f-9ec6-edd893636b00",
        "parentId": "DisparityMapToElevationMap",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "b6b9281c-b0c9-431f-bc52-eaeb9d40a9c1",
        "parentId": "DisparityMapToElevationMap",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_DisparityMapToElevationMap_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_DisparityMapToElevationMap.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "step_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 5,
        "description": "Spacing of the output elevation map (in meters)",
        "label": "step",
        "notNull": true
      },
      {
        "id": "hmin_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minimum elevation expected (in meters)",
        "label": "hmin",
        "notNull": true
      },
      {
        "id": "hmax_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 100,
        "description": "Maximum elevation expected (in meters)",
        "label": "hmax",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-io.in\n$io_in\n-io.left\n$io_left\n-io.right\n$io_right\n-io.lgrid\n$io_lgrid\n-io.rgrid\n$io_rgrid\n-io.mask\n$io_mask\n-elev.geoid\n$elev_geoid\n-io.out\n$io_out\n-step\n$step_number\n-hmin\n$hmin_number\n-hmax\n$hmax_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "DomainTransform",
    "label": "DomainTransform",
    "version": "7.3.0",
    "description": "Domain Transform application for wavelet and fourier",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "f72fa287-6515-4d94-a745-7b97130145c6",
        "parentId": "DomainTransform",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ca990984-b44d-413c-b76b-96a3b3d46f0b",
        "parentId": "DomainTransform",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_DomainTransform_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_DomainTransform.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "wavelet",
        "description": "This parameter allows one to select between fft(fourier) and wavelet",
        "label": "mode",
        "valueSet": [
          "fft",
          "wavelet"
        ],
        "notNull": true
      },
      {
        "id": "mode_fft_shift_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Shift transform of fft filter",
        "label": "mode.fft.shift",
        "notNull": true
      },
      {
        "id": "mode_wavelet_form_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "haar",
        "description": "",
        "label": "mode.wavelet.form",
        "valueSet": [
          "haar",
          "db4",
          "db6",
          "db8",
          "db12",
          "db20",
          "sb24",
          "sb44",
          "sym8"
        ],
        "notNull": true
      },
      {
        "id": "mode_wavelet_nlevels_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Number of decomposition levels",
        "label": "mode.wavelet.nlevels",
        "notNull": true
      },
      {
        "id": "direction_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "forward",
        "description": "",
        "label": "direction",
        "valueSet": [
          "forward",
          "inverse"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-mode\n$mode_str\n-mode.fft.shift\n$mode_fft_shift_bool\n-mode.wavelet.form\n$mode_wavelet_form_str\n-mode.wavelet.nlevels\n$mode_wavelet_nlevels_number\n-direction\n$direction_str"
  },
  {
    "id": "DownloadSRTMTiles",
    "label": "DownloadSRTMTiles",
    "version": "7.3.0",
    "description": "Download or list SRTM tiles",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "36b3b685-f991-4db6-a9d7-dc322f596a8e",
        "parentId": "DownloadSRTMTiles",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "985b4c53-5cad-4bef-a235-617140020ecf",
        "parentId": "DownloadSRTMTiles",
        "name": "vl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_DownloadSRTMTiles.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "names_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of SRTM tile names to download. This list is added to the tiles derived from input images or vectors.The names should follow the SRTM tile naming convention, for instance N43E001.",
        "label": "names",
        "notNull": false
      },
      {
        "id": "tiledir_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Directory where SRTM tiles are stored. In download mode, the zipped archives will be downloaded to this directory. You'll need to unzip all tile files before using them in your application. In any case, this directory will be inspected to check which tiles are already downloaded.",
        "label": "tiledir",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "download",
        "description": "",
        "label": "mode",
        "valueSet": [
          "download",
          "list"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-vl\n$vl\n-names\n$names_str\n-tiledir\n$tiledir_file\n-mode\n$mode_str"
  },
  {
    "id": "DynamicConvert",
    "label": "DynamicConvert",
    "version": "7.3.0",
    "description": "Change the pixel type and rescale the image's dynamic",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "15299fc8-5580-4b68-9fbc-89454ee3a0a4",
        "parentId": "DynamicConvert",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "59d4d72d-6da1-4787-98f6-df7950269a62",
        "parentId": "DynamicConvert",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "61556103-aa59-4133-a1e2-2f44c31eaf09",
        "parentId": "DynamicConvert",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_DynamicConvert_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_DynamicConvert.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "type_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "Transfer function for the rescaling",
        "label": "type",
        "valueSet": [
          "linear",
          "log2"
        ],
        "notNull": true
      },
      {
        "id": "type_linear_gamma_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Gamma correction factor",
        "label": "type.linear.gamma",
        "notNull": true
      },
      {
        "id": "quantile_high_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 2,
        "description": "Quantiles to cut from histogram high values before computing min/max rescaling (in percent, 2 by default)",
        "label": "quantile.high",
        "notNull": true
      },
      {
        "id": "quantile_low_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 2,
        "description": "Quantiles to cut from histogram low values before computing min/max rescaling (in percent, 2 by default)",
        "label": "quantile.low",
        "notNull": true
      },
      {
        "id": "channels_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "It's possible to select the channels of the output image. There are 3 modes, the available choices are:",
        "label": "channels",
        "valueSet": [
          "all",
          "grayscale",
          "rgb"
        ],
        "notNull": true
      },
      {
        "id": "channels_grayscale_channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "channels.grayscale.channel",
        "notNull": true
      },
      {
        "id": "channels_rgb_red_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Red channel index.",
        "label": "channels.rgb.red",
        "notNull": true
      },
      {
        "id": "channels_rgb_green_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Green channel index.",
        "label": "channels.rgb.green",
        "notNull": true
      },
      {
        "id": "channels_rgb_blue_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Blue channel index.",
        "label": "channels.rgb.blue",
        "notNull": true
      },
      {
        "id": "outmin_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minimum value of the output image.",
        "label": "outmin",
        "notNull": true
      },
      {
        "id": "outmax_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Maximum value of the output image.",
        "label": "outmax",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-out\n$out\n-type\n$type_str\n-type.linear.gamma\n$type_linear_gamma_number\n-quantile.high\n$quantile_high_number\n-quantile.low\n$quantile_low_number\n-channels\n$channels_str\n-channels.grayscale.channel\n$channels_grayscale_channel_number\n-channels.rgb.red\n$channels_rgb_red_number\n-channels.rgb.green\n$channels_rgb_green_number\n-channels.rgb.blue\n$channels_rgb_blue_number\n-outmin\n$outmin_number\n-outmax\n$outmax_number"
  },
  {
    "id": "EdgeExtraction",
    "label": "EdgeExtraction",
    "version": "7.3.0",
    "description": "This application computes edge features on every pixel of the input image selected channel",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "1b71da92-d9d2-471c-a104-9e8e74aafa5f",
        "parentId": "EdgeExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "abadae4c-45ee-4689-aa87-a372b28c6d44",
        "parentId": "EdgeExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_EdgeExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_EdgeExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "filter_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "gradient",
        "description": "Choice of edge feature",
        "label": "filter",
        "valueSet": [
          "gradient",
          "sobel",
          "touzi"
        ],
        "notNull": true
      },
      {
        "id": "filter_touzi_xradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "filter.touzi.xradius",
        "notNull": true
      },
      {
        "id": "filter_touzi_yradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "",
        "label": "filter.touzi.yradius",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-filter\n$filter_str\n-filter.touzi.xradius\n$filter_touzi_xradius_number\n-filter.touzi.yradius\n$filter_touzi_yradius_number"
  },
  {
    "id": "EndmemberNumberEstimation",
    "label": "EndmemberNumberEstimation",
    "version": "7.3.0",
    "description": "Estimate the number of endmembers in a hyperspectral image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "eecd120b-cc91-44ed-ad5d-1be9a2a007fc",
        "parentId": "EndmemberNumberEstimation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_EndmemberNumberEstimation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "number_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The output estimated number of endmembers",
        "label": "number",
        "notNull": true
      },
      {
        "id": "algo_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "elm",
        "description": "The algorithm to use for the estimation",
        "label": "algo",
        "valueSet": [
          "elm",
          "vd"
        ],
        "notNull": true
      },
      {
        "id": "algo_vd_far_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0010000000474974513,
        "description": "False alarm rate for the virtual dimensionality algorithm",
        "label": "algo.vd.far",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-number\n$number_number\n-algo\n$algo_str\n-algo.vd.far\n$algo_vd_far_number"
  },
  {
    "id": "ExtractROI",
    "label": "ExtractROI",
    "version": "7.3.0",
    "description": "Extract a ROI defined by the user.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "c19eedbf-a17e-476c-aa03-9c7cd5a2985b",
        "parentId": "ExtractROI",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "15437a84-ed6a-4373-988a-0753f61cd1fc",
        "parentId": "ExtractROI",
        "name": "mode.fit.im",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "14ffa474-7406-4e00-aee2-4a53ba94c4f8",
        "parentId": "ExtractROI",
        "name": "mode.fit.vect",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "12f70ea9-3c11-410a-98cf-6b2ad01dd058",
        "parentId": "ExtractROI",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "4b636ed2-1a58-4efb-8acd-22c1f35f1eb4",
        "parentId": "ExtractROI",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ExtractROI_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ExtractROI.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "standard",
        "description": "",
        "label": "mode",
        "valueSet": [
          "standard",
          "fit",
          "extent",
          "radius"
        ],
        "notNull": true
      },
      {
        "id": "mode_extent_ulx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "X coordinate of upper left corner point.",
        "label": "mode.extent.ulx",
        "notNull": true
      },
      {
        "id": "mode_extent_uly_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Y coordinate of upper left corner point.",
        "label": "mode.extent.uly",
        "notNull": true
      },
      {
        "id": "mode_extent_lrx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "X coordinate of lower right corner point.",
        "label": "mode.extent.lrx",
        "notNull": true
      },
      {
        "id": "mode_extent_lry_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Y coordinate of lower right corner point.",
        "label": "mode.extent.lry",
        "notNull": true
      },
      {
        "id": "mode_extent_unit_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "pxl",
        "description": "",
        "label": "mode.extent.unit",
        "valueSet": [
          "pxl",
          "phy",
          "lonlat"
        ],
        "notNull": true
      },
      {
        "id": "mode_radius_r_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This is the radius parameter of the radius mode.",
        "label": "mode.radius.r",
        "notNull": true
      },
      {
        "id": "mode_radius_unitr_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "pxl",
        "description": "",
        "label": "mode.radius.unitr",
        "valueSet": [
          "pxl",
          "phy"
        ],
        "notNull": true
      },
      {
        "id": "mode_radius_cx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This is the center coordinate of the radius mode, it will be either an ordinate or a latitude.",
        "label": "mode.radius.cx",
        "notNull": true
      },
      {
        "id": "mode_radius_cy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "",
        "label": "mode.radius.cy",
        "notNull": true
      },
      {
        "id": "mode_radius_unitc_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "pxl",
        "description": "",
        "label": "mode.radius.unitc",
        "valueSet": [
          "pxl",
          "phy",
          "lonlat"
        ],
        "notNull": true
      },
      {
        "id": "startx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "ROI start x position.",
        "label": "startx",
        "notNull": true
      },
      {
        "id": "starty_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "ROI start y position.",
        "label": "starty",
        "notNull": true
      },
      {
        "id": "sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "size along x in pixels.",
        "label": "sizex",
        "notNull": true
      },
      {
        "id": "sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "size along y in pixels.",
        "label": "sizey",
        "notNull": true
      },
      {
        "id": "cl_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Channels to write in the output image.",
        "label": "cl",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mode.fit.im\n$mode_fit_im\n-mode.fit.vect\n$mode_fit_vect\n-elev.geoid\n$elev_geoid\n-out\n$out\n-mode\n$mode_str\n-mode.extent.ulx\n$mode_extent_ulx_number\n-mode.extent.uly\n$mode_extent_uly_number\n-mode.extent.lrx\n$mode_extent_lrx_number\n-mode.extent.lry\n$mode_extent_lry_number\n-mode.extent.unit\n$mode_extent_unit_str\n-mode.radius.r\n$mode_radius_r_number\n-mode.radius.unitr\n$mode_radius_unitr_str\n-mode.radius.cx\n$mode_radius_cx_number\n-mode.radius.cy\n$mode_radius_cy_number\n-mode.radius.unitc\n$mode_radius_unitc_str\n-startx\n$startx_number\n-starty\n$starty_number\n-sizex\n$sizex_number\n-sizey\n$sizey_number\n-cl\n$cl_None\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "FastNLMeans",
    "label": "FastNLMeans",
    "version": "7.3.0",
    "description": "Apply NL Means filter to an image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "980ed099-1900-454b-92d5-7190446a4ead",
        "parentId": "FastNLMeans",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "59e662fe-ef23-4245-afbf-b58016a8f3dd",
        "parentId": "FastNLMeans",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_FastNLMeans_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_FastNLMeans.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "patchradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Full patch will have a size of 2*patchradius +1.",
        "label": "patchradius",
        "notNull": true
      },
      {
        "id": "searchradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 7,
        "description": "Search window is used to find similar patches. Its size will be 2*searchradius+1.",
        "label": "searchradius",
        "notNull": true
      },
      {
        "id": "sig_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Noise standard deviation estimated in image. This parameter is used to correct for the expected difference between two patches. This filter works fine without using this tuning.",
        "label": "sig",
        "notNull": true
      },
      {
        "id": "thresh_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Factor influencing similarity score of two patches. The higher the threshold, the more permissive the filter. It is common to set this threshold slightly below the standard deviation (for Gaussian noise), at about 0.8*sigma.",
        "label": "thresh",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-patchradius\n$patchradius_number\n-searchradius\n$searchradius_number\n-sig\n$sig_number\n-thresh\n$thresh_number"
  },
  {
    "id": "FineRegistration",
    "label": "FineRegistration",
    "version": "7.3.0",
    "description": "Estimate disparity map between two images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d38a7141-3930-4411-9260-acb7a65d8edb",
        "parentId": "FineRegistration",
        "name": "ref",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d1ab937f-cc83-4501-b105-dfbf2bab0c93",
        "parentId": "FineRegistration",
        "name": "sec",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "ebcaa14d-7a66-4673-9680-50658aef0093",
        "parentId": "FineRegistration",
        "name": "w",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "79881bb3-cffc-464b-8a94-c2b08a7d1d22",
        "parentId": "FineRegistration",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_FineRegistration_1.tif"
        }
      },
      {
        "id": "f355bf99-112c-4806-8edc-9f157bce07d5",
        "parentId": "FineRegistration",
        "name": "wo",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_FineRegistration_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_FineRegistration.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "erx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The exploration radius along x (in pixels)",
        "label": "erx",
        "notNull": true
      },
      {
        "id": "ery_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The exploration radius along y (in pixels)",
        "label": "ery",
        "notNull": true
      },
      {
        "id": "mrx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Radius along x (in pixels) of the metric computation window",
        "label": "mrx",
        "notNull": true
      },
      {
        "id": "mry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Radius along y (in pixels) of the metric computation window",
        "label": "mry",
        "notNull": true
      },
      {
        "id": "cox_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Coarse offset along x (in physical space) between the two images, used as an initial offset for all pixels.",
        "label": "cox",
        "notNull": true
      },
      {
        "id": "coy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Coarse offset along y (in physical space) between the two images, used as an initial offset for all pixels.",
        "label": "coy",
        "notNull": true
      },
      {
        "id": "ssrx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Generates a result at a coarser resolution with a given sub-sampling rate along X",
        "label": "ssrx",
        "notNull": true
      },
      {
        "id": "ssry_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Generates a result at a coarser resolution with a given sub-sampling rate along Y",
        "label": "ssry",
        "notNull": true
      },
      {
        "id": "rgsx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Performs a gaussian smoothing of the reference image. Parameter is gaussian sigma (in pixels) in X direction.",
        "label": "rgsx",
        "notNull": false
      },
      {
        "id": "rgsy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Performs a gaussian smoothing of the reference image. Parameter is gaussian sigma (in pixels) in Y direction.",
        "label": "rgsy",
        "notNull": false
      },
      {
        "id": "sgsx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Performs a gaussian smoothing of the secondary image. Parameter is gaussian sigma (in pixels) in X direction.",
        "label": "sgsx",
        "notNull": false
      },
      {
        "id": "sgsy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Performs a gaussian smoothing of the secondary image. Parameter is gaussian sigma (in pixels) in Y direction.",
        "label": "sgsy",
        "notNull": false
      },
      {
        "id": "m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Choose the metric used for block matching. Available metrics are cross-correlation (CC), cross-correlation with subtracted mean (CCSM), mean-square difference (MSD), mean reciprocal square difference (MRSD) and mutual information (MI). Default is cross-correlation",
        "label": "m",
        "notNull": false
      },
      {
        "id": "spa_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Metric extrema location will be refined up to the given accuracy. Default is 0.01",
        "label": "spa",
        "notNull": true
      },
      {
        "id": "cva_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Metric extrema will be refined up to the given accuracy. Default is 0.01",
        "label": "cva",
        "notNull": true
      },
      {
        "id": "vmlt_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Lower threshold to compute the validity mask. This mask will be the 4th output band.",
        "label": "vmlt",
        "notNull": false
      },
      {
        "id": "vmut_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Upper threshold to obtain a validity mask. This mask will be the 4th output band.",
        "label": "vmut",
        "notNull": false
      }
    ],
    "templatecontents": "-ref\n$ref\n-sec\n$sec\n-w\n$w\n-out\n$out\n-wo\n$wo\n-erx\n$erx_number\n-ery\n$ery_number\n-mrx\n$mrx_number\n-mry\n$mry_number\n-cox\n$cox_number\n-coy\n$coy_number\n-ssrx\n$ssrx_number\n-ssry\n$ssry_number\n-rgsx\n$rgsx_number\n-rgsy\n$rgsy_number\n-sgsx\n$sgsx_number\n-sgsy\n$sgsy_number\n-m\n$m_str\n-spa\n$spa_number\n-cva\n$cva_number\n-vmlt\n$vmlt_number\n-vmut\n$vmut_number"
  },
  {
    "id": "FusionOfClassifications",
    "label": "FusionOfClassifications",
    "version": "7.3.0",
    "description": "Fuses several classifications maps of the same image on the basis of class labels.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "a6d04438-8461-4353-95ae-d37439f95283",
        "parentId": "FusionOfClassifications",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "18a67fcf-4c02-4231-8006-02c911a98654",
        "parentId": "FusionOfClassifications",
        "name": "method.dempstershafer.cmfl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "157b7f72-b6cc-41ec-96e2-264c8ba17f89",
        "parentId": "FusionOfClassifications",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_FusionOfClassifications_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_FusionOfClassifications.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "majorityvoting",
        "description": "Selection of the fusion method and its parameters.",
        "label": "method",
        "valueSet": [
          "majorityvoting",
          "dempstershafer"
        ],
        "notNull": true
      },
      {
        "id": "method_dempstershafer_mob_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "precision",
        "description": "Type of confusion matrix measurement used to compute the masses of belief of each classifier.",
        "label": "method.dempstershafer.mob",
        "valueSet": [
          "precision",
          "recall",
          "accuracy",
          "kappa"
        ],
        "notNull": true
      },
      {
        "id": "nodatalabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label for the NoData class. Such input pixels keep their NoData label in the output image and are not handled in the fusion process. By default, 'nodatalabel = 0'.",
        "label": "nodatalabel",
        "notNull": true
      },
      {
        "id": "undecidedlabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label for the Undecided class. Pixels with more than 1 fused class are marked as Undecided. Please note that the Undecided value must be different from existing labels in the input classifications. By default, 'undecidedlabel = 0'.",
        "label": "undecidedlabel",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-method.dempstershafer.cmfl\n$method_dempstershafer_cmfl\n-out\n$out\n-method\n$method_str\n-method.dempstershafer.mob\n$method_dempstershafer_mob_str\n-nodatalabel\n$nodatalabel_number\n-undecidedlabel\n$undecidedlabel_number"
  },
  {
    "id": "GeneratePlyFile",
    "label": "GeneratePlyFile",
    "version": "7.3.0",
    "description": "Generate a 3D Ply file from a DEM and a color image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "42ae0cf4-b04e-43dc-9493-9ccca3d14bd3",
        "parentId": "GeneratePlyFile",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "59755691-dad4-41d2-969a-dbc26d1af129",
        "parentId": "GeneratePlyFile",
        "name": "incolor",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "e030468a-3881-409f-a41c-1362802c050e",
        "parentId": "GeneratePlyFile",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_GeneratePlyFile_1.ply"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_GeneratePlyFile.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "dem",
        "description": "",
        "label": "mode",
        "valueSet": [
          "dem",
          "3dgrid"
        ],
        "notNull": true
      },
      {
        "id": "map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "map.utm.zone",
        "notNull": true
      },
      {
        "id": "map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "map.utm.northhem",
        "notNull": true
      },
      {
        "id": "map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "map.epsg.code",
        "notNull": true
      }
    ],
    "templatecontents": "-indem\n$indem\n-incolor\n$incolor\n-out\n$out\n-mode\n$mode_str\n-map\n$map_str\n-map.utm.zone\n$map_utm_zone_number\n-map.utm.northhem\n$map_utm_northhem_bool\n-map.epsg.code\n$map_epsg_code_number"
  },
  {
    "id": "GenerateRPCSensorModel",
    "label": "GenerateRPCSensorModel",
    "version": "7.3.0",
    "description": "Generate a RPC sensor model from a list of Ground Control Points.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "c80fe39f-e335-44a6-8da6-acf11e3c808f",
        "parentId": "GenerateRPCSensorModel",
        "name": "inpoints",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1b6ce552-f9fb-4106-ae18-723779f8e4e3",
        "parentId": "GenerateRPCSensorModel",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "fd2a580d-749b-464e-8eb6-ef19bf3cbae0",
        "parentId": "GenerateRPCSensorModel",
        "name": "outgeom",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_GenerateRPCSensorModel_1.geom"
        }
      },
      {
        "id": "a109e323-b478-4ddb-806e-b44586af0379",
        "parentId": "GenerateRPCSensorModel",
        "name": "outstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_GenerateRPCSensorModel_2.csv"
        }
      },
      {
        "id": "5c6a5238-420c-4c7b-b2ee-b8f005b99f4a",
        "parentId": "GenerateRPCSensorModel",
        "name": "outvector",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_GenerateRPCSensorModel_3.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_GenerateRPCSensorModel.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "map.utm.zone",
        "notNull": true
      },
      {
        "id": "map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "map.utm.northhem",
        "notNull": true
      },
      {
        "id": "map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "map.epsg.code",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-inpoints\n$inpoints\n-elev.geoid\n$elev_geoid\n-outgeom\n$outgeom\n-outstat\n$outstat\n-outvector\n$outvector\n-map\n$map_str\n-map.utm.zone\n$map_utm_zone_number\n-map.utm.northhem\n$map_utm_northhem_bool\n-map.epsg.code\n$map_epsg_code_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "GenericRegionMerging",
    "label": "GenericRegionMerging",
    "version": "7.3.0",
    "description": "Segmentation using region merging algorithm",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b6bea63d-6bfa-4017-ae1e-15b447041386",
        "parentId": "GenericRegionMerging",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "82519374-7bdb-4412-bedd-e91e0c78325d",
        "parentId": "GenericRegionMerging",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_GenericRegionMerging_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_GenericRegionMerging.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "criterion_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bs",
        "description": "",
        "label": "criterion",
        "valueSet": [
          "bs",
          "ed",
          "fls"
        ],
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "niter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "",
        "label": "niter",
        "notNull": true
      },
      {
        "id": "speed_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "",
        "label": "speed",
        "notNull": true
      },
      {
        "id": "cw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "",
        "label": "cw",
        "notNull": true
      },
      {
        "id": "sw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "",
        "label": "sw",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-criterion\n$criterion_str\n-threshold\n$threshold_number\n-niter\n$niter_number\n-speed\n$speed_number\n-cw\n$cw_number\n-sw\n$sw_number"
  },
  {
    "id": "GrayScaleMorphologicalOperation",
    "label": "GrayScaleMorphologicalOperation",
    "version": "7.3.0",
    "description": "Performs morphological operations on a grayscale input image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "fc2f72fa-8029-4dee-b56e-6f4405416979",
        "parentId": "GrayScaleMorphologicalOperation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "965ad255-092c-4e52-a2cd-92bea995399b",
        "parentId": "GrayScaleMorphologicalOperation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_GrayScaleMorphologicalOperation_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_GrayScaleMorphologicalOperation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "structype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "box",
        "description": "Choice of the structuring element type",
        "label": "structype",
        "valueSet": [
          "box",
          "ball",
          "cross"
        ],
        "notNull": true
      },
      {
        "id": "xradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The structuring element radius along the X axis.",
        "label": "xradius",
        "notNull": true
      },
      {
        "id": "yradius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The structuring element radius along the Y axis.",
        "label": "yradius",
        "notNull": true
      },
      {
        "id": "filter_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "dilate",
        "description": "Choice of the morphological operation",
        "label": "filter",
        "valueSet": [
          "dilate",
          "erode",
          "opening",
          "closing"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-structype\n$structype_str\n-xradius\n$xradius_number\n-yradius\n$yradius_number\n-filter\n$filter_str"
  },
  {
    "id": "GridBasedImageResampling",
    "label": "GridBasedImageResampling",
    "version": "7.3.0",
    "description": "Resamples an image according to a resampling grid",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "51cb1a62-64c0-4b66-9cf6-c68c6744a0e8",
        "parentId": "GridBasedImageResampling",
        "name": "io.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "b98a76f5-fbfd-419f-bb7b-b8866c68930f",
        "parentId": "GridBasedImageResampling",
        "name": "grid.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "05b61d97-df14-4588-a177-9cb2f1d6c30d",
        "parentId": "GridBasedImageResampling",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_GridBasedImageResampling_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_GridBasedImageResampling.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "grid_type_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "def",
        "description": "allows one to choose between two grid types",
        "label": "grid.type",
        "valueSet": [
          "def",
          "loc"
        ],
        "notNull": true
      },
      {
        "id": "out_ulx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "X Coordinate of the upper-left pixel of the output resampled image",
        "label": "out.ulx",
        "notNull": true
      },
      {
        "id": "out_uly_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Y Coordinate of the upper-left pixel of the output resampled image",
        "label": "out.uly",
        "notNull": true
      },
      {
        "id": "out_sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of the output resampled image along X (in pixels)",
        "label": "out.sizex",
        "notNull": true
      },
      {
        "id": "out_sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of the output resampled image along Y (in pixels)",
        "label": "out.sizey",
        "notNull": true
      },
      {
        "id": "out_spacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Size of each pixel along X axis",
        "label": "out.spacingx",
        "notNull": true
      },
      {
        "id": "out_spacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Size of each pixel along Y axis",
        "label": "out.spacingy",
        "notNull": true
      },
      {
        "id": "out_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The default value to give to pixel that falls outside of the input image.",
        "label": "out.default",
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bco",
        "description": "This group of parameters allows one to define how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "nn",
          "linear",
          "bco"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "This parameter allows controlling the size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artifacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      }
    ],
    "templatecontents": "-io.in\n$io_in\n-grid.in\n$grid_in\n-io.out\n$io_out\n-grid.type\n$grid_type_str\n-out.ulx\n$out_ulx_number\n-out.uly\n$out_uly_number\n-out.sizex\n$out_sizex_number\n-out.sizey\n$out_sizey_number\n-out.spacingx\n$out_spacingx_number\n-out.spacingy\n$out_spacingy_number\n-out.default\n$out_default_number\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number"
  },
  {
    "id": "HaralickTextureExtraction",
    "label": "HaralickTextureExtraction",
    "version": "7.3.0",
    "description": "Computes Haralick textural features on the selected channel of the input image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "2e0bb160-bcb0-4fa1-a296-54ebdfa365fe",
        "parentId": "HaralickTextureExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "f3f55a47-97e4-4c4e-888b-e1705603d778",
        "parentId": "HaralickTextureExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_HaralickTextureExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_HaralickTextureExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Step (in pixels) to compute output texture values. The first computed pixel position is shifted by (step-1)/2 in both directions.",
        "label": "step",
        "notNull": true
      },
      {
        "id": "parameters_xrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "X Radius",
        "label": "parameters.xrad",
        "notNull": true
      },
      {
        "id": "parameters_yrad_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Y Radius",
        "label": "parameters.yrad",
        "notNull": true
      },
      {
        "id": "parameters_xoff_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "X Offset",
        "label": "parameters.xoff",
        "notNull": true
      },
      {
        "id": "parameters_yoff_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Y Offset",
        "label": "parameters.yoff",
        "notNull": true
      },
      {
        "id": "parameters_min_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Image Minimum",
        "label": "parameters.min",
        "notNull": true
      },
      {
        "id": "parameters_max_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Image Maximum",
        "label": "parameters.max",
        "notNull": true
      },
      {
        "id": "parameters_nbbin_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 8,
        "description": "Histogram number of bin",
        "label": "parameters.nbbin",
        "notNull": true
      },
      {
        "id": "texture_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "simple",
        "description": "Choice of The Texture Set",
        "label": "texture",
        "valueSet": [
          "simple",
          "advanced",
          "higher"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-step\n$step_number\n-parameters.xrad\n$parameters_xrad_number\n-parameters.yrad\n$parameters_yrad_number\n-parameters.xoff\n$parameters_xoff_number\n-parameters.yoff\n$parameters_yoff_number\n-parameters.min\n$parameters_min_number\n-parameters.max\n$parameters_max_number\n-parameters.nbbin\n$parameters_nbbin_number\n-texture\n$texture_str"
  },
  {
    "id": "HomologousPointsExtraction",
    "label": "HomologousPointsExtraction",
    "version": "7.3.0",
    "description": "Compute homologous points between images using keypoints",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "54f28959-6d0e-41e8-91a9-77282827bcd1",
        "parentId": "HomologousPointsExtraction",
        "name": "in1",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "2d081e9f-290b-4ed9-82c7-b4a4b7d84f89",
        "parentId": "HomologousPointsExtraction",
        "name": "in2",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "34473692-0e9d-4eb9-972d-6f452ecb75d3",
        "parentId": "HomologousPointsExtraction",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6ea2a68e-eeaf-4da8-904a-5527215fcbe9",
        "parentId": "HomologousPointsExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_HomologousPointsExtraction_1.txt"
        }
      },
      {
        "id": "d2040976-f56e-491e-a0d4-68667b1a615f",
        "parentId": "HomologousPointsExtraction",
        "name": "outvector",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_HomologousPointsExtraction_2.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_HomologousPointsExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "band1_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Index of the band from input image 1 to use for keypoints extraction",
        "label": "band1",
        "notNull": true
      },
      {
        "id": "band2_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Index of the band from input image 1 to use for keypoints extraction",
        "label": "band2",
        "notNull": true
      },
      {
        "id": "algorithm_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "surf",
        "description": "Choice of the detection algorithm to use",
        "label": "algorithm",
        "valueSet": [
          "surf",
          "sift"
        ],
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6000000238418579,
        "description": "The distance threshold for matching.",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "backmatching_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If set to true, matches should be consistent in both ways.",
        "label": "backmatching",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "full",
        "description": "",
        "label": "mode",
        "valueSet": [
          "full",
          "geobins"
        ],
        "notNull": true
      },
      {
        "id": "mode_geobins_binsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 256,
        "description": "Radius of the spatial bin in pixels",
        "label": "mode.geobins.binsize",
        "notNull": true
      },
      {
        "id": "mode_geobins_binsizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Radius of the spatial bin in pixels (y direction). If not set, the mode.geobins.binsize value is used.",
        "label": "mode.geobins.binsizey",
        "notNull": false
      },
      {
        "id": "mode_geobins_binstep_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 256,
        "description": "Steps between bins in pixels",
        "label": "mode.geobins.binstep",
        "notNull": true
      },
      {
        "id": "mode_geobins_binstepy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Steps between bins in pixels (y direction). If not set, the mode.geobins.binstep value is used.",
        "label": "mode.geobins.binstepy",
        "notNull": false
      },
      {
        "id": "mode_geobins_margin_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Margin from image border to start/end bins (in pixels)",
        "label": "mode.geobins.margin",
        "notNull": true
      },
      {
        "id": "precision_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Estimated precision of the colocalisation function in pixels",
        "label": "precision",
        "notNull": true
      },
      {
        "id": "mfilter_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If enabled, this option allows one to filter matches according to colocalisation from sensor or geographical information, using the given tolerancy expressed in pixels",
        "label": "mfilter",
        "notNull": true
      },
      {
        "id": "2wgs84_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "",
        "label": "2wgs84",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-in1\n$in1\n-in2\n$in2\n-elev.geoid\n$elev_geoid\n-out\n$out\n-outvector\n$outvector\n-band1\n$band1_number\n-band2\n$band2_number\n-algorithm\n$algorithm_str\n-threshold\n$threshold_number\n-backmatching\n$backmatching_bool\n-mode\n$mode_str\n-mode.geobins.binsize\n$mode_geobins_binsize_number\n-mode.geobins.binsizey\n$mode_geobins_binsizey_number\n-mode.geobins.binstep\n$mode_geobins_binstep_number\n-mode.geobins.binstepy\n$mode_geobins_binstepy_number\n-mode.geobins.margin\n$mode_geobins_margin_number\n-precision\n$precision_number\n-mfilter\n$mfilter_bool\n-2wgs84\n$2wgs84_bool\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "HooverCompareSegmentation",
    "label": "HooverCompareSegmentation",
    "version": "7.3.0",
    "description": "Compare two segmentations with Hoover metrics",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "80e9c264-2c5b-4f3e-ab7f-3817b20d5098",
        "parentId": "HooverCompareSegmentation",
        "name": "ingt",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "25cc6195-4d69-475c-aa8f-14fedc065828",
        "parentId": "HooverCompareSegmentation",
        "name": "inms",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "dc7765e4-c6ed-4715-8c8a-0c294d2d9f36",
        "parentId": "HooverCompareSegmentation",
        "name": "outgt",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_HooverCompareSegmentation_1.tif"
        }
      },
      {
        "id": "b3b79c79-16eb-47ae-bb95-3e639aafa422",
        "parentId": "HooverCompareSegmentation",
        "name": "outms",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_HooverCompareSegmentation_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_HooverCompareSegmentation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "bg_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Label value of the background in the input segmentations",
        "label": "bg",
        "notNull": true
      },
      {
        "id": "th_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.75,
        "description": "Overlapping threshold used to find Hoover instances.",
        "label": "th",
        "notNull": true
      },
      {
        "id": "rc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Overall score for correct detection (RC)",
        "label": "rc",
        "notNull": true
      },
      {
        "id": "rf_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Overall score for over segmentation (RF)",
        "label": "rf",
        "notNull": true
      },
      {
        "id": "ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Overall score for under segmentation (RA)",
        "label": "ra",
        "notNull": true
      },
      {
        "id": "rm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Overall score for missed detection (RM)",
        "label": "rm",
        "notNull": true
      }
    ],
    "templatecontents": "-ingt\n$ingt\n-inms\n$inms\n-outgt\n$outgt\n-outms\n$outms\n-bg\n$bg_number\n-th\n$th_number\n-rc\n$rc_number\n-rf\n$rf_number\n-ra\n$ra_number\n-rm\n$rm_number"
  },
  {
    "id": "HyperspectralUnmixing",
    "label": "HyperspectralUnmixing",
    "version": "7.3.0",
    "description": "Estimate abundance maps from an hyperspectral image and a set of endmembers.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d0290b7e-4413-42c8-91e3-c602316593dc",
        "parentId": "HyperspectralUnmixing",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "62a4dc59-dfe8-40c2-933f-8f2408838b50",
        "parentId": "HyperspectralUnmixing",
        "name": "ie",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "1b2b7751-ed63-4720-bbbb-7c88fc9b21da",
        "parentId": "HyperspectralUnmixing",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_HyperspectralUnmixing_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_HyperspectralUnmixing.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "ua_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ucls",
        "description": "The algorithm to use for unmixing",
        "label": "ua",
        "valueSet": [
          "ucls",
          "isra",
          "mdmdnmf"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-ie\n$ie\n-out\n$out\n-ua\n$ua_str"
  },
  {
    "id": "ImageClassifier",
    "label": "ImageClassifier",
    "version": "7.3.0",
    "description": "Performs a classification of the input image according to a model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "8180c3b4-ec16-4c66-8f93-fb0d45a139fa",
        "parentId": "ImageClassifier",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1809312f-2b97-4a07-8f31-93996a49ab13",
        "parentId": "ImageClassifier",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6ead711e-4bf4-4261-af97-18d73e790f26",
        "parentId": "ImageClassifier",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4a5e1e7c-1af4-4de0-82a0-945bd26d02f9",
        "parentId": "ImageClassifier",
        "name": "imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ac44d067-77be-464d-a13c-c1527e738d1d",
        "parentId": "ImageClassifier",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageClassifier_1.tif"
        }
      },
      {
        "id": "9dac8c59-0c49-4b37-93bf-5b23354a2c47",
        "parentId": "ImageClassifier",
        "name": "confmap",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageClassifier_2.tif"
        }
      },
      {
        "id": "adaa8392-d260-41a0-abab-37902024ee28",
        "parentId": "ImageClassifier",
        "name": "probamap",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageClassifier_3.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ImageClassifier.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "nodatalabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "By default, hidden pixels will have the assigned label 0 in the output image. It is possible to define the label mask by another value, but be careful not to use a label from another class (max. 65535).",
        "label": "nodatalabel",
        "notNull": true
      },
      {
        "id": "nbclasses_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 20,
        "description": "The number of classes is required by the output of the probability map in order to set the number of output bands.",
        "label": "nbclasses",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-model\n$model\n-imstat\n$imstat\n-out\n$out\n-confmap\n$confmap\n-probamap\n$probamap\n-nodatalabel\n$nodatalabel_number\n-nbclasses\n$nbclasses_number"
  },
  {
    "id": "ImageDimensionalityReduction",
    "label": "ImageDimensionalityReduction",
    "version": "7.3.0",
    "description": "Performs dimensionality reduction of the input image based on a dimensionality reduction model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "01937fec-8c08-462c-8ccc-b88c6ecf62d7",
        "parentId": "ImageDimensionalityReduction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "5b69fc48-6efc-4351-a0f7-065b7c0d28cf",
        "parentId": "ImageDimensionalityReduction",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "26e7caac-19bb-4869-80f4-c881929bdfa1",
        "parentId": "ImageDimensionalityReduction",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "cc764acb-7dfa-49a7-bdc9-ec16fb1775cc",
        "parentId": "ImageDimensionalityReduction",
        "name": "imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "31c39d38-002b-49a9-8fa4-19da5680e781",
        "parentId": "ImageDimensionalityReduction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageDimensionalityReduction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ImageDimensionalityReduction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-model\n$model\n-imstat\n$imstat\n-out\n$out"
  },
  {
    "id": "ImageEnvelope",
    "label": "ImageEnvelope",
    "version": "7.3.0",
    "description": "Extracts an image envelope.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "71c2f3d1-4720-405f-a960-256e7f0291e2",
        "parentId": "ImageEnvelope",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7d3b10a4-bd13-4e2f-885d-2ff828a6d3eb",
        "parentId": "ImageEnvelope",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "2828faf8-a27a-4ca0-8aec-045dd8a4dfb6",
        "parentId": "ImageEnvelope",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_ImageEnvelope_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ImageEnvelope.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "sr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Sampling rate for image edges (in pixel).",
        "label": "sr",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "proj_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Projection to be used to compute the envelope (default is WGS84)",
        "label": "proj",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-elev.geoid\n$elev_geoid\n-out\n$out\n-sr\n$sr_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-proj\n$proj_str"
  },
  {
    "id": "ImageRegression",
    "label": "ImageRegression",
    "version": "7.3.0",
    "description": "Performs a prediction of the input image according to a regression model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "721d541b-4353-4a32-9f1a-f4219786ea62",
        "parentId": "ImageRegression",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "744510d9-5a5f-46ec-a0d7-33d36105c141",
        "parentId": "ImageRegression",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6b6c7ce0-72fc-4699-8ca2-0febc13d76b5",
        "parentId": "ImageRegression",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4050ffc8-e4cd-4165-8acc-f5e80ce4e79e",
        "parentId": "ImageRegression",
        "name": "imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "bb9d0c96-199e-4dd8-bc97-ef4e7a30f407",
        "parentId": "ImageRegression",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageRegression_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ImageRegression.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-model\n$model\n-imstat\n$imstat\n-out\n$out"
  },
  {
    "id": "ImageTimeSeriesGapFilling",
    "label": "ImageTimeSeriesGapFilling",
    "version": "7.3.0",
    "description": "Time series gapfilling.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "3990c6be-7eec-4281-8dda-80a1247eef8e",
        "parentId": "ImageTimeSeriesGapFilling",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "5d7e66d7-2704-4249-a9d9-7de917f1d0bf",
        "parentId": "ImageTimeSeriesGapFilling",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "81941ab3-a53e-4144-9e98-be5b4362d956",
        "parentId": "ImageTimeSeriesGapFilling",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ImageTimeSeriesGapFilling_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ImageTimeSeriesGapFilling.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "comp_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The number of bands of each date (all dates have to have the same number of bands, of course).",
        "label": "comp",
        "notNull": true
      },
      {
        "id": "it_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "it",
        "notNull": true
      },
      {
        "id": "id_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "An ascii file containing the dates of the input time series. The date format is YYYYMMDD. See this example: http://tully.ups-tlse.fr/jordi/temporalgapfilling/blob/master/data/TimeSeriesInputDateFile.txt If no date file is provided, the time gap between dates is supposed to be regular.",
        "label": "id",
        "notNull": false
      },
      {
        "id": "od_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "An ascii file containing the dates of the output time series. Same format as the input date file. If provided, the output image time series will be resampled to correspond to the dates provided in the file. This is useful if you want to have a regular temporal sampling when your input time series is irregular. If no file is provided, the input dates are used.",
        "label": "od",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-out\n$out\n-comp\n$comp_number\n-it\n$it_str\n-id\n$id_str\n-od\n$od_str"
  },
  {
    "id": "KMeansClassification",
    "label": "KMeansClassification",
    "version": "7.3.0",
    "description": "Unsupervised KMeans image classification",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "f6405acf-8fd2-41ef-aaa0-6195bcfb89fd",
        "parentId": "KMeansClassification",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "aae295f1-34ed-4ea1-8e2f-8fc592def91f",
        "parentId": "KMeansClassification",
        "name": "centroids.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "bce4296f-9d25-49ab-b7ec-b37d692a3da6",
        "parentId": "KMeansClassification",
        "name": "vm",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "5cf76ac4-0468-4e4f-add5-b28e7743ccfe",
        "parentId": "KMeansClassification",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_KMeansClassification_1.tif"
        }
      },
      {
        "id": "e5969c9e-5db4-4679-9aef-0881b1ddb86b",
        "parentId": "KMeansClassification",
        "name": "centroids.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_KMeansClassification_2.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_KMeansClassification.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "nc_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Number of modes, which will be used to generate class membership.",
        "label": "nc",
        "notNull": true
      },
      {
        "id": "ts_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Size of the training set (in pixels).",
        "label": "ts",
        "notNull": true
      },
      {
        "id": "maxit_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations for the learning step. If this parameter is set to 0, the KMeans algorithm will not stop until convergence",
        "label": "maxit",
        "notNull": true
      },
      {
        "id": "sampler_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "periodic",
        "description": "Type of sampling (periodic, pattern based, random)",
        "label": "sampler",
        "valueSet": [
          "periodic",
          "random"
        ],
        "notNull": true
      },
      {
        "id": "sampler_periodic_jitter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Jitter amplitude added during sample selection (0 = no jitter)",
        "label": "sampler.periodic.jitter",
        "notNull": true
      },
      {
        "id": "nodatalabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "By default, hidden pixels will have the assigned label 0 in the output image. It's possible to define the label mask by another value, but be careful to not take a label from another class. This application initializes the labels from 0 to N-1, N is the number of class (defined by 'nc' parameter).",
        "label": "nodatalabel",
        "notNull": true
      },
      {
        "id": "cleanup_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "If activated, the application will try to clean all temporary files it created",
        "label": "cleanup",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-centroids.in\n$centroids_in\n-vm\n$vm\n-out\n$out\n-centroids.out\n$centroids_out\n-nc\n$nc_number\n-ts\n$ts_number\n-maxit\n$maxit_number\n-sampler\n$sampler_str\n-sampler.periodic.jitter\n$sampler_periodic_jitter_number\n-nodatalabel\n$nodatalabel_number\n-cleanup\n$cleanup_bool\n-rand\n$rand_number"
  },
  {
    "id": "LSMSSegmentation",
    "label": "LSMSSegmentation",
    "version": "7.3.0",
    "description": "This application performs the second step of the exact Large-Scale Mean-Shift segmentation workflow (LSMS) [1].",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "c5d860de-77a8-41d9-8189-8dbf623cd460",
        "parentId": "LSMSSegmentation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a107d36d-1a84-494b-8d31-25164df508a3",
        "parentId": "LSMSSegmentation",
        "name": "inpos",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "9db55b9c-fde6-4f57-aa6a-e61b297bd7a8",
        "parentId": "LSMSSegmentation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_LSMSSegmentation_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LSMSSegmentation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "spatialr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 5,
        "description": "Threshold on Spatial distance to consider pixels in the same segment. A good value is half the spatial radius used in the MeanShiftSmoothing application (spatialr parameter).",
        "label": "spatialr",
        "notNull": true
      },
      {
        "id": "ranger_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 15,
        "description": "Threshold on spectral signature euclidean distance (expressed in radiometry unit) to consider pixels in the same segment. A good value is half the range radius used in the MeanShiftSmoothing application (ranger parameter).",
        "label": "ranger",
        "notNull": true
      },
      {
        "id": "minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Minimum Segment Size. If, after the segmentation, a segment is of size lower than this criterion, the segment is discarded.",
        "label": "minsize",
        "notNull": true
      },
      {
        "id": "tilesizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the X-axis for tile-wise processing.",
        "label": "tilesizex",
        "notNull": true
      },
      {
        "id": "tilesizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the Y-axis for tile-wise processing.",
        "label": "tilesizey",
        "notNull": true
      },
      {
        "id": "tmpdir_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This applications need to write temporary files for each tile. This parameter allows choosing the path where to write those files. If disabled, the current path will be used.",
        "label": "tmpdir",
        "notNull": false
      },
      {
        "id": "cleanup_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "If activated, the application will try to remove all temporary files it created.",
        "label": "cleanup",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-inpos\n$inpos\n-out\n$out\n-spatialr\n$spatialr_number\n-ranger\n$ranger_number\n-minsize\n$minsize_number\n-tilesizex\n$tilesizex_number\n-tilesizey\n$tilesizey_number\n-tmpdir\n$tmpdir_file\n-cleanup\n$cleanup_bool"
  },
  {
    "id": "LSMSSmallRegionsMerging",
    "label": "LSMSSmallRegionsMerging",
    "version": "7.3.0",
    "description": "This application performs the third (optional) step of the exact Large-Scale Mean-Shift segmentation workflow [1].",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "1aad1d5b-82a0-41d9-aea6-7d57b02891b4",
        "parentId": "LSMSSmallRegionsMerging",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "23d4557b-5b5b-432c-9af6-2829f77a0e18",
        "parentId": "LSMSSmallRegionsMerging",
        "name": "inseg",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "0a33634b-d12f-4bb2-81f5-897967badbee",
        "parentId": "LSMSSmallRegionsMerging",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_LSMSSmallRegionsMerging_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LSMSSmallRegionsMerging.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 50,
        "description": "Minimum Segment Size. If, after the segmentation, a segment is of size lower than this criterion, the segment is merged with the segment that has the closest sepctral signature.",
        "label": "minsize",
        "notNull": true
      },
      {
        "id": "tilesizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the X-axis for tile-wise processing.",
        "label": "tilesizex",
        "notNull": true
      },
      {
        "id": "tilesizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the Y-axis for tile-wise processing.",
        "label": "tilesizey",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-inseg\n$inseg\n-out\n$out\n-minsize\n$minsize_number\n-tilesizex\n$tilesizex_number\n-tilesizey\n$tilesizey_number"
  },
  {
    "id": "LSMSVectorization",
    "label": "LSMSVectorization",
    "version": "7.3.0",
    "description": "This application performs the fourth step of the exact Large-Scale Mean-Shift segmentation workflow [1].",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5c99f8f6-e62f-4082-bcd0-4711fdb6ac00",
        "parentId": "LSMSVectorization",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "3babce2f-04ee-46f0-8a76-734d5554570a",
        "parentId": "LSMSVectorization",
        "name": "inseg",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "28c2196d-bf2b-4a70-967a-28c01e4d8dab",
        "parentId": "LSMSVectorization",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_LSMSVectorization_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LSMSVectorization.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "tilesizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the X-axis for tile-wise processing.",
        "label": "tilesizex",
        "notNull": true
      },
      {
        "id": "tilesizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the Y-axis for tile-wise processing.",
        "label": "tilesizey",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-inseg\n$inseg\n-out\n$out\n-tilesizex\n$tilesizex_number\n-tilesizey\n$tilesizey_number"
  },
  {
    "id": "LargeScaleMeanShift",
    "label": "LargeScaleMeanShift",
    "version": "7.3.0",
    "description": "Large-scale segmentation using MeanShift",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "3bf62a12-9339-44db-8498-53034f3f2bb7",
        "parentId": "LargeScaleMeanShift",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c959fefe-2dbd-4eee-ae53-fe6c0ac4eee3",
        "parentId": "LargeScaleMeanShift",
        "name": "mode.vector.imfield",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "f02561d6-654c-410a-9789-e7ef10798a5f",
        "parentId": "LargeScaleMeanShift",
        "name": "mode.vector.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_LargeScaleMeanShift_1.shp"
        }
      },
      {
        "id": "e91ad5ac-3690-491b-b669-dc0088dc8703",
        "parentId": "LargeScaleMeanShift",
        "name": "mode.raster.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_LargeScaleMeanShift_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LargeScaleMeanShift.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "spatialr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Radius of the spatial neighborhood for averaging. Higher values will result in more smoothing and higher processing time.",
        "label": "spatialr",
        "notNull": true
      },
      {
        "id": "ranger_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 15,
        "description": "Threshold on spectral signature euclidean distance (expressed in radiometry unit) to consider neighborhood pixel for averaging. Higher values will be less edge-preserving (more similar to simple average in neighborhood), whereas lower values will result in less noise smoothing. Note that this parameter has no effect on processing time.",
        "label": "ranger",
        "notNull": true
      },
      {
        "id": "minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 50,
        "description": "Minimum Segment Size. If, after the  segmentation, a segment is of size strictly lower than this criterion, the segment is merged with the segment that has the closest sepctral signature.",
        "label": "minsize",
        "notNull": true
      },
      {
        "id": "tilesizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the X-axis for tile-wise processing.",
        "label": "tilesizex",
        "notNull": true
      },
      {
        "id": "tilesizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 500,
        "description": "Size of tiles along the Y-axis for tile-wise processing.",
        "label": "tilesizey",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "vector",
        "description": "Type of segmented output",
        "label": "mode",
        "valueSet": [
          "vector",
          "raster"
        ],
        "notNull": true
      },
      {
        "id": "cleanup_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "If activated, the application will try to clean all temporary files it created",
        "label": "cleanup",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mode.vector.imfield\n$mode_vector_imfield\n-mode.vector.out\n$mode_vector_out\n-mode.raster.out\n$mode_raster_out\n-spatialr\n$spatialr_number\n-ranger\n$ranger_number\n-minsize\n$minsize_number\n-tilesizex\n$tilesizex_number\n-tilesizey\n$tilesizey_number\n-mode\n$mode_str\n-cleanup\n$cleanup_bool"
  },
  {
    "id": "LineSegmentDetection",
    "label": "LineSegmentDetection",
    "version": "7.3.0",
    "description": "Detect line segments in raster",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9c75e6e3-8257-4c52-a850-ef9bf8b9c49d",
        "parentId": "LineSegmentDetection",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8f3b23bb-8c86-40e8-a076-7f6c4bb7face",
        "parentId": "LineSegmentDetection",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "7e7b99fb-ab20-4010-926e-9064ffe11684",
        "parentId": "LineSegmentDetection",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_LineSegmentDetection_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LineSegmentDetection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "norescale_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "By default, the input image amplitude is rescaled between [0,255]. Turn on this parameter to skip rescaling",
        "label": "norescale",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-elev.geoid\n$elev_geoid\n-out\n$out\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-norescale\n$norescale_bool"
  },
  {
    "id": "LocalRxDetection",
    "label": "LocalRxDetection",
    "version": "7.3.0",
    "description": "Performs local Rx score computation on an hyperspectral image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "68589bf1-a558-4654-b29d-9a00f83076c6",
        "parentId": "LocalRxDetection",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "634e4e31-8080-4db7-8d5d-ac55ad468dc5",
        "parentId": "LocalRxDetection",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_LocalRxDetection_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LocalRxDetection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "ir_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Internal radius in pixel",
        "label": "ir",
        "notNull": true
      },
      {
        "id": "er_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "External radius in pixel",
        "label": "er",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-ir\n$ir_number\n-er\n$er_number"
  },
  {
    "id": "LocalStatisticExtraction",
    "label": "LocalStatisticExtraction",
    "version": "7.3.0",
    "description": "Computes local statistical moments on every pixel in the selected channel of the input image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "36eed84c-c539-4fee-b4b7-53ae0bee5717",
        "parentId": "LocalStatisticExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "3b1fdad2-1ca6-4498-8321-72f0e4935785",
        "parentId": "LocalStatisticExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_LocalStatisticExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_LocalStatisticExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index (1 based)",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "The computational window radius.",
        "label": "radius",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-radius\n$radius_number"
  },
  {
    "id": "ManageNoData",
    "label": "ManageNoData",
    "version": "7.3.0",
    "description": "Manage No-Data",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6cb06076-1251-4ecd-95f7-9039354cfb4e",
        "parentId": "ManageNoData",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "144fb8c8-dd14-40f7-ab05-ffbadafe58fe",
        "parentId": "ManageNoData",
        "name": "mode.apply.mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8e00bfc8-5d29-46be-8115-b6995cba340f",
        "parentId": "ManageNoData",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ManageNoData_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ManageNoData.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "usenan_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If active, the application will consider NaN as no-data values as well",
        "label": "usenan",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "buildmask",
        "description": "Allows choosing between different no-data handling options",
        "label": "mode",
        "valueSet": [
          "buildmask",
          "changevalue",
          "apply"
        ],
        "notNull": true
      },
      {
        "id": "mode_buildmask_inv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Value given in the output mask to pixels that are not no data pixels",
        "label": "mode.buildmask.inv",
        "notNull": true
      },
      {
        "id": "mode_buildmask_outv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Value given in the output mask to pixels that are no data pixels",
        "label": "mode.buildmask.outv",
        "notNull": true
      },
      {
        "id": "mode_changevalue_newv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The new no-data value",
        "label": "mode.changevalue.newv",
        "notNull": true
      },
      {
        "id": "mode_apply_ndval_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "No Data value used according to the mask image",
        "label": "mode.apply.ndval",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mode.apply.mask\n$mode_apply_mask\n-out\n$out\n-usenan\n$usenan_bool\n-mode\n$mode_str\n-mode.buildmask.inv\n$mode_buildmask_inv_number\n-mode.buildmask.outv\n$mode_buildmask_outv_number\n-mode.changevalue.newv\n$mode_changevalue_newv_number\n-mode.apply.ndval\n$mode_apply_ndval_number"
  },
  {
    "id": "MeanShiftSmoothing",
    "label": "MeanShiftSmoothing",
    "version": "7.3.0",
    "description": "This application smooths an image using the MeanShift algorithm.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9cf0fc22-b37b-4722-b554-cb6cad924d47",
        "parentId": "MeanShiftSmoothing",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "822ab6a5-2d32-4125-92a8-0c99edb3fb50",
        "parentId": "MeanShiftSmoothing",
        "name": "fout",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MeanShiftSmoothing_1.tif"
        }
      },
      {
        "id": "f99d04db-77b7-4587-8ecd-8afd2240ee55",
        "parentId": "MeanShiftSmoothing",
        "name": "foutpos",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MeanShiftSmoothing_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MeanShiftSmoothing.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "spatialr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Radius of the spatial neighborhood for averaging. Higher values will result in more smoothing and higher processing time.",
        "label": "spatialr",
        "notNull": true
      },
      {
        "id": "ranger_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 15,
        "description": "Threshold on spectral signature euclidean distance (expressed in radiometry unit) to consider neighborhood pixel for averaging. Higher values will be less edge-preserving (more similar to simple average in neighborhood), whereas lower values will result in less noise smoothing. Note that this parameter has no effect on processing time.",
        "label": "ranger",
        "notNull": true
      },
      {
        "id": "thres_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Algorithm will stop if update of average spectral signature and spatial position is below this threshold.",
        "label": "thres",
        "notNull": true
      },
      {
        "id": "maxiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Algorithm will stop if convergence threshold is not met after the maximum number of iterations.",
        "label": "maxiter",
        "notNull": true
      },
      {
        "id": "rangeramp_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Vary the range radius linearly with the central pixel intensity (experimental).",
        "label": "rangeramp",
        "notNull": true
      },
      {
        "id": "modesearch_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If activated pixel iterative convergence is stopped if the path crosses an already converged pixel. Be careful, with this option, the result will slightly depend on thread number and the results will not be stable (see [4] for more details).",
        "label": "modesearch",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-fout\n$fout\n-foutpos\n$foutpos\n-spatialr\n$spatialr_number\n-ranger\n$ranger_number\n-thres\n$thres_number\n-maxiter\n$maxiter_number\n-rangeramp\n$rangeramp_number\n-modesearch\n$modesearch_bool"
  },
  {
    "id": "MorphologicalClassification",
    "label": "MorphologicalClassification",
    "version": "7.3.0",
    "description": "Performs morphological convex, concave and flat classification on an input image channel",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5fc2022a-0289-46a9-ab3e-7ac42bcb1ab9",
        "parentId": "MorphologicalClassification",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "531240b6-399b-4962-b13f-c8ae23ad7583",
        "parentId": "MorphologicalClassification",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MorphologicalClassification_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MorphologicalClassification.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index for input image",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "structype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ball",
        "description": "Choice of the structuring element type",
        "label": "structype",
        "valueSet": [
          "ball",
          "cross"
        ],
        "notNull": true
      },
      {
        "id": "radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Radius of the structuring element (in pixels), default value is 5.",
        "label": "radius",
        "notNull": true
      },
      {
        "id": "sigma_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Sigma value for leveling tolerance, default value is 0.5.",
        "label": "sigma",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-structype\n$structype_str\n-radius\n$radius_number\n-sigma\n$sigma_number"
  },
  {
    "id": "MorphologicalMultiScaleDecomposition",
    "label": "MorphologicalMultiScaleDecomposition",
    "version": "7.3.0",
    "description": "Perform a geodesic morphology based image analysis on an input image channel",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ba57dd51-1788-49dd-9457-d308b3458b06",
        "parentId": "MorphologicalMultiScaleDecomposition",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8cebd348-333c-44ba-83f0-5059f030f367",
        "parentId": "MorphologicalMultiScaleDecomposition",
        "name": "outconvex",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MorphologicalMultiScaleDecomposition_1.tif"
        }
      },
      {
        "id": "4f207aec-3c0b-4221-848a-f094c2d3614b",
        "parentId": "MorphologicalMultiScaleDecomposition",
        "name": "outconcave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MorphologicalMultiScaleDecomposition_2.tif"
        }
      },
      {
        "id": "03f0300f-9470-4ae9-a373-22cb2ea63d76",
        "parentId": "MorphologicalMultiScaleDecomposition",
        "name": "outleveling",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MorphologicalMultiScaleDecomposition_3.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MorphologicalMultiScaleDecomposition.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index for input image",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "structype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ball",
        "description": "Choice of the structuring element type",
        "label": "structype",
        "valueSet": [
          "ball",
          "cross"
        ],
        "notNull": true
      },
      {
        "id": "radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Initial radius of the structuring element (in pixels)",
        "label": "radius",
        "notNull": true
      },
      {
        "id": "step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius step along the profile (in pixels)",
        "label": "step",
        "notNull": true
      },
      {
        "id": "levels_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Number of levels use for multi scale",
        "label": "levels",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-outconvex\n$outconvex\n-outconcave\n$outconcave\n-outleveling\n$outleveling\n-channel\n$channel_number\n-structype\n$structype_str\n-radius\n$radius_number\n-step\n$step_number\n-levels\n$levels_number"
  },
  {
    "id": "MorphologicalProfilesAnalysis",
    "label": "MorphologicalProfilesAnalysis",
    "version": "7.3.0",
    "description": "Performs morphological profiles analysis on an input image channel.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "21faf1eb-0496-4650-bc82-cc46870cac11",
        "parentId": "MorphologicalProfilesAnalysis",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "fe5f891a-948d-4846-a600-689905b35b1b",
        "parentId": "MorphologicalProfilesAnalysis",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MorphologicalProfilesAnalysis_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MorphologicalProfilesAnalysis.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index for input image",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "structype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ball",
        "description": "Choice of the structuring element type",
        "label": "structype",
        "valueSet": [
          "ball",
          "cross"
        ],
        "notNull": true
      },
      {
        "id": "size_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Size of the profiles",
        "label": "size",
        "notNull": true
      },
      {
        "id": "radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Initial radius of the structuring element (in pixels)",
        "label": "radius",
        "notNull": true
      },
      {
        "id": "step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius step along the profile (in pixels)",
        "label": "step",
        "notNull": true
      },
      {
        "id": "profile_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "opening",
        "description": "",
        "label": "profile",
        "valueSet": [
          "opening",
          "closing",
          "derivativeopening",
          "derivativeclosing",
          "openingcharacteristics",
          "closingcharacteristics",
          "classification"
        ],
        "notNull": true
      },
      {
        "id": "profile_classification_sigma_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Sigma value for leveling tolerance",
        "label": "profile.classification.sigma",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-structype\n$structype_str\n-size\n$size_number\n-radius\n$radius_number\n-step\n$step_number\n-profile\n$profile_str\n-profile.classification.sigma\n$profile_classification_sigma_number"
  },
  {
    "id": "Mosaic",
    "label": "Mosaic",
    "version": "7.3.0",
    "description": "Perform a mosaic of input images",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "484da361-897a-4ce4-a873-090ee4b2dfde",
        "parentId": "Mosaic",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "73598740-4cf0-4ddc-8679-766d9f633af6",
        "parentId": "Mosaic",
        "name": "vdcut",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "aa4fcda3-b50f-4ef8-9984-5aa517f29751",
        "parentId": "Mosaic",
        "name": "vdstats",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "b3635960-8ed0-4cf4-9cfa-430275391d81",
        "parentId": "Mosaic",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Mosaic_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Mosaic.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "comp_feather_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "none",
        "description": "Set the feathering method for composition",
        "label": "comp.feather",
        "valueSet": [
          "none",
          "large",
          "slim"
        ],
        "notNull": true
      },
      {
        "id": "comp_feather_slim_exponent_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "",
        "label": "comp.feather.slim.exponent",
        "notNull": true
      },
      {
        "id": "comp_feather_slim_length_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "comp.feather.slim.length",
        "notNull": false
      },
      {
        "id": "harmo_method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "none",
        "description": "Set the harmonization method. More information about the \"band\" and \"rgb\" methods can be found in the paper \"Natural Color Satellite Image Mosaicking Using Quadratic Programming in Decorrelated Color Space\" Cresson and Saint-Geours, July 2015, IEEE JSTARS Volume 8 Issue 8 (https://doi.org/10.1109/JSTARS.2015.2449233)",
        "label": "harmo.method",
        "valueSet": [
          "none",
          "band",
          "rgb"
        ],
        "notNull": true
      },
      {
        "id": "harmo_cost_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "rmse",
        "description": "Set the harmonization cost function",
        "label": "harmo.cost",
        "valueSet": [
          "rmse",
          "musig",
          "mu"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "nn",
        "description": "This group of parameters allows defining how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "nn",
          "bco",
          "linear"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artefacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      },
      {
        "id": "output_spacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Physical size (X) of output image pixels, in cartographic units.",
        "label": "output.spacingx",
        "notNull": false
      },
      {
        "id": "output_spacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Physical size (Y) of output image pixels, in cartographic units..",
        "label": "output.spacingy",
        "notNull": false
      },
      {
        "id": "tmpdir_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Directory for temporary files. If not set, the output image parent directory is used.",
        "label": "tmpdir",
        "notNull": false
      },
      {
        "id": "distancemap_sr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 10,
        "description": "Distance maps are computed when the compositing method uses feathering. The distance maps sampling ratio is the ratio between the distance map physical spacing and the physical spacing of the original image. It is used to change the distance maps physical spacing: since the distance map computation is not a streamable pipeline, it can be useful to compute slightly smaller distance maps. distancemap.sr can be hence increased if input images are too big to fit the RAM, or in order to speed up the process",
        "label": "distancemap.sr",
        "notNull": true
      },
      {
        "id": "nodata_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The no-data value is ignored during statistics computations (for color harmonisation) and for the mosaic compositing.",
        "label": "nodata",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-vdcut\n$vdcut\n-vdstats\n$vdstats\n-out\n$out\n-comp.feather\n$comp_feather_str\n-comp.feather.slim.exponent\n$comp_feather_slim_exponent_number\n-comp.feather.slim.length\n$comp_feather_slim_length_number\n-harmo.method\n$harmo_method_str\n-harmo.cost\n$harmo_cost_str\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number\n-output.spacingx\n$output_spacingx_number\n-output.spacingy\n$output_spacingy_number\n-tmpdir\n$tmpdir_file\n-distancemap.sr\n$distancemap_sr_number\n-nodata\n$nodata_number"
  },
  {
    "id": "MultiImageSamplingRate",
    "label": "MultiImageSamplingRate",
    "version": "7.3.0",
    "description": "Compute sampling rate for an input set of images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6fab9cde-18cf-4c06-b93c-9993270c2c08",
        "parentId": "MultiImageSamplingRate",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "541d7d1e-fc28-4e6b-ac9c-450694a2c81c",
        "parentId": "MultiImageSamplingRate",
        "name": "strategy.byclass.in",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "3cd8e0e0-b6a7-4bce-98ea-6f3b1fb50469",
        "parentId": "MultiImageSamplingRate",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_MultiImageSamplingRate_1.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MultiImageSamplingRate.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "strategy_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "smallest",
        "description": "",
        "label": "strategy",
        "valueSet": [
          "byclass",
          "constant",
          "smallest",
          "percent",
          "total",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "strategy_constant_nb_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Number of samples for all classes.In the case of the custom multi-image mode, several values can be given for each image.",
        "label": "strategy.constant.nb",
        "notNull": true
      },
      {
        "id": "strategy_percent_p_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The percentage(s) to use In the case of the custom multi-image mode, several values can be given for each image.",
        "label": "strategy.percent.p",
        "notNull": true
      },
      {
        "id": "strategy_total_v_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of samples to generateIn the case of the custom multi-image mode, several values can be given for each image.",
        "label": "strategy.total.v",
        "notNull": true
      },
      {
        "id": "mim_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "proportional",
        "description": "",
        "label": "mim",
        "valueSet": [
          "proportional",
          "equal",
          "custom"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-strategy.byclass.in\n$strategy_byclass_in\n-out\n$out\n-strategy\n$strategy_str\n-strategy.constant.nb\n$strategy_constant_nb_str\n-strategy.percent.p\n$strategy_percent_p_str\n-strategy.total.v\n$strategy_total_v_str\n-mim\n$mim_str"
  },
  {
    "id": "MultiResolutionPyramid",
    "label": "MultiResolutionPyramid",
    "version": "7.3.0",
    "description": "Build a multi-resolution pyramid of the image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b06615c9-bd01-4cac-afd7-c6c324a1b59e",
        "parentId": "MultiResolutionPyramid",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "4daab861-b1ae-4dee-990b-98532d1b5063",
        "parentId": "MultiResolutionPyramid",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MultiResolutionPyramid_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MultiResolutionPyramid.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "level_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Number of levels in the pyramid (default is 1).",
        "label": "level",
        "notNull": true
      },
      {
        "id": "sfactor_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Subsampling factor between each level of the pyramid (default is 2).",
        "label": "sfactor",
        "notNull": true
      },
      {
        "id": "vfactor_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6000000238418579,
        "description": "Variance factor use in smoothing. It is multiplied by the subsampling factor of each level in the  pyramid (default is 0.6).",
        "label": "vfactor",
        "notNull": true
      },
      {
        "id": "fast_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If used, this option allows one to speed-up computation by iteratively subsampling previous level of pyramid instead of processing the full input.",
        "label": "fast",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-level\n$level_number\n-sfactor\n$sfactor_number\n-vfactor\n$vfactor_number\n-fast\n$fast_bool"
  },
  {
    "id": "MultitempFilteringFilter",
    "label": "MultitempFilteringFilter",
    "version": "7.3.0",
    "description": "This application implements the Quegan speckle filter for SAR images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5621ceb2-d023-4924-92a8-19e65805dfce",
        "parentId": "MultitempFilteringFilter",
        "name": "inl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8b5933d1-1f81-416f-b77b-6f694f254b90",
        "parentId": "MultitempFilteringFilter",
        "name": "oc",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6c5fe598-5be8-4aa4-90a6-798c307cc237",
        "parentId": "MultitempFilteringFilter",
        "name": "enl",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MultitempFilteringFilter_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MultitempFilteringFilter.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "wr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Window radius",
        "label": "wr",
        "notNull": true
      },
      {
        "id": "filtpath_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Directory where filtered files shall be stored. Default: alongside the input file, or in a subdirectory named 'filtered' if the input image contains a slash in its name.",
        "label": "filtpath",
        "notNull": false
      }
    ],
    "templatecontents": "-inl\n$inl\n-oc\n$oc\n-enl\n$enl\n-wr\n$wr_number\n-filtpath\n$filtpath_str"
  },
  {
    "id": "MultitempFilteringOutcore",
    "label": "MultitempFilteringOutcore",
    "version": "7.3.0",
    "description": "This application implements the Quegan speckle filter for SAR images. It computes the outcore function of the filter. It must be followed by the MultitempFilteringFilter application to compute the filtered images",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "fc8e3c44-9c03-4fd5-a366-1d4056aa08aa",
        "parentId": "MultitempFilteringOutcore",
        "name": "inl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "925a3da4-c5e4-4340-97cf-78b53a4c4d4a",
        "parentId": "MultitempFilteringOutcore",
        "name": "oc",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MultitempFilteringOutcore_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MultitempFilteringOutcore.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "wr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Window radius",
        "label": "wr",
        "notNull": true
      }
    ],
    "templatecontents": "-inl\n$inl\n-oc\n$oc\n-wr\n$wr_number"
  },
  {
    "id": "MultivariateAlterationDetector",
    "label": "MultivariateAlterationDetector",
    "version": "7.3.0",
    "description": "Change detection by Multivariate Alteration Detector (MAD) algorithm",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "67a19f32-9c04-4698-af1a-0ffb0457679a",
        "parentId": "MultivariateAlterationDetector",
        "name": "in1",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6a6f077c-bc23-46ba-ab2d-ce3024683e09",
        "parentId": "MultivariateAlterationDetector",
        "name": "in2",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "7fd7d422-cb43-408b-a3af-a38752d5ccc1",
        "parentId": "MultivariateAlterationDetector",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_MultivariateAlterationDetector_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_MultivariateAlterationDetector.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in1\n$in1\n-in2\n$in2\n-out\n$out"
  },
  {
    "id": "OGRLayerClassifier",
    "label": "OGRLayerClassifier",
    "version": "7.3.0",
    "description": "Classify an OGR layer based on a machine learning model and a list of features to consider.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b927abbd-034f-43fb-94b3-db48d64c5225",
        "parentId": "OGRLayerClassifier",
        "name": "inshp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "d86861be-de04-4020-a0de-3e7f99a49f78",
        "parentId": "OGRLayerClassifier",
        "name": "instats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "9fffaca5-b4e2-4d66-8529-e342e7991196",
        "parentId": "OGRLayerClassifier",
        "name": "insvm",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_OGRLayerClassifier_1.svm"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_OGRLayerClassifier.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Features to be calculated",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "cfield_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "predicted",
        "description": "Field containing the predicted class",
        "label": "cfield",
        "notNull": true
      }
    ],
    "templatecontents": "-inshp\n$inshp\n-instats\n$instats\n-insvm\n$insvm\n-feat\n$feat_None\n-cfield\n$cfield_str"
  },
  {
    "id": "OSMDownloader",
    "label": "OSMDownloader",
    "version": "7.3.0",
    "description": "Download vector data from OSM and store it to file",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d34257f2-5059-4b10-8f19-3fd34af7e552",
        "parentId": "OSMDownloader",
        "name": "support",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d56fea05-cc40-407a-a507-c4f9fd242cb8",
        "parentId": "OSMDownloader",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "16dd208c-0e46-4f70-a345-bdeb58072b2d",
        "parentId": "OSMDownloader",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_OSMDownloader_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_OSMDownloader.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "key_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "OSM tag key to extract (highway, building...). It defines a category to select features.",
        "label": "key",
        "notNull": false
      },
      {
        "id": "value_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "OSM tag value to extract (motorway, footway...). It defines the type of feature to select inside a category.",
        "label": "value",
        "notNull": false
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "printclasses_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Print the key/value classes available for the selected support image. If enabled, the OSM tag Key (-key) and the output (-out) become optional",
        "label": "printclasses",
        "notNull": true
      }
    ],
    "templatecontents": "-support\n$support\n-elev.geoid\n$elev_geoid\n-out\n$out\n-key\n$key_str\n-value\n$value_str\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-printclasses\n$printclasses_bool"
  },
  {
    "id": "ObjectsRadiometricStatistics",
    "label": "ObjectsRadiometricStatistics",
    "version": "7.3.0",
    "description": "Compute features attributes of a vector dataset over an image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "44058ea3-9320-4154-8ccb-46424ce96a14",
        "parentId": "ObjectsRadiometricStatistics",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "69e6e3b8-9735-453a-b05d-2e0f3f7d9c9a",
        "parentId": "ObjectsRadiometricStatistics",
        "name": "im",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ObjectsRadiometricStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "field_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "label",
        "description": "Name of the field containing object IDs.",
        "label": "field",
        "notNull": true
      },
      {
        "id": "background_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Background value. Needs to be different of any object ID.",
        "label": "background",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-im\n$im\n-field\n$field_str\n-background\n$background_number"
  },
  {
    "id": "ObtainUTMZoneFromGeoPoint",
    "label": "ObtainUTMZoneFromGeoPoint",
    "version": "7.3.0",
    "description": "UTM zone determination from a geographic point.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ObtainUTMZoneFromGeoPoint.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "lat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Latitude value of desired point.",
        "label": "lat",
        "notNull": true
      },
      {
        "id": "lon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Longitude value of desired point.",
        "label": "lon",
        "notNull": true
      },
      {
        "id": "utm_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "UTM Zone",
        "label": "utm",
        "notNull": false
      }
    ],
    "templatecontents": "-lat\n$lat_number\n-lon\n$lon_number\n-utm\n$utm_number"
  },
  {
    "id": "OpticalCalibration",
    "label": "OpticalCalibration",
    "version": "7.3.0",
    "description": "Perform optical calibration TOA/TOC (Top Of Atmosphere/Top Of Canopy). Supported sensors: QuickBird, Ikonos, WorldView2, Formosat, Spot5, Pleiades, Spot6, Spot7. For other sensors the application also allows providing calibration parameters manually.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "a7097f72-598e-47b9-9e54-d7a2239ed7da",
        "parentId": "OpticalCalibration",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "da9596f2-ca05-4dc0-9e7e-1aa9a6735bc9",
        "parentId": "OpticalCalibration",
        "name": "acqui.gainbias",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "78c6add5-c979-4855-91e0-476f3a78ad3b",
        "parentId": "OpticalCalibration",
        "name": "acqui.solarilluminations",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "69135805-6685-460e-bc14-55e725b3e490",
        "parentId": "OpticalCalibration",
        "name": "atmo.aeronet",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "730f87ed-3e83-4536-9fac-e39783abdf36",
        "parentId": "OpticalCalibration",
        "name": "atmo.rsr",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "2bdd673e-9a18-4811-b7b5-60f2b11be93b",
        "parentId": "OpticalCalibration",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_OpticalCalibration_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_OpticalCalibration.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "level_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "toa",
        "description": "",
        "label": "level",
        "valueSet": [
          "toa",
          "toatoim",
          "toc"
        ],
        "notNull": true
      },
      {
        "id": "milli_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Flag to use milli-reflectance instead of reflectance.\nThis allows saving the image with integer pixel type (in the range [0, 1000]  instead of floating point in the range [0, 1]. In order to do that, use this option and set the output pixel type (-out filename double for example)",
        "label": "milli",
        "notNull": true
      },
      {
        "id": "clamp_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Clamping in the range [0, 1]. It can be useful to preserve area with specular reflectance.",
        "label": "clamp",
        "notNull": true
      },
      {
        "id": "acqui_minute_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Minute (0-59)",
        "label": "acqui.minute",
        "notNull": true
      },
      {
        "id": "acqui_hour_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 12,
        "description": "Hour (0-23)",
        "label": "acqui.hour",
        "notNull": true
      },
      {
        "id": "acqui_day_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Day (1-31)",
        "label": "acqui.day",
        "notNull": true
      },
      {
        "id": "acqui_month_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Month (1-12)",
        "label": "acqui.month",
        "notNull": true
      },
      {
        "id": "acqui_year_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2000,
        "description": "Year",
        "label": "acqui.year",
        "notNull": true
      },
      {
        "id": "acqui_fluxnormcoeff_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Flux Normalization Coefficient",
        "label": "acqui.fluxnormcoeff",
        "notNull": false
      },
      {
        "id": "acqui_solardistance_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Solar distance (in AU)",
        "label": "acqui.solardistance",
        "notNull": false
      },
      {
        "id": "acqui_sun_elev_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 90,
        "description": "Sun elevation angle (in degrees)",
        "label": "acqui.sun.elev",
        "notNull": true
      },
      {
        "id": "acqui_sun_azim_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Sun azimuth angle (in degrees)",
        "label": "acqui.sun.azim",
        "notNull": true
      },
      {
        "id": "acqui_view_elev_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 90,
        "description": "Viewing elevation angle (in degrees)",
        "label": "acqui.view.elev",
        "notNull": true
      },
      {
        "id": "acqui_view_azim_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Viewing azimuth angle (in degrees)",
        "label": "acqui.view.azim",
        "notNull": true
      },
      {
        "id": "atmo_aerosol_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "noaersol",
        "description": "",
        "label": "atmo.aerosol",
        "valueSet": [
          "noaersol",
          "continental",
          "maritime",
          "urban",
          "desertic"
        ],
        "notNull": true
      },
      {
        "id": "atmo_oz_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Stratospheric ozone layer content (in cm-atm)",
        "label": "atmo.oz",
        "notNull": true
      },
      {
        "id": "atmo_wa_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 2.5,
        "description": "Total water vapor content over vertical atmospheric column (in g/cm2)",
        "label": "atmo.wa",
        "notNull": true
      },
      {
        "id": "atmo_pressure_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1030,
        "description": "Atmospheric Pressure (in hPa)",
        "label": "atmo.pressure",
        "notNull": true
      },
      {
        "id": "atmo_opt_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.20000000298023224,
        "description": "Aerosol Optical Thickness (unitless)",
        "label": "atmo.opt",
        "notNull": true
      },
      {
        "id": "atmo_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Window radius for adjacency effects correctionsSetting this parameters will enable the correction ofadjacency effects",
        "label": "atmo.radius",
        "notNull": true
      },
      {
        "id": "atmo_pixsize_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Pixel size (in km) used tocompute adjacency effects, it doesn't have tomatch the image spacing",
        "label": "atmo.pixsize",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-acqui.gainbias\n$acqui_gainbias\n-acqui.solarilluminations\n$acqui_solarilluminations\n-atmo.aeronet\n$atmo_aeronet\n-atmo.rsr\n$atmo_rsr\n-out\n$out\n-level\n$level_str\n-milli\n$milli_bool\n-clamp\n$clamp_bool\n-acqui.minute\n$acqui_minute_number\n-acqui.hour\n$acqui_hour_number\n-acqui.day\n$acqui_day_number\n-acqui.month\n$acqui_month_number\n-acqui.year\n$acqui_year_number\n-acqui.fluxnormcoeff\n$acqui_fluxnormcoeff_number\n-acqui.solardistance\n$acqui_solardistance_number\n-acqui.sun.elev\n$acqui_sun_elev_number\n-acqui.sun.azim\n$acqui_sun_azim_number\n-acqui.view.elev\n$acqui_view_elev_number\n-acqui.view.azim\n$acqui_view_azim_number\n-atmo.aerosol\n$atmo_aerosol_str\n-atmo.oz\n$atmo_oz_number\n-atmo.wa\n$atmo_wa_number\n-atmo.pressure\n$atmo_pressure_number\n-atmo.opt\n$atmo_opt_number\n-atmo.radius\n$atmo_radius_number\n-atmo.pixsize\n$atmo_pixsize_number"
  },
  {
    "id": "OrthoRectification",
    "label": "OrthoRectification",
    "version": "7.3.0",
    "description": "This application allows ortho-rectifying optical and radar images from supported sensors.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "80ef558f-42ea-4e67-b808-024e5ff9e6b3",
        "parentId": "OrthoRectification",
        "name": "io.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "de4ccd62-10dd-4f8b-a5db-1b0e8a5e63e3",
        "parentId": "OrthoRectification",
        "name": "outputs.ortho",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "cc20e396-6d2e-4e56-87c1-fbda996b83d7",
        "parentId": "OrthoRectification",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "e82c3b45-6a32-49a9-a347-01992c055865",
        "parentId": "OrthoRectification",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_OrthoRectification_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_OrthoRectification.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "map.utm.zone",
        "notNull": true
      },
      {
        "id": "map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "map.utm.northhem",
        "notNull": true
      },
      {
        "id": "map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "map.epsg.code",
        "notNull": true
      },
      {
        "id": "outputs_mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "auto",
        "description": "",
        "label": "outputs.mode",
        "valueSet": [
          "auto",
          "autosize",
          "autospacing",
          "outputroi",
          "orthofit"
        ],
        "notNull": true
      },
      {
        "id": "outputs_ulx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic X coordinate of upper-left corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.ulx",
        "notNull": true
      },
      {
        "id": "outputs_uly_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic Y coordinate of the upper-left corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.uly",
        "notNull": true
      },
      {
        "id": "outputs_sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of projected image along X (in pixels)",
        "label": "outputs.sizex",
        "notNull": true
      },
      {
        "id": "outputs_sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of projected image along Y (in pixels)",
        "label": "outputs.sizey",
        "notNull": true
      },
      {
        "id": "outputs_spacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Size of each pixel along X axis (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.spacingx",
        "notNull": true
      },
      {
        "id": "outputs_spacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Size of each pixel along Y axis (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.spacingy",
        "notNull": true
      },
      {
        "id": "outputs_lrx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic X coordinate of the lower-right corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.lrx",
        "notNull": false
      },
      {
        "id": "outputs_lry_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic Y coordinate of the lower-right corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "outputs.lry",
        "notNull": false
      },
      {
        "id": "outputs_isotropic_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Default spacing (pixel size) values are estimated from the sensor modeling of the image. It can therefore result in a non-isotropic spacing. This option allows you to force default values to be isotropic (in this case, the minimum of spacing in both direction is applied. Values overridden by user are not affected by this option.",
        "label": "outputs.isotropic",
        "notNull": true
      },
      {
        "id": "outputs_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Default value to write when outside of input image.",
        "label": "outputs.default",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bco",
        "description": "This group of parameters allows one to define how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "bco",
          "nn",
          "linear"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "This parameter allows one to control the size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artifacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      },
      {
        "id": "opt_rpc_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Enabling RPC modeling allows one to speed-up SPOT5 ortho-rectification. Value is the number of control points per axis for RPC estimation",
        "label": "opt.rpc",
        "notNull": true
      },
      {
        "id": "opt_gridspacing_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 4,
        "description": "Resampling is done according to a coordinate mapping deformation grid, whose pixel size is set by this parameter, and expressed in the coordinate system of the output image The closer to the output spacing this parameter is, the more precise will be the ortho-rectified image,but increasing this parameter will reduce processing time.",
        "label": "opt.gridspacing",
        "notNull": true
      }
    ],
    "templatecontents": "-io.in\n$io_in\n-outputs.ortho\n$outputs_ortho\n-elev.geoid\n$elev_geoid\n-io.out\n$io_out\n-map\n$map_str\n-map.utm.zone\n$map_utm_zone_number\n-map.utm.northhem\n$map_utm_northhem_bool\n-map.epsg.code\n$map_epsg_code_number\n-outputs.mode\n$outputs_mode_str\n-outputs.ulx\n$outputs_ulx_number\n-outputs.uly\n$outputs_uly_number\n-outputs.sizex\n$outputs_sizex_number\n-outputs.sizey\n$outputs_sizey_number\n-outputs.spacingx\n$outputs_spacingx_number\n-outputs.spacingy\n$outputs_spacingy_number\n-outputs.lrx\n$outputs_lrx_number\n-outputs.lry\n$outputs_lry_number\n-outputs.isotropic\n$outputs_isotropic_bool\n-outputs.default\n$outputs_default_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number\n-opt.rpc\n$opt_rpc_number\n-opt.gridspacing\n$opt_gridspacing_number"
  },
  {
    "id": "Pansharpening",
    "label": "Pansharpening",
    "version": "7.3.0",
    "description": "Perform P+XS pansharpening",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "4a03b875-d5fb-4a4d-aae3-eb61a8bf7980",
        "parentId": "Pansharpening",
        "name": "inp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "98cd4437-d62f-460f-affd-8bb4ed8f1ef2",
        "parentId": "Pansharpening",
        "name": "inxs",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6f7b06f1-0048-47c0-8b52-ebadd166dfeb",
        "parentId": "Pansharpening",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Pansharpening_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Pansharpening.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "method_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "rcs",
        "description": "Selection of the pan-sharpening method.",
        "label": "method",
        "valueSet": [
          "rcs",
          "lmvm",
          "bayes"
        ],
        "notNull": true
      },
      {
        "id": "method_lmvm_radiusx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Set the x radius of the sliding window.",
        "label": "method.lmvm.radiusx",
        "notNull": true
      },
      {
        "id": "method_lmvm_radiusy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Set the y radius of the sliding window.",
        "label": "method.lmvm.radiusy",
        "notNull": true
      },
      {
        "id": "method_bayes_lambda_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.9998999834060669,
        "description": "Set the weighting value.",
        "label": "method.bayes.lambda",
        "notNull": true
      },
      {
        "id": "method_bayes_s_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Set the S coefficient.",
        "label": "method.bayes.s",
        "notNull": true
      }
    ],
    "templatecontents": "-inp\n$inp\n-inxs\n$inxs\n-out\n$out\n-method\n$method_str\n-method.lmvm.radiusx\n$method_lmvm_radiusx_number\n-method.lmvm.radiusy\n$method_lmvm_radiusy_number\n-method.bayes.lambda\n$method_bayes_lambda_number\n-method.bayes.s\n$method_bayes_s_number"
  },
  {
    "id": "PantexTextureExtraction",
    "label": "PantexTextureExtraction",
    "version": "7.3.0",
    "description": "Computes Pantex textural features on the selected channel of the input image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "34073499-bf9e-4305-b606-0fbe31950870",
        "parentId": "PantexTextureExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d16e4410-7b8b-41d8-836b-43a4baefc80a",
        "parentId": "PantexTextureExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_PantexTextureExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_PantexTextureExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "min_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Input image minimum. If this parameter is not set, the application will compute the minimum of the image.",
        "label": "min",
        "notNull": false
      },
      {
        "id": "max_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Input image maximum. If this parameter is not set, the application will compute the maximum of the image.",
        "label": "max",
        "notNull": false
      },
      {
        "id": "sradx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4,
        "description": "Radius of the window on which textures are computed (x direction)",
        "label": "sradx",
        "notNull": true
      },
      {
        "id": "srady_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4,
        "description": "Radius of the window on which textures are computed (y direction)",
        "label": "srady",
        "notNull": true
      },
      {
        "id": "nbin_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 8,
        "description": "Number of bins per axis for histogram generation (number of gray levels considered in the computation of co-occurance).",
        "label": "nbin",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-min\n$min_number\n-max\n$max_number\n-sradx\n$sradx_number\n-srady\n$srady_number\n-nbin\n$nbin_number"
  },
  {
    "id": "PixelValue",
    "label": "PixelValue",
    "version": "7.3.0",
    "description": "Get the value of a pixel.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "a13a0958-cade-4ffd-9ac3-f8063b315f2f",
        "parentId": "PixelValue",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_PixelValue.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "coordx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "This will be the X coordinate interpreted depending on the chosen mode",
        "label": "coordx",
        "notNull": true
      },
      {
        "id": "coordy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "This will be the Y coordinate interpreted depending on the chosen mode",
        "label": "coordy",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "index",
        "description": "Different modes can be selected, default mode is Index.",
        "label": "mode",
        "valueSet": [
          "index",
          "physical",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "mode_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "This code is used to define a geographical coordinate system. If no system is specified, WGS84 (EPSG: 4326) is used by default.",
        "label": "mode.epsg.code",
        "notNull": false
      },
      {
        "id": "cl_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Displayed channels",
        "label": "cl",
        "notNull": true
      },
      {
        "id": "value_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Pixel radiometric value",
        "label": "value",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-coordx\n$coordx_number\n-coordy\n$coordy_number\n-mode\n$mode_str\n-mode.epsg.code\n$mode_epsg_code_number\n-cl\n$cl_None\n-value\n$value_str"
  },
  {
    "id": "PolygonClassStatistics",
    "label": "PolygonClassStatistics",
    "version": "7.3.0",
    "description": "Computes statistics on a training polygon set.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "43093e58-9174-4e0d-afb0-8886ad50244d",
        "parentId": "PolygonClassStatistics",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "95e72d86-89bf-4926-8f9f-9754000e0f58",
        "parentId": "PolygonClassStatistics",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e39f545a-c160-4962-8ab5-5f1790f63541",
        "parentId": "PolygonClassStatistics",
        "name": "vec",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9efdc758-feed-43b7-84dd-ffcefc9d9a62",
        "parentId": "PolygonClassStatistics",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "91c19988-d5df-4655-9812-9c6bf13662d5",
        "parentId": "PolygonClassStatistics",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_PolygonClassStatistics_1.xml"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_PolygonClassStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "field_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Name of the field carrying the class name in the input vectors.",
        "label": "field",
        "notNull": true
      },
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Layer index to read in the input vector file.",
        "label": "layer",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-vec\n$vec\n-elev.geoid\n$elev_geoid\n-out\n$out\n-field\n$field_None\n-layer\n$layer_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "Quicklook",
    "label": "Quicklook",
    "version": "7.3.0",
    "description": "Generates a subsampled version of an image extract",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "1e7bda27-89ac-4f92-8b9e-0b79e687f41a",
        "parentId": "Quicklook",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "f534ce9a-8172-44e0-aef2-4528c2e56da9",
        "parentId": "Quicklook",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Quicklook_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Quicklook.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "cl_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Selected channels",
        "label": "cl",
        "notNull": true
      },
      {
        "id": "rox_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "first point of ROI in x-direction",
        "label": "rox",
        "notNull": true
      },
      {
        "id": "roy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "first point of ROI in y-direction",
        "label": "roy",
        "notNull": true
      },
      {
        "id": "rsx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "size of ROI in x-direction",
        "label": "rsx",
        "notNull": true
      },
      {
        "id": "rsy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "size of ROI in y-direction",
        "label": "rsy",
        "notNull": true
      },
      {
        "id": "sr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Sampling Ratio, default is 2",
        "label": "sr",
        "notNull": true
      },
      {
        "id": "sx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "quicklook size in x-direction (used if no sampling ratio is given)",
        "label": "sx",
        "notNull": false
      },
      {
        "id": "sy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "quicklook size in y-direction (used if no sampling ratio is given)",
        "label": "sy",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-cl\n$cl_None\n-rox\n$rox_number\n-roy\n$roy_number\n-rsx\n$rsx_number\n-rsy\n$rsy_number\n-sr\n$sr_number\n-sx\n$sx_number\n-sy\n$sy_number"
  },
  {
    "id": "RadiometricIndices",
    "label": "RadiometricIndices",
    "version": "7.3.0",
    "description": "Compute radiometric indices.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "05dcce7c-c106-4959-be96-29b222a28846",
        "parentId": "RadiometricIndices",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d144c2ff-5a42-41a2-a5aa-a24dc6a6c8bf",
        "parentId": "RadiometricIndices",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_RadiometricIndices_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_RadiometricIndices.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channels_blue_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Blue channel index",
        "label": "channels.blue",
        "notNull": false
      },
      {
        "id": "channels_green_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Green channel index",
        "label": "channels.green",
        "notNull": false
      },
      {
        "id": "channels_red_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Red channel index",
        "label": "channels.red",
        "notNull": false
      },
      {
        "id": "channels_nir_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "NIR channel index",
        "label": "channels.nir",
        "notNull": false
      },
      {
        "id": "channels_mir_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Mir channel index",
        "label": "channels.mir",
        "notNull": false
      },
      {
        "id": "list_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of available radiometric indices with their relevant channels in brackets:\n\n* Vegetation:NDVI - Normalized difference vegetation index (Red, NIR)\n* Vegetation:TNDVI - Transformed normalized difference vegetation index (Red, NIR)\n* Vegetation:RVI - Ratio vegetation index (Red, NIR)\n* Vegetation:SAVI - Soil adjusted vegetation index (Red, NIR)\n* Vegetation:TSAVI - Transformed soil adjusted vegetation index (Red, NIR)\n* Vegetation:MSAVI - Modified soil adjusted vegetation index (Red, NIR)\n* Vegetation:MSAVI2 - Modified soil adjusted vegetation index 2 (Red, NIR)\n* Vegetation:GEMI - Global environment monitoring index (Red, NIR)\n* Vegetation:IPVI - Infrared percentage vegetation index (Red, NIR)\n* Vegetation:LAIFromNDVILog - Leaf Area Index from log NDVI (Red, NIR)\n* Vegetation::LAIFromReflLinear - Leaf Area Index from reflectances with linear combination (Red, NIR)\n* Vegetation::LAIFromNDVIFormo - Leaf Area Index from Formosat 2  TOC (Red, NIR)\n* Water:NDWI - Normalized difference water index (Gao 1996) (NIR, MIR)\n* Water:NDWI2 - Normalized difference water index (Mc Feeters 1996) (Green, NIR)\n* Water:MNDWI - Modified normalized difference water index (Xu 2006) (Green, MIR)\n* Water:NDTI - Normalized difference turbidity index (Lacaux et al.) (Red, Green)\n* Soil:RI - Redness index (Red, Green)\n* Soil:CI - Color index (Red, Green)\n* Soil:BI - Brightness index (Red, Green)\n* Soil:BI2 - Brightness index 2 (NIR, Red, Green)\n* BuiltUp:ISU - Built Surfaces Index (NIR,Red) ",
        "label": "list",
        "notNull": true,
        "valueSet": [
          "Vegetation:NDVI", "Vegetation:TNDVI", "Vegetation:RVI", "Vegetation:SAVI", "Vegetation:TSAVI", "Vegetation:MSAVI", "Vegetation:MSAVI2",
          "Vegetation:GEMI", "Vegetation:IPVI", "Vegetation:LAIFromNDVILog", "Vegetation:LAIFromReflLinear",
          "Water:NDWI", "Water:NDWI2", "Water:MNDWI", "Water:NDTI", "Soil:RI", "Soil:CI", "Soil:BI", "Soil:BI2",
          "BuiltUp: ISU"
        ]
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channels.blue\n$channels_blue_number\n-channels.green\n$channels_green_number\n-channels.red\n$channels_red_number\n-channels.nir\n$channels_nir_number\n-channels.mir\n$channels_mir_number\n-list\n$list_None"
  },
  {
    "id": "Rasterization",
    "label": "Rasterization",
    "version": "7.3.0",
    "description": "Reproject and rasterize a vector dataset",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "8d4a8213-2f5e-4dfb-9374-9f7134014b92",
        "parentId": "Rasterization",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "412318e5-fcdc-437b-bf7d-08ae52ea5988",
        "parentId": "Rasterization",
        "name": "im",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "2c4404c1-de67-48ba-80b0-a816f18ffc75",
        "parentId": "Rasterization",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Rasterization_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Rasterization.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "szx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Output size along x axis (useless if support image is given)",
        "label": "szx",
        "notNull": false
      },
      {
        "id": "szy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Output size along y axis (useless if support image is given)",
        "label": "szy",
        "notNull": false
      },
      {
        "id": "epsg_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "EPSG code for the output projection reference system (EPSG 4326 for WGS84, 32631 for UTM31N...,useless if support image is given)",
        "label": "epsg",
        "notNull": false
      },
      {
        "id": "orx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Output upper-left corner x coordinate (useless if support image is given)",
        "label": "orx",
        "notNull": false
      },
      {
        "id": "ory_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Output upper-left corner y coordinate (useless if support image is given)",
        "label": "ory",
        "notNull": false
      },
      {
        "id": "spx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Spacing (ground sampling distance) along x axis (useless if support image is given)",
        "label": "spx",
        "notNull": false
      },
      {
        "id": "spy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Spacing (ground sampling distance) along y axis (useless if support image is given)",
        "label": "spy",
        "notNull": false
      },
      {
        "id": "background_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Default value for pixels not belonging to any geometry",
        "label": "background",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "binary",
        "description": "Choice of rasterization modes",
        "label": "mode",
        "valueSet": [
          "binary",
          "attribute"
        ],
        "notNull": true
      },
      {
        "id": "mode_binary_foreground_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Value for pixels inside a geometry",
        "label": "mode.binary.foreground",
        "notNull": true
      },
      {
        "id": "mode_attribute_field_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "DN",
        "description": "Name of the attribute field to burn",
        "label": "mode.attribute.field",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-im\n$im\n-out\n$out\n-szx\n$szx_number\n-szy\n$szy_number\n-epsg\n$epsg_number\n-orx\n$orx_number\n-ory\n$ory_number\n-spx\n$spx_number\n-spy\n$spy_number\n-background\n$background_number\n-mode\n$mode_str\n-mode.binary.foreground\n$mode_binary_foreground_number\n-mode.attribute.field\n$mode_attribute_field_str"
  },
  {
    "id": "ReadImageInfo",
    "label": "ReadImageInfo",
    "version": "7.3.0",
    "description": "Get information about the image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "a803b52c-081c-4d49-bc06-fd7ab2f3a5ed",
        "parentId": "ReadImageInfo",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8728cb8c-c23d-49cd-972d-2713b398f58c",
        "parentId": "ReadImageInfo",
        "name": "outkwl",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_ReadImageInfo_1.geom"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ReadImageInfo.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "keywordlist_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Output the OSSIM keyword list. It contains metadata information (sensor model, geometry ). Information is stored in keyword list (pairs of key/value)",
        "label": "keywordlist",
        "notNull": true
      },
      {
        "id": "indexx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "X start index",
        "label": "indexx",
        "notNull": true
      },
      {
        "id": "indexy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Y start index",
        "label": "indexy",
        "notNull": true
      },
      {
        "id": "sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "X size (in pixels)",
        "label": "sizex",
        "notNull": true
      },
      {
        "id": "sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Y size (in pixels)",
        "label": "sizey",
        "notNull": true
      },
      {
        "id": "spacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Pixel size along X (in physical units)",
        "label": "spacingx",
        "notNull": true
      },
      {
        "id": "spacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Pixel size along Y (in physical units)",
        "label": "spacingy",
        "notNull": true
      },
      {
        "id": "originx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Origin along X",
        "label": "originx",
        "notNull": true
      },
      {
        "id": "originy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Origin along Y",
        "label": "originy",
        "notNull": true
      },
      {
        "id": "estimatedgroundspacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Estimated ground spacing along X (in meters).",
        "label": "estimatedgroundspacingx",
        "notNull": true
      },
      {
        "id": "estimatedgroundspacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Estimated ground spacing along Y (in meters).",
        "label": "estimatedgroundspacingy",
        "notNull": true
      },
      {
        "id": "numberbands_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of bands",
        "label": "numberbands",
        "notNull": true
      },
      {
        "id": "datatype_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Data type",
        "label": "datatype",
        "notNull": true
      },
      {
        "id": "sensor_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Sensor identifier",
        "label": "sensor",
        "notNull": true
      },
      {
        "id": "id_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Image identifier",
        "label": "id",
        "notNull": true
      },
      {
        "id": "time_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Acquisition time.",
        "label": "time",
        "notNull": true
      },
      {
        "id": "ullat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Latitude of the upper left corner.",
        "label": "ullat",
        "notNull": true
      },
      {
        "id": "ullon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Longitude of the upper left corner.",
        "label": "ullon",
        "notNull": true
      },
      {
        "id": "urlat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Latitude of the upper right corner.",
        "label": "urlat",
        "notNull": true
      },
      {
        "id": "urlon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Longitude of the upper right corner.",
        "label": "urlon",
        "notNull": true
      },
      {
        "id": "lrlat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Latitude of the lower right corner.",
        "label": "lrlat",
        "notNull": true
      },
      {
        "id": "lrlon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Longitude of the lower right corner.",
        "label": "lrlon",
        "notNull": true
      },
      {
        "id": "lllat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Latitude of the lower left corner.",
        "label": "lllat",
        "notNull": true
      },
      {
        "id": "lllon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Longitude of the lower left corner.",
        "label": "lllon",
        "notNull": true
      },
      {
        "id": "town_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Main town near center of image",
        "label": "town",
        "notNull": true
      },
      {
        "id": "country_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Country of the image",
        "label": "country",
        "notNull": true
      },
      {
        "id": "rgb_r_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Red band Number",
        "label": "rgb.r",
        "notNull": true
      },
      {
        "id": "rgb_g_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Green band Number",
        "label": "rgb.g",
        "notNull": true
      },
      {
        "id": "rgb_b_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Blue band Number",
        "label": "rgb.b",
        "notNull": true
      },
      {
        "id": "projectionref_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Projection Coordinate System",
        "label": "projectionref",
        "notNull": true
      },
      {
        "id": "keyword_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Image keyword list",
        "label": "keyword",
        "notNull": true
      },
      {
        "id": "gcp_count_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Number of GCPs",
        "label": "gcp.count",
        "notNull": true
      },
      {
        "id": "gcp_proj_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Projection Coordinate System for GCPs",
        "label": "gcp.proj",
        "notNull": true
      },
      {
        "id": "gcp_ids_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "GCPs identifier",
        "label": "gcp.ids",
        "notNull": true
      },
      {
        "id": "gcp_info_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "GCPs Information",
        "label": "gcp.info",
        "notNull": true
      },
      {
        "id": "gcp_imcoord_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "GCPs Image coordinates",
        "label": "gcp.imcoord",
        "notNull": true
      },
      {
        "id": "gcp_geocoord_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "GCPs Geographic Coordinates",
        "label": "gcp.geocoord",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-outkwl\n$outkwl\n-keywordlist\n$keywordlist_bool\n-indexx\n$indexx_number\n-indexy\n$indexy_number\n-sizex\n$sizex_number\n-sizey\n$sizey_number\n-spacingx\n$spacingx_number\n-spacingy\n$spacingy_number\n-originx\n$originx_number\n-originy\n$originy_number\n-estimatedgroundspacingx\n$estimatedgroundspacingx_number\n-estimatedgroundspacingy\n$estimatedgroundspacingy_number\n-numberbands\n$numberbands_number\n-datatype\n$datatype_str\n-sensor\n$sensor_str\n-id\n$id_str\n-time\n$time_str\n-ullat\n$ullat_number\n-ullon\n$ullon_number\n-urlat\n$urlat_number\n-urlon\n$urlon_number\n-lrlat\n$lrlat_number\n-lrlon\n$lrlon_number\n-lllat\n$lllat_number\n-lllon\n$lllon_number\n-town\n$town_str\n-country\n$country_str\n-rgb.r\n$rgb_r_number\n-rgb.g\n$rgb_g_number\n-rgb.b\n$rgb_b_number\n-projectionref\n$projectionref_str\n-keyword\n$keyword_str\n-gcp.count\n$gcp_count_number\n-gcp.proj\n$gcp_proj_str\n-gcp.ids\n$gcp_ids_str\n-gcp.info\n$gcp_info_str\n-gcp.imcoord\n$gcp_imcoord_str\n-gcp.geocoord\n$gcp_geocoord_str"
  },
  {
    "id": "RefineSensorModel",
    "label": "RefineSensorModel",
    "version": "7.3.0",
    "description": "Perform least-square fit of a sensor model to a set of tie points",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ff01041b-8d53-44f1-8646-ee1f50f92d31",
        "parentId": "RefineSensorModel",
        "name": "ingeom",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4e3c60c1-835a-43ce-bac7-75710b139782",
        "parentId": "RefineSensorModel",
        "name": "inpoints",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d38d1908-46e1-4d7e-b0fe-2df062e122e7",
        "parentId": "RefineSensorModel",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "f03ba18f-54c0-4e66-b306-60511a3663a5",
        "parentId": "RefineSensorModel",
        "name": "outgeom",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_RefineSensorModel_1.geom"
        }
      },
      {
        "id": "afcb42df-dc3a-44ff-b38c-b386e5bbadd6",
        "parentId": "RefineSensorModel",
        "name": "outstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_RefineSensorModel_2.csv"
        }
      },
      {
        "id": "5fd1c0c7-dbd2-4de7-a460-0f1e07cff978",
        "parentId": "RefineSensorModel",
        "name": "outvector",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_RefineSensorModel_3.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_RefineSensorModel.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "map.utm.zone",
        "notNull": true
      },
      {
        "id": "map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "map.utm.northhem",
        "notNull": true
      },
      {
        "id": "map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "map.epsg.code",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-ingeom\n$ingeom\n-inpoints\n$inpoints\n-elev.geoid\n$elev_geoid\n-outgeom\n$outgeom\n-outstat\n$outstat\n-outvector\n$outvector\n-map\n$map_str\n-map.utm.zone\n$map_utm_zone_number\n-map.utm.northhem\n$map_utm_northhem_bool\n-map.epsg.code\n$map_epsg_code_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "Rescale",
    "label": "Rescale",
    "version": "7.3.0",
    "description": "Rescale the image between two given values.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6fb90f1d-817b-4774-adf5-cb9d0b249068",
        "parentId": "Rescale",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6ddd8fae-cd04-4c35-89d9-f7e6a3f8cbd7",
        "parentId": "Rescale",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Rescale_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Rescale.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "outmin_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minimum value of the output image.",
        "label": "outmin",
        "notNull": true
      },
      {
        "id": "outmax_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 255,
        "description": "Maximum value of the output image.",
        "label": "outmax",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-outmin\n$outmin_number\n-outmax\n$outmax_number"
  },
  {
    "id": "ResetMargin",
    "label": "ResetMargin",
    "version": "7.3.0",
    "description": "This is the ResetMargin application",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b7ff68b3-d9d8-438d-a7e4-bbefb79980e4",
        "parentId": "ResetMargin",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "737ec8ed-7f0f-44e8-9aa2-cef12f647db4",
        "parentId": "ResetMargin",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ResetMargin_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ResetMargin.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "threshold_y_start_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Top line index threshold",
        "label": "threshold.y.start",
        "notNull": true
      },
      {
        "id": "threshold_y_end_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Bottom line index threshold",
        "label": "threshold.y.end",
        "notNull": true
      },
      {
        "id": "threshold_x_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Column index threshold",
        "label": "threshold.x",
        "notNull": true
      },
      {
        "id": "roi_startx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "X position of ROI start (in pixels)",
        "label": "roi.startx",
        "notNull": true
      },
      {
        "id": "roi_starty_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Y position of ROI start (in pixels)",
        "label": "roi.starty",
        "notNull": true
      },
      {
        "id": "roi_sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "X size of ROI (in pixels)",
        "label": "roi.sizex",
        "notNull": true
      },
      {
        "id": "roi_sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Y size of ROI (in pixels)",
        "label": "roi.sizey",
        "notNull": true
      },
      {
        "id": "margin_top_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Top margin for ROI (in pixels)",
        "label": "margin.top",
        "notNull": true
      },
      {
        "id": "margin_bottom_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Bottom margin for ROI (in pixels)",
        "label": "margin.bottom",
        "notNull": true
      },
      {
        "id": "margin_left_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Left margin for ROI (in pixels)",
        "label": "margin.left",
        "notNull": true
      },
      {
        "id": "margin_right_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Right margin for ROI (in pixels)",
        "label": "margin.right",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "roi",
        "description": "",
        "label": "mode",
        "valueSet": [
          "roi",
          "margin",
          "threshold"
        ],
        "notNull": true
      },
      {
        "id": "fillval_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Value to insert in margins",
        "label": "fillval",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-threshold.y.start\n$threshold_y_start_number\n-threshold.y.end\n$threshold_y_end_number\n-threshold.x\n$threshold_x_number\n-roi.startx\n$roi_startx_number\n-roi.starty\n$roi_starty_number\n-roi.sizex\n$roi_sizex_number\n-roi.sizey\n$roi_sizey_number\n-margin.top\n$margin_top_number\n-margin.bottom\n$margin_bottom_number\n-margin.left\n$margin_left_number\n-margin.right\n$margin_right_number\n-mode\n$mode_str\n-fillval\n$fillval_number"
  },
  {
    "id": "RigidTransformResample",
    "label": "RigidTransformResample",
    "version": "7.3.0",
    "description": "Resample an image with a rigid transform",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7c7748f6-4f9e-4687-930e-3864cb071be3",
        "parentId": "RigidTransformResample",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "3a24aef3-683d-4c8e-aaf5-401c3bd62136",
        "parentId": "RigidTransformResample",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_RigidTransformResample_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_RigidTransformResample.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "transform_type_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "id",
        "description": "Type of transformation. Available transformations are spatial scaling, translation and rotation with scaling factor",
        "label": "transform.type",
        "valueSet": [
          "id",
          "translation",
          "rotation"
        ],
        "notNull": true
      },
      {
        "id": "transform_type_id_scalex_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scaling factor between the output X spacing and the input X spacing",
        "label": "transform.type.id.scalex",
        "notNull": true
      },
      {
        "id": "transform_type_id_scaley_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scaling factor between the output Y spacing and the input Y spacing",
        "label": "transform.type.id.scaley",
        "notNull": true
      },
      {
        "id": "transform_type_translation_tx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The translation value along X axis (in physical units).",
        "label": "transform.type.translation.tx",
        "notNull": true
      },
      {
        "id": "transform_type_translation_ty_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The translation value along Y axis (in physical units)",
        "label": "transform.type.translation.ty",
        "notNull": true
      },
      {
        "id": "transform_type_translation_scalex_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scaling factor between the output X spacing and the input X spacing",
        "label": "transform.type.translation.scalex",
        "notNull": true
      },
      {
        "id": "transform_type_translation_scaley_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scaling factor between the output Y spacing and the input Y spacing",
        "label": "transform.type.translation.scaley",
        "notNull": true
      },
      {
        "id": "transform_type_rotation_angle_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "The rotation angle in degree (values between -180 and 180)",
        "label": "transform.type.rotation.angle",
        "notNull": true
      },
      {
        "id": "transform_type_rotation_scalex_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scale factor between the X spacing of the rotated output image and the X spacing of the unrotated image",
        "label": "transform.type.rotation.scalex",
        "notNull": true
      },
      {
        "id": "transform_type_rotation_scaley_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Scale factor between the Y spacing of the rotated output image and the Y spacing of the unrotated image",
        "label": "transform.type.rotation.scaley",
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bco",
        "description": "This group of parameters allows one to define how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "nn",
          "linear",
          "bco"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "This parameter allows controlling the size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artifacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-transform.type\n$transform_type_str\n-transform.type.id.scalex\n$transform_type_id_scalex_number\n-transform.type.id.scaley\n$transform_type_id_scaley_number\n-transform.type.translation.tx\n$transform_type_translation_tx_number\n-transform.type.translation.ty\n$transform_type_translation_ty_number\n-transform.type.translation.scalex\n$transform_type_translation_scalex_number\n-transform.type.translation.scaley\n$transform_type_translation_scaley_number\n-transform.type.rotation.angle\n$transform_type_rotation_angle_number\n-transform.type.rotation.scalex\n$transform_type_rotation_scalex_number\n-transform.type.rotation.scaley\n$transform_type_rotation_scaley_number\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number"
  },
  {
    "id": "SARAddBandInterferogram",
    "label": "SARAddBandInterferogram",
    "version": "7.3.0",
    "description": "Replace an amplitude for input interferogram.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "80d5e1be-dc80-493f-bcb7-a242ac50ca9e",
        "parentId": "SARAddBandInterferogram",
        "name": "ininterfamp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6e62bcef-2708-4711-bbe7-60bf0cbc8c78",
        "parentId": "SARAddBandInterferogram",
        "name": "incomplexamp",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e2e3026f-30b1-41ec-92f8-2a17ab2e9489",
        "parentId": "SARAddBandInterferogram",
        "name": "ininterf",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d141a695-7891-4641-bfe0-03840ffc74a4",
        "parentId": "SARAddBandInterferogram",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARAddBandInterferogram_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARAddBandInterferogram.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Averaging on distance for output interferogram.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Averaging on azimut for output interferogram.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply on output amplitude",
        "label": "gain",
        "notNull": true
      }
    ],
    "templatecontents": "-ininterfamp\n$ininterfamp\n-incomplexamp\n$incomplexamp\n-ininterf\n$ininterf\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-gain\n$gain_number"
  },
  {
    "id": "SARAltAmbig",
    "label": "SARAltAmbig",
    "version": "7.3.0",
    "description": "Evaluation of ambiguity height",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "02cf6de4-e860-402a-919b-bb8c2f74b19a",
        "parentId": "SARAltAmbig",
        "name": "inlist",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "01063d68-f0c6-496a-8ffa-c7bd3de2dccd",
        "parentId": "SARAltAmbig",
        "name": "outfile",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SARAltAmbig_1.log"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARAltAmbig.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "lat_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Target Latitude (degree)",
        "label": "lat",
        "notNull": true
      },
      {
        "id": "lon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Target Longitude (degree)",
        "label": "lon",
        "notNull": true
      },
      {
        "id": "height_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Target Height (m)",
        "label": "height",
        "notNull": true
      },
      {
        "id": "bistatic_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, set the formula in bistatic mode",
        "label": "bistatic",
        "notNull": true
      }
    ],
    "templatecontents": "-inlist\n$inlist\n-outfile\n$outfile\n-lat\n$lat_number\n-lon\n$lon_number\n-height\n$height_number\n-bistatic\n$bistatic_bool"
  },
  {
    "id": "SARAmplitudeEstimation",
    "label": "SARAmplitudeEstimation",
    "version": "7.3.0",
    "description": "SAR Amplitude estimation thanks to the associated DEM.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d2f723d1-45be-4181-9b7e-32e6deec668b",
        "parentId": "SARAmplitudeEstimation",
        "name": "indemproj",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "27c05935-8cf3-4f0d-8255-9f6497b269f3",
        "parentId": "SARAmplitudeEstimation",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "11e0c668-0fe5-4026-8417-157c366072a4",
        "parentId": "SARAmplitudeEstimation",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "10c4222b-f6d4-4047-9829-66d125ed2a29",
        "parentId": "SARAmplitudeEstimation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARAmplitudeEstimation_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARAmplitudeEstimation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Multiplying gain to obtain a mean radiometry at 100.",
        "label": "gain",
        "notNull": true
      },
      {
        "id": "nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": -32768,
        "description": "No Data values for the DEM.",
        "label": "nodata",
        "notNull": true
      },
      {
        "id": "directiondemc_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Range direction for DEM scan.",
        "label": "directiondemc",
        "notNull": true
      },
      {
        "id": "directiondeml_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Azimut direction for DEM scan.",
        "label": "directiondeml",
        "notNull": true
      }
    ],
    "templatecontents": "-indemproj\n$indemproj\n-indem\n$indem\n-insar\n$insar\n-out\n$out\n-gain\n$gain_number\n-nodata\n$nodata_number\n-directiondemc\n$directiondemc_number\n-directiondeml\n$directiondeml_number"
  },
  {
    "id": "SARBurstExtraction",
    "label": "SARBurstExtraction",
    "version": "7.3.0",
    "description": "This application performs a burst extraction by keeping only lines and samples of a required burst.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "05cf765b-2928-46d7-aee3-a3f821b49db6",
        "parentId": "SARBurstExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "51ef6b8b-b0c3-4a96-a5c7-791446927243",
        "parentId": "SARBurstExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARBurstExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARBurstExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "burstindex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": -1,
        "description": "Index for the required Burst (By default -1). If this parameter remains at -1, all bursts will be extracted",
        "label": "burstindex",
        "notNull": true
      },
      {
        "id": "allpixels_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, all pixels of the current burst are selected.",
        "label": "allpixels",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-burstindex\n$burstindex_number\n-allpixels\n$allpixels_bool"
  },
  {
    "id": "SARCalibration",
    "label": "SARCalibration",
    "version": "7.3.0",
    "description": "Perform radiometric calibration of SAR images. Following sensors are supported: TerraSAR-X, Sentinel1 and Radarsat-2.Both Single Look Complex(SLC) and detected products are supported as input.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "fd9d7e56-508e-421f-886b-5fa003d182d1",
        "parentId": "SARCalibration",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "925f5bf9-8e8a-40c1-8af9-77f38b874b3e",
        "parentId": "SARCalibration",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCalibration_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCalibration.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "noise_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Flag to disable noise. For 5.2.0 release, the noise values are only read by TerraSARX product.",
        "label": "noise",
        "notNull": true
      },
      {
        "id": "lut_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sigma",
        "description": "Lookup table values are not available with all SAR products. Products that provide lookup table with metadata are: Sentinel1, Radarsat2.",
        "label": "lut",
        "valueSet": [
          "sigma",
          "beta",
          "gamma",
          "dn"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-noise\n$noise_bool\n-lut\n$lut_str"
  },
  {
    "id": "SARCartesianMeanEstimation",
    "label": "SARCartesianMeanEstimation",
    "version": "7.3.0",
    "description": "SAR Cartesian mean estimation thanks to the associated DEM.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "29dd32cb-7561-4cdd-a208-27f3dab27294",
        "parentId": "SARCartesianMeanEstimation",
        "name": "indemproj",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "cdbf74eb-f1f9-494a-b45b-7a713888ff54",
        "parentId": "SARCartesianMeanEstimation",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "0991fda7-6644-4165-b526-64acad324043",
        "parentId": "SARCartesianMeanEstimation",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "04520f7b-0f4f-4359-8ae3-5327547881cd",
        "parentId": "SARCartesianMeanEstimation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCartesianMeanEstimation_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCartesianMeanEstimation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "indirectiondemc_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Range direction for DEM scan.",
        "label": "indirectiondemc",
        "notNull": true
      },
      {
        "id": "indirectiondeml_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Azimut direction for DEM scan.",
        "label": "indirectiondeml",
        "notNull": true
      },
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on distance (output geometry)",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on azimut (output geometry)",
        "label": "mlazi",
        "notNull": true
      }
    ],
    "templatecontents": "-indemproj\n$indemproj\n-indem\n$indem\n-insar\n$insar\n-out\n$out\n-indirectiondemc\n$indirectiondemc_number\n-indirectiondeml\n$indirectiondeml_number\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number"
  },
  {
    "id": "SARCoRegistration",
    "label": "SARCoRegistration",
    "version": "7.3.0",
    "description": "CoRegistration between two SAR images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "4bb6ed5a-1ec0-4fbd-b731-d39004100eeb",
        "parentId": "SARCoRegistration",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "52eda8b9-801e-4ab7-8251-c0e721d593f6",
        "parentId": "SARCoRegistration",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "dec49743-8843-4515-9fc7-f1ca07d6ab00",
        "parentId": "SARCoRegistration",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "c1c7c2a4-f1cd-426d-93e6-b67a3ca62921",
        "parentId": "SARCoRegistration",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCoRegistration_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCoRegistration.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for range dimension into  SLC geometry.",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for azimut dimension into  SLC geometry.",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "doppler0_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Doppler 0 in azimut for SAR Slave Image.",
        "label": "doppler0",
        "notNull": true
      },
      {
        "id": "sizetiles_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 50,
        "description": "Size Tiles for output cut.",
        "label": "sizetiles",
        "notNull": true
      },
      {
        "id": "margin_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 7,
        "description": "Margin for window extractions into Slave Image.",
        "label": "margin",
        "notNull": true
      },
      {
        "id": "nbramps_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 257,
        "description": "Number of Ramps for filtering inside coregistration.",
        "label": "nbramps",
        "notNull": true
      },
      {
        "id": "cint16_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then output conversion to cInt16.",
        "label": "cint16",
        "notNull": true
      }
    ],
    "templatecontents": "-ingrid\n$ingrid\n-insarslave\n$insarslave\n-insarmaster\n$insarmaster\n-out\n$out\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-doppler0\n$doppler0_number\n-sizetiles\n$sizetiles_number\n-margin\n$margin_number\n-nbramps\n$nbramps_number\n-cint16\n$cint16_bool"
  },
  {
    "id": "SARCompensatedComplex",
    "label": "SARCompensatedComplex",
    "version": "7.3.0",
    "description": "Compensated complex into master geometry between two SAR images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "96e7dd21-9983-4591-be34-1ae1e2e8728c",
        "parentId": "SARCompensatedComplex",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "0e13da0d-09bd-428a-ad5e-1e9f8bd60131",
        "parentId": "SARCompensatedComplex",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "2c71b0fc-1007-49d2-a81b-0a827b9428c8",
        "parentId": "SARCompensatedComplex",
        "name": "topographicphase",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "c5954bc9-1977-43a8-9d56-f384823af867",
        "parentId": "SARCompensatedComplex",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCompensatedComplex_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCompensatedComplex.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-insarslave\n$insarslave\n-insarmaster\n$insarmaster\n-topographicphase\n$topographicphase\n-out\n$out"
  },
  {
    "id": "SARConcatenateBursts",
    "label": "SARConcatenateBursts",
    "version": "7.3.0",
    "description": "Concatenate a list of Bursts to provide a whole SAR Deburst Image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9a24feb8-226f-4649-b8c8-74064ad78c98",
        "parentId": "SARConcatenateBursts",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a672ef08-190f-498d-a250-fd2a483d80fc",
        "parentId": "SARConcatenateBursts",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "230870c6-84e2-4881-9145-3b9410be0994",
        "parentId": "SARConcatenateBursts",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARConcatenateBursts_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARConcatenateBursts.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "burstindex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index for the first required Burst",
        "label": "burstindex",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-insar\n$insar\n-out\n$out\n-burstindex\n$burstindex_number"
  },
  {
    "id": "SARCorrectionGrid",
    "label": "SARCorrectionGrid",
    "version": "7.3.0",
    "description": "Computes SAR correction grid.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "2903630a-cc52-43b4-8aee-a3ad3e72ee82",
        "parentId": "SARCorrectionGrid",
        "name": "indemgrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c959a262-0db3-4f7e-85b3-7d959f2334e7",
        "parentId": "SARCorrectionGrid",
        "name": "incorgrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d96f3ee1-5315-4a5a-a408-d43495173859",
        "parentId": "SARCorrectionGrid",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCorrectionGrid_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCorrectionGrid.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.30000001192092896,
        "description": "Threshold for correlation rate.",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "gap_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.699999988079071,
        "description": "Maximum difference between input grid values and mean values.",
        "label": "gap",
        "notNull": true
      },
      {
        "id": "advantage_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Give an advantage to DEM or Correlation Grid.",
        "label": "advantage",
        "notNull": false
      }
    ],
    "templatecontents": "-indemgrid\n$indemgrid\n-incorgrid\n$incorgrid\n-out\n$out\n-threshold\n$threshold_number\n-gap\n$gap_number\n-advantage\n$advantage_str"
  },
  {
    "id": "SARCorrelationGrid",
    "label": "SARCorrelationGrid",
    "version": "7.3.0",
    "description": "Computes SAR correlation shift (into temporal domain).",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ed4e9af0-f83c-4f82-819b-a84b49b3c399",
        "parentId": "SARCorrelationGrid",
        "name": "inmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1beb48aa-0360-4e5b-afac-07c695541401",
        "parentId": "SARCorrelationGrid",
        "name": "inslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "e7c24ecd-70ac-4f3e-9f10-ee06fcaa52e5",
        "parentId": "SARCorrelationGrid",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARCorrelationGrid_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCorrelationGrid.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on distance.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for range dimension (into SLC/SAR geometry).",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for azimut dimension (into SLC/SAR geometry).",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "nooffset_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "If 1, then no offset for the first L/C if output grid.",
        "label": "nooffset",
        "notNull": true
      }
    ],
    "templatecontents": "-inmaster\n$inmaster\n-inslave\n$inslave\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-nooffset\n$nooffset_number"
  },
  {
    "id": "SARCorrelationRough",
    "label": "SARCorrelationRough",
    "version": "7.3.0",
    "description": "Computes SAR correlation shift (rough shifts).",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5df2f82a-be16-4922-ae3a-e3af85ce7cd7",
        "parentId": "SARCorrelationRough",
        "name": "inmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a35d1296-cd03-4728-b52e-8fa6c813977d",
        "parentId": "SARCorrelationRough",
        "name": "inslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARCorrelationRough.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on distance.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "shiftranslc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "rough shift in range into SLC geometry.",
        "label": "shiftranslc",
        "notNull": true
      },
      {
        "id": "shiftazislc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "rough shift in azimut into SLC geometry .",
        "label": "shiftazislc",
        "notNull": true
      },
      {
        "id": "shiftranml_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "rough shift in range into ML geometry.",
        "label": "shiftranml",
        "notNull": true
      },
      {
        "id": "shiftaziml_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "rough shift in azimut into ML geometry .",
        "label": "shiftaziml",
        "notNull": true
      }
    ],
    "templatecontents": "-inmaster\n$inmaster\n-inslave\n$inslave\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-shiftranslc\n$shiftranslc_number\n-shiftazislc\n$shiftazislc_number\n-shiftranml\n$shiftranml_number\n-shiftaziml\n$shiftaziml_number"
  },
  {
    "id": "SARDEMGrid",
    "label": "SARDEMGrid",
    "version": "7.3.0",
    "description": "Computes deformation DEM grid.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9bcb496b-8969-47f8-b537-792db69e6857",
        "parentId": "SARDEMGrid",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9fcf923a-5bfc-4121-97c5-5af690f14daa",
        "parentId": "SARDEMGrid",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "b7e99d76-f644-4c0a-b849-36228783e8ba",
        "parentId": "SARDEMGrid",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "103c56b3-19eb-41fb-8996-4949fdd59993",
        "parentId": "SARDEMGrid",
        "name": "indemprojmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7cc97010-a576-4bed-898f-8f49bfa7092c",
        "parentId": "SARDEMGrid",
        "name": "indemprojslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "7183a3a9-dc2f-4d71-a87b-b23ccc415e0e",
        "parentId": "SARDEMGrid",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDEMGrid_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDEMGrid.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on distance.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for range dimension (into SLC/SAR geometry).",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for azimut dimension (into SLC/SAR geometry).",
        "label": "gridstepazimut",
        "notNull": true
      }
    ],
    "templatecontents": "-insarmaster\n$insarmaster\n-insarslave\n$insarslave\n-indem\n$indem\n-indemprojmaster\n$indemprojmaster\n-indemprojslave\n$indemprojslave\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number"
  },
  {
    "id": "SARDEMProjection",
    "label": "SARDEMProjection",
    "version": "7.3.0",
    "description": "Projects a DEM into SAR geometry.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6c76427d-4d3c-4385-8c52-335cc0ce3d3b",
        "parentId": "SARDEMProjection",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a859f4b4-0e0d-4894-9de1-59a4b636430d",
        "parentId": "SARDEMProjection",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "f998c22a-7166-4af3-afee-0b9e96a9baa3",
        "parentId": "SARDEMProjection",
        "name": "infilemetadata",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "849b0ce5-2cc3-4f8d-ba8b-3ffad4d6d0d4",
        "parentId": "SARDEMProjection",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDEMProjection_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDEMProjection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "withh_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then H components into projection.",
        "label": "withh",
        "notNull": true
      },
      {
        "id": "withxyz_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then XYZ Cartesian components into projection.",
        "label": "withxyz",
        "notNull": true
      },
      {
        "id": "withsatpos_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then SatPos components into projection.",
        "label": "withsatpos",
        "notNull": true
      },
      {
        "id": "nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": -32768,
        "description": "No Data values for the DEM.",
        "label": "nodata",
        "notNull": true
      },
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Gain value.",
        "label": "gain",
        "notNull": true
      },
      {
        "id": "directiontoscandemc_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Range direction for DEM scan.",
        "label": "directiontoscandemc",
        "notNull": true
      },
      {
        "id": "directiontoscandeml_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Azimut direction for DEM scan.",
        "label": "directiontoscandeml",
        "notNull": true
      }
    ],
    "templatecontents": "-indem\n$indem\n-insar\n$insar\n-infilemetadata\n$infilemetadata\n-out\n$out\n-withh\n$withh_bool\n-withxyz\n$withxyz_bool\n-withsatpos\n$withsatpos_bool\n-nodata\n$nodata_number\n-gain\n$gain_number\n-directiontoscandemc\n$directiontoscandemc_number\n-directiontoscandeml\n$directiontoscandeml_number"
  },
  {
    "id": "SARDEMToAmplitude",
    "label": "SARDEMToAmplitude",
    "version": "7.3.0",
    "description": "Simu_SAR step for Diapason chain.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "e3a04de2-5632-4248-8e3c-0155f9180ee4",
        "parentId": "SARDEMToAmplitude",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1047b59a-dd9d-4029-917b-1b62c333c422",
        "parentId": "SARDEMToAmplitude",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "1d8e4581-273c-4edd-b754-850552790624",
        "parentId": "SARDEMToAmplitude",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDEMToAmplitude_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDEMToAmplitude.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": -32768,
        "description": "No Data values for the DEM.",
        "label": "nodata",
        "notNull": true
      },
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on distance",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on azimut",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "mlgain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Gain to apply on ML image",
        "label": "mlgain",
        "notNull": true
      }
    ],
    "templatecontents": "-indem\n$indem\n-insar\n$insar\n-out\n$out\n-nodata\n$nodata_number\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-mlgain\n$mlgain_number"
  },
  {
    "id": "SARDeburst",
    "label": "SARDeburst",
    "version": "7.3.0",
    "description": "This application performs deburst of Sentinel1 IW SLC images by removing redundant lines.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "02cd6cea-e6e5-4be7-8fad-d7e59d5ce53a",
        "parentId": "SARDeburst",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "9106f4a7-1375-49fc-80d2-8c33d344a31b",
        "parentId": "SARDeburst",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDeburst_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDeburst.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "onlyvalidsamples_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, the selected mode is with only valid samples.",
        "label": "onlyvalidsamples",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-onlyvalidsamples\n$onlyvalidsamples_bool"
  },
  {
    "id": "SARDecompositions",
    "label": "SARDecompositions",
    "version": "7.3.0",
    "description": "From one-band complex images (each one related to an element of the Sinclair matrix), returns the selected decomposition.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "632a8645-3b75-41fd-a63b-88b67ae8bac0",
        "parentId": "SARDecompositions",
        "name": "inhh",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6382453d-8c09-4d66-8e63-7013c59b26a0",
        "parentId": "SARDecompositions",
        "name": "inhv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e53effbb-90e3-4335-a822-5dd840d554b4",
        "parentId": "SARDecompositions",
        "name": "invh",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c0db3c77-7aea-48b1-b9b7-ab9d2fb56d09",
        "parentId": "SARDecompositions",
        "name": "invv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "881c62f6-1923-44e9-b4dd-690319714e81",
        "parentId": "SARDecompositions",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDecompositions_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDecompositions.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "decomp_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "haa",
        "description": "",
        "label": "decomp",
        "valueSet": [
          "haa",
          "barnes",
          "huynen",
          "pauli"
        ],
        "notNull": true
      },
      {
        "id": "inco_kernelsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Minute (0-59)",
        "label": "inco.kernelsize",
        "notNull": true
      }
    ],
    "templatecontents": "-inhh\n$inhh\n-inhv\n$inhv\n-invh\n$invh\n-invv\n$invv\n-out\n$out\n-decomp\n$decomp_str\n-inco.kernelsize\n$inco_kernelsize_number"
  },
  {
    "id": "SARDeramp",
    "label": "SARDeramp",
    "version": "7.3.0",
    "description": "Deramping/Reramping of S1 IW Burst.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "0fc8315c-d09b-42ef-a1c3-dc84aa8ebac3",
        "parentId": "SARDeramp",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "24d49ace-3a31-4627-810b-2b716bdf0dfd",
        "parentId": "SARDeramp",
        "name": "inslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d7930579-dff8-474c-8ead-e1487969d5b4",
        "parentId": "SARDeramp",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "5a17694e-19e6-43ce-81e8-ea55247d1fa0",
        "parentId": "SARDeramp",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARDeramp_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDeramp.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for range dimension into  SLC geometry.",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for azimut dimension into  SLC geometry.",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "reramp_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then reramping else deramping.",
        "label": "reramp",
        "notNull": true
      },
      {
        "id": "shift_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, reramp/deramp accordingly a deformation grid (interferometry processing).",
        "label": "shift",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-inslave\n$inslave\n-ingrid\n$ingrid\n-out\n$out\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-reramp\n$reramp_bool\n-shift\n$shift_bool"
  },
  {
    "id": "SARDoppler0",
    "label": "SARDoppler0",
    "version": "7.3.0",
    "description": "SAR Doppler 0 calculation.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5ab89d1f-d7d2-43e3-80b6-a65ec3dd4e3b",
        "parentId": "SARDoppler0",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "0baa3240-a389-4170-be0b-f7534be025ef",
        "parentId": "SARDoppler0",
        "name": "outfile",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SARDoppler0_1.txt"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARDoppler0.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "doppler0_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Doppler0 value.",
        "label": "doppler0",
        "notNull": true
      }
    ],
    "templatecontents": "-insar\n$insar\n-outfile\n$outfile\n-doppler0\n$doppler0_number"
  },
  {
    "id": "SARESD",
    "label": "SARESD",
    "version": "7.3.0",
    "description": "ESD processing to correct phase between two bursts.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "98e5e4e3-4911-4799-8bf2-782dee3fad7e",
        "parentId": "SARESD",
        "name": "ininterfup",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6aab2830-d9b5-4e49-976d-92860b986b1c",
        "parentId": "SARESD",
        "name": "ininterflow",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7604d6ba-1dee-40e6-8067-8138fbdbddaf",
        "parentId": "SARESD",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ba9ae7de-599d-4e5a-8b76-9dea8d3aec20",
        "parentId": "SARESD",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARESD_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARESD.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "burstindex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index of first interferogram.",
        "label": "burstindex",
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.30000001192092896,
        "description": "Threshold for correlation rate.",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Averaging on azimut",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "azishift_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Azimut shift to correct phase jump.",
        "label": "azishift",
        "notNull": true
      }
    ],
    "templatecontents": "-ininterfup\n$ininterfup\n-ininterflow\n$ininterflow\n-insar\n$insar\n-out\n$out\n-burstindex\n$burstindex_number\n-threshold\n$threshold_number\n-mlazi\n$mlazi_number\n-azishift\n$azishift_number"
  },
  {
    "id": "SARFineDeformationGrid",
    "label": "SARFineDeformationGrid",
    "version": "7.3.0",
    "description": "geo_grid step for Diapason chain.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b3c9f2a5-55e8-44f3-861f-5cbf4fe39637",
        "parentId": "SARFineDeformationGrid",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e47f6b30-cf70-4978-a004-8cf44879992f",
        "parentId": "SARFineDeformationGrid",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "97f1747a-3b03-45de-bac2-3fff5369e63a",
        "parentId": "SARFineDeformationGrid",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "0311597d-ee70-45e2-bf42-c3e126fa7ad7",
        "parentId": "SARFineDeformationGrid",
        "name": "inmlmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7aafe9f9-8636-465f-ad82-9838ea316083",
        "parentId": "SARFineDeformationGrid",
        "name": "inmlslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9826cc45-c3cd-4a9d-8015-c0bee7837577",
        "parentId": "SARFineDeformationGrid",
        "name": "indemprojmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d26ba307-62df-4023-9cac-befdd47c4bb8",
        "parentId": "SARFineDeformationGrid",
        "name": "indemprojslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "aa2eca2d-6f60-4d19-8937-24fc23a185e6",
        "parentId": "SARFineDeformationGrid",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARFineDeformationGrid_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARFineDeformationGrid.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on distance.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "MultiLook factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for range dimension (into SLC/SAR geometry).",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid step for azimut dimension (into SLC/SAR geometry).",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.30000001192092896,
        "description": "Threshold for correlation rate.",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "gap_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.699999988079071,
        "description": "Maximum difference between input grid values and mean values.",
        "label": "gap",
        "notNull": true
      },
      {
        "id": "advantage_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Give an advantage to DEM or Correlation Grid.",
        "label": "advantage",
        "notNull": false
      }
    ],
    "templatecontents": "-indem\n$indem\n-insarmaster\n$insarmaster\n-insarslave\n$insarslave\n-inmlmaster\n$inmlmaster\n-inmlslave\n$inmlslave\n-indemprojmaster\n$indemprojmaster\n-indemprojslave\n$indemprojslave\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-threshold\n$threshold_number\n-gap\n$gap_number\n-advantage\n$advantage_str"
  },
  {
    "id": "SARFineMetadata",
    "label": "SARFineMetadata",
    "version": "7.3.0",
    "description": "SAR metadata correction.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "58732743-885c-4401-ba86-29abb8cde8d6",
        "parentId": "SARFineMetadata",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c7c3f1f2-ce61-4df8-81fc-81e868e41c68",
        "parentId": "SARFineMetadata",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "14eec976-da24-4aa2-8483-8b1943d12b34",
        "parentId": "SARFineMetadata",
        "name": "outfile",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SARFineMetadata_1.txt"
        }
      },
      {
        "id": "eb7b3daf-16ef-4056-8e56-bcba091305fe",
        "parentId": "SARFineMetadata",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARFineMetadata_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARFineMetadata.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "stepmax_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Max step for histogram.",
        "label": "stepmax",
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.30000001192092896,
        "description": "Threshold on correlation rate.",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "timefirstline_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Time of the first line (output of this application).",
        "label": "timefirstline",
        "notNull": true
      },
      {
        "id": "slantrange_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Slant near range (output of this application).",
        "label": "slantrange",
        "notNull": true
      }
    ],
    "templatecontents": "-ingrid\n$ingrid\n-insar\n$insar\n-outfile\n$outfile\n-out\n$out\n-stepmax\n$stepmax_number\n-threshold\n$threshold_number\n-timefirstline\n$timefirstline_str\n-slantrange\n$slantrange_number"
  },
  {
    "id": "SARGridOffset",
    "label": "SARGridOffset",
    "version": "7.3.0",
    "description": "Applies offsets on a deformation grid.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d9a676ae-653a-4311-aef9-ee5ab15350c9",
        "parentId": "SARGridOffset",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "eeb52b97-00eb-46e3-a2de-356695bf2d0b",
        "parentId": "SARGridOffset",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARGridOffset_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARGridOffset.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "offsetran_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Offset on distance",
        "label": "offsetran",
        "notNull": true
      },
      {
        "id": "offsetazi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Offset on azimut",
        "label": "offsetazi",
        "notNull": true
      }
    ],
    "templatecontents": "-ingrid\n$ingrid\n-out\n$out\n-offsetran\n$offsetran_number\n-offsetazi\n$offsetazi_number"
  },
  {
    "id": "SARGridStatistics",
    "label": "SARGridStatistics",
    "version": "7.3.0",
    "description": "Computes grid statistics.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ca82ce35-989b-44c5-90e3-eb056c3d65b4",
        "parentId": "SARGridStatistics",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARGridStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.30000001192092896,
        "description": "Threshold for computation of mean shift (used only if grid components are superior or equal to 3).",
        "label": "threshold",
        "notNull": true
      },
      {
        "id": "minran_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minumum shift on range.",
        "label": "minran",
        "notNull": true
      },
      {
        "id": "minazi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Minumum shift on azimut.",
        "label": "minazi",
        "notNull": true
      },
      {
        "id": "maxran_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Maximum shift on range.",
        "label": "maxran",
        "notNull": true
      },
      {
        "id": "maxazi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Maximum shift on azimut.",
        "label": "maxazi",
        "notNull": true
      },
      {
        "id": "meanran_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Mean shift on range.",
        "label": "meanran",
        "notNull": true
      },
      {
        "id": "meanazi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Mean shift on azimut.",
        "label": "meanazi",
        "notNull": true
      }
    ],
    "templatecontents": "-ingrid\n$ingrid\n-threshold\n$threshold_number\n-minran\n$minran_number\n-minazi\n$minazi_number\n-maxran\n$maxran_number\n-maxazi\n$maxazi_number\n-meanran\n$meanran_number\n-meanazi\n$meanazi_number"
  },
  {
    "id": "SARInterferogram",
    "label": "SARInterferogram",
    "version": "7.3.0",
    "description": "Interferogram between two SAR images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "9bb766e0-7ca4-407c-9e98-0b7eabc4d121",
        "parentId": "SARInterferogram",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "2d3d9433-9fa5-4153-bd84-7b6fecb9ade0",
        "parentId": "SARInterferogram",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "f5ba137d-e955-4512-8615-33b88ee7b9fc",
        "parentId": "SARInterferogram",
        "name": "topographicphase",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "51acfaa4-1879-490d-9759-801171d2c7d9",
        "parentId": "SARInterferogram",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARInterferogram_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARInterferogram.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on distance",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on azimut",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "marginran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Margin on distance for averaging",
        "label": "marginran",
        "notNull": true
      },
      {
        "id": "marginazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Margin on azimut for averaging",
        "label": "marginazi",
        "notNull": true
      },
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply for amplitude estimation",
        "label": "gain",
        "notNull": true
      }
    ],
    "templatecontents": "-insarslave\n$insarslave\n-insarmaster\n$insarmaster\n-topographicphase\n$topographicphase\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-marginran\n$marginran_number\n-marginazi\n$marginazi_number\n-gain\n$gain_number"
  },
  {
    "id": "SARMetadataCorrection",
    "label": "SARMetadataCorrection",
    "version": "7.3.0",
    "description": "SAR metadata correction.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "17031e22-8ddd-438d-ad8b-bb67b6617958",
        "parentId": "SARMetadataCorrection",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "486e446c-6aa3-4ef7-aa3b-5a5c1ff34baf",
        "parentId": "SARMetadataCorrection",
        "name": "insar",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7531a6d9-5236-4b46-8cd9-e17eeddfb5fd",
        "parentId": "SARMetadataCorrection",
        "name": "infineorbits",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "c0125a85-b56e-4df0-a0e4-97ce363d0841",
        "parentId": "SARMetadataCorrection",
        "name": "outkwl",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SARMetadataCorrection_1.geom"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARMetadataCorrection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "auto",
        "description": "",
        "label": "mode",
        "valueSet": [
          "auto",
          "gcp",
          "orbits"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-indem\n$indem\n-insar\n$insar\n-infineorbits\n$infineorbits\n-outkwl\n$outkwl\n-mode\n$mode_str"
  },
  {
    "id": "SARMultiLook",
    "label": "SARMultiLook",
    "version": "7.3.0",
    "description": "SAR Multi-Look creation.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "ade87919-c8b9-4f5d-86cd-2386f19b8620",
        "parentId": "SARMultiLook",
        "name": "incomplex",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "67679057-b5c2-47fe-9ee7-1f0951aa11db",
        "parentId": "SARMultiLook",
        "name": "inreal",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ed9d6f03-fc52-48a2-8164-1229ede1bedf",
        "parentId": "SARMultiLook",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARMultiLook_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARMultiLook.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on distance",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "Averaging on azimut",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "mlgain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply on ML image",
        "label": "mlgain",
        "notNull": true
      }
    ],
    "templatecontents": "-incomplex\n$incomplex\n-inreal\n$inreal\n-out\n$out\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-mlgain\n$mlgain_number"
  },
  {
    "id": "SAROrthoInterferogram",
    "label": "SAROrthoInterferogram",
    "version": "7.3.0",
    "description": "Interferogram into ground geometry between two SAR images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "cb22633b-7462-4cc2-b331-744913a6abdc",
        "parentId": "SAROrthoInterferogram",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c919f839-2d65-4398-9d04-34ba74eb29f3",
        "parentId": "SAROrthoInterferogram",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "c9939336-0b0a-4216-81d3-47381a0e7aab",
        "parentId": "SAROrthoInterferogram",
        "name": "topographicphase",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7ccb3f92-3327-4a4f-81e6-713b7fcbfd0b",
        "parentId": "SAROrthoInterferogram",
        "name": "incartmeanmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e1bf29ac-28b1-49f3-8095-ce04e8aa974d",
        "parentId": "SAROrthoInterferogram",
        "name": "indem",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "89263a1f-cdde-4d6b-b5ab-7dd4bb657a81",
        "parentId": "SAROrthoInterferogram",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SAROrthoInterferogram_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SAROrthoInterferogram.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply for amplitude estimation",
        "label": "gain",
        "notNull": true
      },
      {
        "id": "margin_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Margin to enlarge SAR scan for calculation",
        "label": "margin",
        "notNull": true
      },
      {
        "id": "streamingsizevalue_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3000,
        "description": "Value to specify the streaming size (in MB)",
        "label": "streamingsizevalue",
        "notNull": true
      }
    ],
    "templatecontents": "-insarslave\n$insarslave\n-insarmaster\n$insarmaster\n-topographicphase\n$topographicphase\n-incartmeanmaster\n$incartmeanmaster\n-indem\n$indem\n-out\n$out\n-gain\n$gain_number\n-margin\n$margin_number\n-streamingsizevalue\n$streamingsizevalue_number"
  },
  {
    "id": "SARPhaseFiltering",
    "label": "SARPhaseFiltering",
    "version": "7.3.0",
    "description": "Phase filtering for input interferogram.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "1e681841-b60a-478f-87db-f301013a7dd9",
        "parentId": "SARPhaseFiltering",
        "name": "incomplex",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "fe3238a3-7857-439f-abf3-55b2cf7b0fbd",
        "parentId": "SARPhaseFiltering",
        "name": "ininterf",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d07121c7-c556-477e-a962-f79374e6d8f1",
        "parentId": "SARPhaseFiltering",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARPhaseFiltering_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARPhaseFiltering.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "sizetiles_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 64,
        "description": "Size Tiles for output cut.",
        "label": "sizetiles",
        "notNull": true
      },
      {
        "id": "step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 16,
        "description": "Step for window extractions.",
        "label": "step",
        "notNull": true
      },
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Averaging on distance for output interferogram.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Averaging on azimut for output interferogram.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply on output amplitude",
        "label": "gain",
        "notNull": true
      },
      {
        "id": "alpha_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.699999988079071,
        "description": "alpha parameter for Goldstein filter.",
        "label": "alpha",
        "notNull": true
      }
    ],
    "templatecontents": "-incomplex\n$incomplex\n-ininterf\n$ininterf\n-out\n$out\n-sizetiles\n$sizetiles_number\n-step\n$step_number\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-gain\n$gain_number\n-alpha\n$alpha_number"
  },
  {
    "id": "SARPolarMatrixConvert",
    "label": "SARPolarMatrixConvert",
    "version": "7.3.0",
    "description": "This applications allows converting classical polarimetric matrices to each other.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "aade47bb-357e-41b6-962a-359fc2cff3a6",
        "parentId": "SARPolarMatrixConvert",
        "name": "inc",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "0275f2aa-3f21-4d4c-901e-5a389e7c6463",
        "parentId": "SARPolarMatrixConvert",
        "name": "inf",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8534d359-6aea-49c2-aa62-8f821599f391",
        "parentId": "SARPolarMatrixConvert",
        "name": "inhh",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e344b94f-cdc6-41a7-bcb4-8de843c21208",
        "parentId": "SARPolarMatrixConvert",
        "name": "inhv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9f8ecfeb-1c0e-49d4-bd33-13f17bbe49c8",
        "parentId": "SARPolarMatrixConvert",
        "name": "invh",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "faac5500-c93e-47c5-afc9-9685f58b9f40",
        "parentId": "SARPolarMatrixConvert",
        "name": "invv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "80cf1851-c7bb-4c7a-856d-a801b7273678",
        "parentId": "SARPolarMatrixConvert",
        "name": "outc",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARPolarMatrixConvert_1.tif"
        }
      },
      {
        "id": "70f05fe1-9800-489d-9266-0aa386dbe967",
        "parentId": "SARPolarMatrixConvert",
        "name": "outf",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARPolarMatrixConvert_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARPolarMatrixConvert.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "conv_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "msinclairtocoherency",
        "description": "",
        "label": "conv",
        "valueSet": [
          "msinclairtocoherency",
          "msinclairtocovariance",
          "msinclairtocircovariance",
          "mcoherencytomueller",
          "mcovariancetocoherencydegree",
          "mcovariancetocoherency",
          "mlinearcovariancetocircularcovariance",
          "muellertomcovariance",
          "bsinclairtocoherency",
          "bsinclairtocovariance",
          "bsinclairtocircovariance",
          "sinclairtomueller",
          "muellertopoldegandpower"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-inc\n$inc\n-inf\n$inf\n-inhh\n$inhh\n-inhv\n$inhv\n-invh\n$invh\n-invv\n$invv\n-outc\n$outc\n-outf\n$outf\n-conv\n$conv_str"
  },
  {
    "id": "SARPolarSynth",
    "label": "SARPolarSynth",
    "version": "7.3.0",
    "description": "Gives, for each pixel, the power that would have been received by a SAR system with a basis different from the classical (H,V) one (polarimetric synthetis).",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d3626ca3-60d4-48dc-a395-36b9d5a6bb31",
        "parentId": "SARPolarSynth",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "56538629-ecbf-4cfd-b1e8-194965f305d9",
        "parentId": "SARPolarSynth",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARPolarSynth_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARPolarSynth.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "psii_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Orientation (transmitting antenna)",
        "label": "psii",
        "notNull": true
      },
      {
        "id": "khii_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Ellipticity (transmitting antenna)",
        "label": "khii",
        "notNull": true
      },
      {
        "id": "psir_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Orientation (receiving antenna)",
        "label": "psir",
        "notNull": true
      },
      {
        "id": "khir_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Ellipticity (receiving antenna)",
        "label": "khir",
        "notNull": true
      },
      {
        "id": "emissionh_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "This parameter is useful in determining the polarization architecture (dual polarization case).",
        "label": "emissionh",
        "notNull": true
      },
      {
        "id": "emissionv_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "This parameter is useful in determining the polarization architecture (dual polarization case).",
        "label": "emissionv",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "none",
        "description": "",
        "label": "mode",
        "valueSet": [
          "none",
          "co",
          "cross"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-psii\n$psii_number\n-khii\n$khii_number\n-psir\n$psir_number\n-khir\n$khir_number\n-emissionh\n$emissionh_number\n-emissionv\n$emissionv_number\n-mode\n$mode_str"
  },
  {
    "id": "SARRobustInterferogram",
    "label": "SARRobustInterferogram",
    "version": "7.3.0",
    "description": "Estimates robust interferogram with flatenning and averaging.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d4e0cd27-8ccb-4216-b09a-c5bee954d8ed",
        "parentId": "SARRobustInterferogram",
        "name": "incoregistratedslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "15999a3f-bfc0-4403-9a87-cdb1a5a14a9f",
        "parentId": "SARRobustInterferogram",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "fa45ee49-c3c2-465d-add0-26278d4cc6e8",
        "parentId": "SARRobustInterferogram",
        "name": "insarmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "89309101-d72e-4ac6-ac45-0cd1fc3d8398",
        "parentId": "SARRobustInterferogram",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "2f949913-5ea4-48e2-9e51-1ea70a35fedc",
        "parentId": "SARRobustInterferogram",
        "name": "incartmeanmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d2fa0498-5242-451d-83ec-aef816114c49",
        "parentId": "SARRobustInterferogram",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARRobustInterferogram_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARRobustInterferogram.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for range dimension into  SLC geometry.",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for azimut dimension into  SLC geometry.",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on range.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "marginran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Margin on distance for averaging",
        "label": "marginran",
        "notNull": true
      },
      {
        "id": "marginazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Margin on azimut for averaging",
        "label": "marginazi",
        "notNull": true
      },
      {
        "id": "gain_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Gain to apply for amplitude estimation",
        "label": "gain",
        "notNull": true
      }
    ],
    "templatecontents": "-incoregistratedslave\n$incoregistratedslave\n-insarslave\n$insarslave\n-insarmaster\n$insarmaster\n-ingrid\n$ingrid\n-incartmeanmaster\n$incartmeanmaster\n-out\n$out\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-marginran\n$marginran_number\n-marginazi\n$marginazi_number\n-gain\n$gain_number"
  },
  {
    "id": "SARTopographicPhase",
    "label": "SARTopographicPhase",
    "version": "7.3.0",
    "description": "Estimates topographic phase for interferogram.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RADAR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "f48170f5-2c59-4b77-8190-154ccd052470",
        "parentId": "SARTopographicPhase",
        "name": "ingrid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "7cafb999-59d5-440a-8d3f-713350c951af",
        "parentId": "SARTopographicPhase",
        "name": "insarslave",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6c73744c-6be3-494d-8c95-d609df059002",
        "parentId": "SARTopographicPhase",
        "name": "incartmeanmaster",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "2dd0a336-6256-44ad-9962-0d5d7e633fbe",
        "parentId": "SARTopographicPhase",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SARTopographicPhase_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SARTopographicPhase.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "gridsteprange_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for range dimension into  SLC geometry.",
        "label": "gridsteprange",
        "notNull": true
      },
      {
        "id": "gridstepazimut_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 150,
        "description": "Grid Step for azimut dimension into  SLC geometry.",
        "label": "gridstepazimut",
        "notNull": true
      },
      {
        "id": "mlran_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on range.",
        "label": "mlran",
        "notNull": true
      },
      {
        "id": "mlazi_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 3,
        "description": "ML factor on azimut.",
        "label": "mlazi",
        "notNull": true
      },
      {
        "id": "cartcopy_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, Copy cartesian coordonates into output.",
        "label": "cartcopy",
        "notNull": true
      }
    ],
    "templatecontents": "-ingrid\n$ingrid\n-insarslave\n$insarslave\n-incartmeanmaster\n$incartmeanmaster\n-out\n$out\n-gridsteprange\n$gridsteprange_number\n-gridstepazimut\n$gridstepazimut_number\n-mlran\n$mlran_number\n-mlazi\n$mlazi_number\n-cartcopy\n$cartcopy_bool"
  },
  {
    "id": "SFSTextureExtraction",
    "label": "SFSTextureExtraction",
    "version": "7.3.0",
    "description": "Computes Structural Feature Set textures on every pixel of the input image selected channel",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "c2c92866-5a26-48e6-8296-37801df43fb9",
        "parentId": "SFSTextureExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "13a47990-e18f-45e6-a17d-03eb467253c9",
        "parentId": "SFSTextureExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SFSTextureExtraction_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SFSTextureExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The selected channel index",
        "label": "channel",
        "notNull": true
      },
      {
        "id": "parameters_spethre_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 50,
        "description": "Spectral Threshold",
        "label": "parameters.spethre",
        "notNull": true
      },
      {
        "id": "parameters_spathre_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Spatial Threshold",
        "label": "parameters.spathre",
        "notNull": true
      },
      {
        "id": "parameters_nbdir_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 20,
        "description": "Number of Direction",
        "label": "parameters.nbdir",
        "notNull": true
      },
      {
        "id": "parameters_alpha_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha",
        "label": "parameters.alpha",
        "notNull": true
      },
      {
        "id": "parameters_maxcons_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Ratio Maximum Consideration Number",
        "label": "parameters.maxcons",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-channel\n$channel_number\n-parameters.spethre\n$parameters_spethre_number\n-parameters.spathre\n$parameters_spathre_number\n-parameters.nbdir\n$parameters_nbdir_number\n-parameters.alpha\n$parameters_alpha_number\n-parameters.maxcons\n$parameters_maxcons_number"
  },
  {
    "id": "SOMClassification",
    "label": "SOMClassification",
    "version": "7.3.0",
    "description": "SOM image classification.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "079e6905-aa83-4ec1-b156-2ee69b101a90",
        "parentId": "SOMClassification",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "b5236912-93e2-4136-a37e-6c575c13c906",
        "parentId": "SOMClassification",
        "name": "vm",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "a1ea85e3-b349-4346-9f3a-ce5cb4d9c1bf",
        "parentId": "SOMClassification",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SOMClassification_1.tif"
        }
      },
      {
        "id": "35508275-2551-496f-a467-717e9bcb982a",
        "parentId": "SOMClassification",
        "name": "som",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SOMClassification_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SOMClassification.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "tp_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Probability for a sample to be selected in the training set",
        "label": "tp",
        "notNull": true
      },
      {
        "id": "ts_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Maximum training set size (in pixels)",
        "label": "ts",
        "notNull": false
      },
      {
        "id": "sx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "X size of the SOM map",
        "label": "sx",
        "notNull": true
      },
      {
        "id": "sy_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "Y size of the SOM map",
        "label": "sy",
        "notNull": true
      },
      {
        "id": "nx_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "X size of the initial neighborhood in the SOM map",
        "label": "nx",
        "notNull": true
      },
      {
        "id": "ny_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Y size of the initial neighborhood in the SOM map",
        "label": "ny",
        "notNull": true
      },
      {
        "id": "ni_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Number of iterations for SOM learning",
        "label": "ni",
        "notNull": true
      },
      {
        "id": "bi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Initial learning coefficient",
        "label": "bi",
        "notNull": true
      },
      {
        "id": "bf_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Final learning coefficient",
        "label": "bf",
        "notNull": true
      },
      {
        "id": "iv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Maximum initial neuron weight",
        "label": "iv",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-vm\n$vm\n-out\n$out\n-som\n$som\n-tp\n$tp_number\n-ts\n$ts_number\n-sx\n$sx_number\n-sy\n$sy_number\n-nx\n$nx_number\n-ny\n$ny_number\n-ni\n$ni_number\n-bi\n$bi_number\n-bf\n$bf_number\n-iv\n$iv_number\n-rand\n$rand_number"
  },
  {
    "id": "SampleAugmentation",
    "label": "SampleAugmentation",
    "version": "7.3.0",
    "description": "Generates synthetic samples from a sample data file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7e32469d-434b-47b8-ae76-a1e9cd034ccf",
        "parentId": "SampleAugmentation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8e690683-de95-428d-b13f-f6c095eba7ae",
        "parentId": "SampleAugmentation",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SampleAugmentation_1.sqlite"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SampleAugmentation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "field_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Name of the field carrying the class name in the input vectors.",
        "label": "field",
        "notNull": true
      },
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Layer index to read in the input vector file.",
        "label": "layer",
        "notNull": true
      },
      {
        "id": "label_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Label of the class of the input file for which new samples will be generated.",
        "label": "label",
        "notNull": true
      },
      {
        "id": "samples_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Number of synthetic samples that will be generated.",
        "label": "samples",
        "notNull": true
      },
      {
        "id": "exclude_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data that will not be generated in the output file.",
        "label": "exclude",
        "notNull": true
      },
      {
        "id": "strategy_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "replicate",
        "description": "",
        "label": "strategy",
        "valueSet": [
          "replicate",
          "jitter",
          "smote"
        ],
        "notNull": true
      },
      {
        "id": "strategy_jitter_stdfactor_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 10,
        "description": "The noise added to the input samples will have the standard deviation of the input features divided by the value of this parameter. ",
        "label": "strategy.jitter.stdfactor",
        "notNull": true
      },
      {
        "id": "strategy_smote_neighbors_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Number of nearest neighbors to be used in the SMOTE algorithm",
        "label": "strategy.smote.neighbors",
        "notNull": true
      },
      {
        "id": "seed_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "seed",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-field\n$field_None\n-layer\n$layer_number\n-label\n$label_number\n-samples\n$samples_number\n-exclude\n$exclude_None\n-strategy\n$strategy_str\n-strategy.jitter.stdfactor\n$strategy_jitter_stdfactor_number\n-strategy.smote.neighbors\n$strategy_smote_neighbors_number\n-seed\n$seed_number"
  },
  {
    "id": "SampleExtraction",
    "label": "SampleExtraction",
    "version": "7.3.0",
    "description": "Extracts samples values from an image.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d1cabb75-502d-4ca3-bf63-b35447188219",
        "parentId": "SampleExtraction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "90ad7a39-fd31-4d8d-89c4-893b9264f0ae",
        "parentId": "SampleExtraction",
        "name": "vec",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ff0c535d-6366-48da-9c7a-df6c39e5e879",
        "parentId": "SampleExtraction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SampleExtraction_1.sqlite"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SampleExtraction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "outfield_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "prefix",
        "description": "Choice between naming method for output fields",
        "label": "outfield",
        "valueSet": [
          "prefix",
          "list"
        ],
        "notNull": true
      },
      {
        "id": "outfield_prefix_name_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "value_",
        "description": "Prefix used to form the field names thatwill contain the extracted values.",
        "label": "outfield.prefix.name",
        "notNull": true
      },
      {
        "id": "outfield_list_names_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Full list of output field names.",
        "label": "outfield.list.names",
        "notNull": true
      },
      {
        "id": "field_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Name of the field carrying the class name in the input vectors.",
        "label": "field",
        "notNull": true
      },
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Layer index to read in the input vector file.",
        "label": "layer",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-vec\n$vec\n-out\n$out\n-outfield\n$outfield_str\n-outfield.prefix.name\n$outfield_prefix_name_str\n-outfield.list.names\n$outfield_list_names_str\n-field\n$field_None\n-layer\n$layer_number"
  },
  {
    "id": "SampleSelection",
    "label": "SampleSelection",
    "version": "7.3.0",
    "description": "Selects samples from a training vector data set.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "f55684ac-2813-49fd-a82b-75b6fde2d77b",
        "parentId": "SampleSelection",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "958c9b4a-2b14-4a88-9952-347b67203927",
        "parentId": "SampleSelection",
        "name": "mask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "72a0757b-0abb-45d9-af45-8f3cb0c7b355",
        "parentId": "SampleSelection",
        "name": "vec",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e77b501c-7f59-4287-bacd-14c66ad445c7",
        "parentId": "SampleSelection",
        "name": "instats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1441f56f-fa90-4174-9c16-d0757962c0be",
        "parentId": "SampleSelection",
        "name": "strategy.byclass.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "ccfe9c83-de9e-4a30-82d2-ad2c4d098241",
        "parentId": "SampleSelection",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "c4de00f7-8955-4453-ad49-365776c8fcad",
        "parentId": "SampleSelection",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SampleSelection_1.geom"
        }
      },
      {
        "id": "45fd5dc6-bb31-483a-b53c-d0d6e03a47b2",
        "parentId": "SampleSelection",
        "name": "outrates",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_SampleSelection_2.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SampleSelection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "sampler_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "periodic",
        "description": "Type of sampling (periodic, pattern based, random)",
        "label": "sampler",
        "valueSet": [
          "periodic",
          "random"
        ],
        "notNull": true
      },
      {
        "id": "sampler_periodic_jitter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Jitter amplitude added during sample selection (0 = no jitter)",
        "label": "sampler.periodic.jitter",
        "notNull": true
      },
      {
        "id": "strategy_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "smallest",
        "description": "",
        "label": "strategy",
        "valueSet": [
          "byclass",
          "constant",
          "percent",
          "total",
          "smallest",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "strategy_constant_nb_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of samples for all classes",
        "label": "strategy.constant.nb",
        "notNull": true
      },
      {
        "id": "strategy_percent_p_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "The percentage to use",
        "label": "strategy.percent.p",
        "notNull": true
      },
      {
        "id": "strategy_total_v_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "The number of samples to generate",
        "label": "strategy.total.v",
        "notNull": true
      },
      {
        "id": "field_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Name of the field carrying the class name in the input vectors.",
        "label": "field",
        "notNull": true
      },
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Layer index to read in the input vector file.",
        "label": "layer",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-mask\n$mask\n-vec\n$vec\n-instats\n$instats\n-strategy.byclass.in\n$strategy_byclass_in\n-elev.geoid\n$elev_geoid\n-out\n$out\n-outrates\n$outrates\n-sampler\n$sampler_str\n-sampler.periodic.jitter\n$sampler_periodic_jitter_number\n-strategy\n$strategy_str\n-strategy.constant.nb\n$strategy_constant_nb_number\n-strategy.percent.p\n$strategy_percent_p_number\n-strategy.total.v\n$strategy_total_v_number\n-field\n$field_None\n-layer\n$layer_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-rand\n$rand_number"
  },
  {
    "id": "Segmentation",
    "label": "Segmentation",
    "version": "7.3.0",
    "description": "Performs segmentation of an image, and output either a raster or a vector file. In vector mode, large input datasets are supported.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "2ca852bb-a3e2-4573-9727-30386ff8da28",
        "parentId": "Segmentation",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "554a1492-03c3-4b79-a19c-39885f73bcee",
        "parentId": "Segmentation",
        "name": "mode.vector.inmask",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "545670d4-eaa7-411c-b7a6-a70c70b5932e",
        "parentId": "Segmentation",
        "name": "mode.vector.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_Segmentation_1.sqlite"
        }
      },
      {
        "id": "ae63328d-f529-4bb0-996e-6143bd326f56",
        "parentId": "Segmentation",
        "name": "mode.raster.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Segmentation_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Segmentation.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "filter_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "meanshift",
        "description": "Choice of segmentation algorithm (mean-shift by default)",
        "label": "filter",
        "valueSet": [
          "meanshift",
          "cc",
          "watershed",
          "mprofiles"
        ],
        "notNull": true
      },
      {
        "id": "filter_meanshift_spatialr_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Spatial radius of the neighborhood.",
        "label": "filter.meanshift.spatialr",
        "notNull": true
      },
      {
        "id": "filter_meanshift_ranger_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 15,
        "description": "Range radius defining the radius (expressed in radiometry unit) in the multispectral space.",
        "label": "filter.meanshift.ranger",
        "notNull": true
      },
      {
        "id": "filter_meanshift_thres_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Algorithm iterative scheme will stop if mean-shift vector is below this threshold or if iteration number reached maximum number of iterations.",
        "label": "filter.meanshift.thres",
        "notNull": true
      },
      {
        "id": "filter_meanshift_maxiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Algorithm iterative scheme will stop if convergence hasn't been reached after the maximum number of iterations.",
        "label": "filter.meanshift.maxiter",
        "notNull": true
      },
      {
        "id": "filter_meanshift_minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "Minimum size of a region (in pixel unit) in segmentation. Smaller clusters will be merged to the neighboring cluster with the closest radiometry. If set to 0 no pruning is done.",
        "label": "filter.meanshift.minsize",
        "notNull": true
      },
      {
        "id": "filter_cc_expr_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "User defined connection condition, written as a mathematical expression. Available variables are p(i)b(i), intensity_p(i) and distance (example of expression: distance < 10 )",
        "label": "filter.cc.expr",
        "notNull": true
      },
      {
        "id": "filter_watershed_threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Depth threshold Units in percentage of the maximum depth in the image.",
        "label": "filter.watershed.threshold",
        "notNull": true
      },
      {
        "id": "filter_watershed_level_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "flood level for generating the merge tree from the initial segmentation (between 0 and 1)",
        "label": "filter.watershed.level",
        "notNull": true
      },
      {
        "id": "filter_mprofiles_size_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Size of the profiles",
        "label": "filter.mprofiles.size",
        "notNull": true
      },
      {
        "id": "filter_mprofiles_start_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Initial radius of the structuring element (in pixels)",
        "label": "filter.mprofiles.start",
        "notNull": true
      },
      {
        "id": "filter_mprofiles_step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Radius step along the profile (in pixels)",
        "label": "filter.mprofiles.step",
        "notNull": true
      },
      {
        "id": "filter_mprofiles_sigma_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Profiles values under the threshold will be ignored.",
        "label": "filter.mprofiles.sigma",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "vector",
        "description": "Choice of processing mode, either raster or large-scale.",
        "label": "mode",
        "valueSet": [
          "vector",
          "raster"
        ],
        "notNull": true
      },
      {
        "id": "mode_vector_outmode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ulco",
        "description": "This allows one to set the writing behaviour for the output vector file. Please note that the actual behaviour depends on the file format.",
        "label": "mode.vector.outmode",
        "valueSet": [
          "ulco",
          "ovw",
          "ulovw",
          "ulu"
        ],
        "notNull": true
      },
      {
        "id": "mode_vector_neighbor_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Activate 8-Neighborhood connectivity (default is 4).",
        "label": "mode.vector.neighbor",
        "notNull": true
      },
      {
        "id": "mode_vector_stitch_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Scan polygons on each side of tiles and stitch polygons which connect by more than one pixel.",
        "label": "mode.vector.stitch",
        "notNull": true
      },
      {
        "id": "mode_vector_minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Objects whose size is below the minimum object size (area in pixels) will be ignored during vectorization.",
        "label": "mode.vector.minsize",
        "notNull": true
      },
      {
        "id": "mode_vector_simplify_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Simplify polygons according to a given tolerance (in pixel). This option allows reducing the size of the output file or database.",
        "label": "mode.vector.simplify",
        "notNull": true
      },
      {
        "id": "mode_vector_layername_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "layer",
        "description": "Name of the layer in the vector file or database (default is Layer).",
        "label": "mode.vector.layername",
        "notNull": true
      },
      {
        "id": "mode_vector_fieldname_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "DN",
        "description": "Name of the field holding the geometry index in the output vector file or database.",
        "label": "mode.vector.fieldname",
        "notNull": true
      },
      {
        "id": "mode_vector_tilesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1024,
        "description": "User defined tiles size for tile-based segmentation. Optimal tile size is selected according to available RAM if null.",
        "label": "mode.vector.tilesize",
        "notNull": true
      },
      {
        "id": "mode_vector_startlabel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Starting value of the geometry index field",
        "label": "mode.vector.startlabel",
        "notNull": true
      },
      {
        "id": "mode_vector_ogroptions_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "A list of layer creation options in the form KEY=VALUE that will be passed directly to OGR without any validity checking. Options may depend on the file format, and can be found in OGR documentation.",
        "label": "mode.vector.ogroptions",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-mode.vector.inmask\n$mode_vector_inmask\n-mode.vector.out\n$mode_vector_out\n-mode.raster.out\n$mode_raster_out\n-filter\n$filter_str\n-filter.meanshift.spatialr\n$filter_meanshift_spatialr_number\n-filter.meanshift.ranger\n$filter_meanshift_ranger_number\n-filter.meanshift.thres\n$filter_meanshift_thres_number\n-filter.meanshift.maxiter\n$filter_meanshift_maxiter_number\n-filter.meanshift.minsize\n$filter_meanshift_minsize_number\n-filter.cc.expr\n$filter_cc_expr_str\n-filter.watershed.threshold\n$filter_watershed_threshold_number\n-filter.watershed.level\n$filter_watershed_level_number\n-filter.mprofiles.size\n$filter_mprofiles_size_number\n-filter.mprofiles.start\n$filter_mprofiles_start_number\n-filter.mprofiles.step\n$filter_mprofiles_step_number\n-filter.mprofiles.sigma\n$filter_mprofiles_sigma_number\n-mode\n$mode_str\n-mode.vector.outmode\n$mode_vector_outmode_str\n-mode.vector.neighbor\n$mode_vector_neighbor_bool\n-mode.vector.stitch\n$mode_vector_stitch_bool\n-mode.vector.minsize\n$mode_vector_minsize_number\n-mode.vector.simplify\n$mode_vector_simplify_number\n-mode.vector.layername\n$mode_vector_layername_str\n-mode.vector.fieldname\n$mode_vector_fieldname_str\n-mode.vector.tilesize\n$mode_vector_tilesize_number\n-mode.vector.startlabel\n$mode_vector_startlabel_number\n-mode.vector.ogroptions\n$mode_vector_ogroptions_str"
  },
  {
    "id": "SmallRegionsMerging",
    "label": "SmallRegionsMerging",
    "version": "7.3.0",
    "description": "This application merges small regions of a segmentation result.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "476a5be1-0040-4441-b40a-7a3f53f82749",
        "parentId": "SmallRegionsMerging",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d435df79-fba6-4cd1-a311-0f1c3119fd90",
        "parentId": "SmallRegionsMerging",
        "name": "inseg",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "a6980c28-d19d-4bc8-882d-4325e4bcfd7f",
        "parentId": "SmallRegionsMerging",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SmallRegionsMerging_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SmallRegionsMerging.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "minsize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 50,
        "description": "Minimum Segment Size. If, after the  segmentation, a segment is of size strictly lower than this criterion, the segment is merged with the segment that has the closest sepctral signature.",
        "label": "minsize",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-inseg\n$inseg\n-out\n$out\n-minsize\n$minsize_number"
  },
  {
    "id": "Smoothing",
    "label": "Smoothing",
    "version": "7.3.0",
    "description": "Apply a smoothing filter to an image",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "458a561f-ed69-4183-be39-5ad80261d177",
        "parentId": "Smoothing",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "cffdd69e-a802-4038-8703-e1d2903b14ab",
        "parentId": "Smoothing",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Smoothing_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Smoothing.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "type_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "anidif",
        "description": "Smoothing kernel to apply",
        "label": "type",
        "valueSet": [
          "mean",
          "gaussian",
          "anidif"
        ],
        "notNull": true
      },
      {
        "id": "type_mean_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "Kernel's radius (in pixels)",
        "label": "type.mean.radius",
        "notNull": true
      },
      {
        "id": "type_gaussian_stdev_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 2,
        "description": "Standard deviation of the gaussian kernel used to filter the image",
        "label": "type.gaussian.stdev",
        "notNull": true
      },
      {
        "id": "type_gaussian_maxerror_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "The algorithm will size the discrete kernel so that the error resulting from truncation of the kernel is no greater than maxerror.",
        "label": "type.gaussian.maxerror",
        "notNull": true
      },
      {
        "id": "type_gaussian_maxwidth_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "Set the kernel to be no wider than maxwidth pixels, even if type.gaussian.maxerror demands it.",
        "label": "type.gaussian.maxwidth",
        "notNull": true
      },
      {
        "id": "type_anidif_timestep_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.125,
        "description": "Time step that will be used to discretize the diffusion equation",
        "label": "type.anidif.timestep",
        "notNull": true
      },
      {
        "id": "type_anidif_nbiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Number of iterations needed to get the result",
        "label": "type.anidif.nbiter",
        "notNull": true
      },
      {
        "id": "type_anidif_conductance_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Controls the sensitivity of the conductance term in the diffusion equation. The lower it is the stronger the features will be preserved",
        "label": "type.anidif.conductance",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-type\n$type_str\n-type.mean.radius\n$type_mean_radius_number\n-type.gaussian.stdev\n$type_gaussian_stdev_number\n-type.gaussian.maxerror\n$type_gaussian_maxerror_number\n-type.gaussian.maxwidth\n$type_gaussian_maxwidth_number\n-type.anidif.timestep\n$type_anidif_timestep_number\n-type.anidif.nbiter\n$type_anidif_nbiter_number\n-type.anidif.conductance\n$type_anidif_conductance_number"
  },
  {
    "id": "SpectralAngleClassification",
    "label": "SpectralAngleClassification",
    "version": "7.3.0",
    "description": "Classifies an image using a spectral measure.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6e3c8b77-c00d-4d78-90dd-78359a169243",
        "parentId": "SpectralAngleClassification",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "5bc9d976-3ec4-42c9-8e37-96bbf36c98c0",
        "parentId": "SpectralAngleClassification",
        "name": "ie",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "5e37d505-186b-4bef-b05b-ba70c52abb97",
        "parentId": "SpectralAngleClassification",
        "name": "measure",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SpectralAngleClassification_1.tif"
        }
      },
      {
        "id": "87dced9f-1c21-4d40-9f87-4217674b477f",
        "parentId": "SpectralAngleClassification",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SpectralAngleClassification_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SpectralAngleClassification.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sam",
        "description": "Measure used for classification",
        "label": "mode",
        "valueSet": [
          "sam",
          "sid"
        ],
        "notNull": true
      },
      {
        "id": "threshold_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Pixel with a measurement greater than this threshold relatively to a reference pixel are not classified. The same threshold is used for all classes.",
        "label": "threshold",
        "notNull": false
      },
      {
        "id": "bv_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Value of unclassified pixels in the classification image (this parameter is only used if a threshold is set).",
        "label": "bv",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-ie\n$ie\n-measure\n$measure\n-out\n$out\n-mode\n$mode_str\n-threshold\n$threshold_number\n-bv\n$bv_number"
  },
  {
    "id": "SplitImage",
    "label": "SplitImage",
    "version": "7.3.0",
    "description": "Split a N multiband image into N images.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "a9027f8f-afec-49fd-b4b8-8f550a1c7b5e",
        "parentId": "SplitImage",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "0408523e-2d27-4a07-ba9f-b1de359f87bf",
        "parentId": "SplitImage",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_SplitImage_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_SplitImage.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [],
    "templatecontents": "-in\n$in\n-out\n$out"
  },
  {
    "id": "StereoFramework",
    "label": "StereoFramework",
    "version": "7.3.0",
    "description": "Compute the ground elevation based on one or multiple stereo pair(s)",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "5b77845c-0069-4e25-a179-988c080c625b",
        "parentId": "StereoFramework",
        "name": "input.il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "04633c2d-7f74-45b6-9e60-d42c7cbe5b17",
        "parentId": "StereoFramework",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4ce5437c-b7bf-4de3-a3ed-b6f885b809e2",
        "parentId": "StereoFramework",
        "name": "mask.left",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "3b222cf5-1d01-4b00-a6d8-c0fcb7c8ff64",
        "parentId": "StereoFramework",
        "name": "mask.right",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "26fb5626-7885-43c9-9113-a796e76c3103",
        "parentId": "StereoFramework",
        "name": "output.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_StereoFramework_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_StereoFramework.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "input_co_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of index of couples im image list. Couples must be separated by a comma (index start at 0). For example: 0 1,1 2 will process a first couple composed of the first and the second image in image list, then the second and the third image\n. Note that images are handled by pairs. If left empty, couples are created from input index i.e. a first couple will be composed of the first and second image, a second couple with third and fourth image etc. (in this case image list must be even).",
        "label": "input.co",
        "notNull": false
      },
      {
        "id": "input_channel_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Channel used for block matching (the same for all images)",
        "label": "input.channel",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "output_res_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Spatial sampling distance of the output elevation: the cell size (in m)",
        "label": "output.res",
        "notNull": true
      },
      {
        "id": "output_nodata_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": -32768,
        "description": "DSM empty cells are filled with this value (optional -32768 by default)",
        "label": "output.nodata",
        "notNull": true
      },
      {
        "id": "output_fusionmethod_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "max",
        "description": "This parameter allows one to choose the method used to fuse elevation measurements in each output DSM cell",
        "label": "output.fusionmethod",
        "valueSet": [
          "max",
          "min",
          "mean",
          "acc"
        ],
        "notNull": true
      },
      {
        "id": "output_mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "fit",
        "description": "",
        "label": "output.mode",
        "valueSet": [
          "fit",
          "user"
        ],
        "notNull": true
      },
      {
        "id": "output_mode_user_ulx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic X coordinate of upper-left corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "output.mode.user.ulx",
        "notNull": true
      },
      {
        "id": "output_mode_user_uly_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Cartographic Y coordinate of the upper-left corner (meters for cartographic projections, degrees for geographic ones)",
        "label": "output.mode.user.uly",
        "notNull": true
      },
      {
        "id": "output_mode_user_sizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of projected image along X (in pixels)",
        "label": "output.mode.user.sizex",
        "notNull": true
      },
      {
        "id": "output_mode_user_sizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Size of projected image along Y (in pixels)",
        "label": "output.mode.user.sizey",
        "notNull": true
      },
      {
        "id": "output_mode_user_spacingx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Size of each pixel along X axis (meters for cartographic projections, degrees for geographic ones)",
        "label": "output.mode.user.spacingx",
        "notNull": true
      },
      {
        "id": "output_mode_user_spacingy_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Size of each pixel along Y axis (meters for cartographic projections, degrees for geographic ones)",
        "label": "output.mode.user.spacingy",
        "notNull": true
      },
      {
        "id": "map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "wgs",
        "description": "Defines the map projection to be used.",
        "label": "map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "map.utm.zone",
        "notNull": true
      },
      {
        "id": "map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "map.utm.northhem",
        "notNull": true
      },
      {
        "id": "map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "map.epsg.code",
        "notNull": true
      },
      {
        "id": "stereorect_fwdgridstep_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 16,
        "description": "Stereo-rectification displacement grid only varies slowly. Therefore, it is recommended to use a coarser grid (higher step value) in case of large images",
        "label": "stereorect.fwdgridstep",
        "notNull": true
      },
      {
        "id": "stereorect_invgridssrate_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Grid inversion is an heavy process that implies spline regression on control points. To avoid eating to much memory, this parameter allows one to first sub-sample the field to invert.",
        "label": "stereorect.invgridssrate",
        "notNull": true
      },
      {
        "id": "bm_metric_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "ssdmean",
        "description": "Metric used to compute matching score",
        "label": "bm.metric",
        "valueSet": [
          "ssdmean",
          "ssd",
          "ncc",
          "lp"
        ],
        "notNull": true
      },
      {
        "id": "bm_metric_lp_p_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Value of the p parameter in Lp pseudo-norm (must be positive)",
        "label": "bm.metric.lp.p",
        "notNull": true
      },
      {
        "id": "bm_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "The radius of blocks in Block-Matching (in pixels)",
        "label": "bm.radius",
        "notNull": true
      },
      {
        "id": "bm_minhoffset_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": -20,
        "description": "Minimum altitude below the selected elevation source (in meters)",
        "label": "bm.minhoffset",
        "notNull": true
      },
      {
        "id": "bm_maxhoffset_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 20,
        "description": "Maximum altitude above the selected elevation source (in meters)",
        "label": "bm.maxhoffset",
        "notNull": true
      },
      {
        "id": "postproc_bij_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Use bijection consistency. Right to Left correlation is computed to validate Left to Right disparities. If bijection is not found, the disparity is rejected.",
        "label": "postproc.bij",
        "notNull": true
      },
      {
        "id": "postproc_med_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Disparity map can be filtered using median post filtering (disabled by default).",
        "label": "postproc.med",
        "notNull": true
      },
      {
        "id": "postproc_metrict_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6000000238418579,
        "description": "Use block matching metric output to discard pixels with low correlation value (disabled by default, float value)",
        "label": "postproc.metrict",
        "notNull": true
      },
      {
        "id": "mask_variancet_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 50,
        "description": "This parameter allows one to discard pixels whose local variance is too small (the size of the neighborhood is given by the correlation window radius)",
        "label": "mask.variancet",
        "notNull": true
      }
    ],
    "templatecontents": "-input.il\n$input_il\n-elev.geoid\n$elev_geoid\n-mask.left\n$mask_left\n-mask.right\n$mask_right\n-output.out\n$output_out\n-input.co\n$input_co_str\n-input.channel\n$input_channel_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-output.res\n$output_res_number\n-output.nodata\n$output_nodata_number\n-output.fusionmethod\n$output_fusionmethod_str\n-output.mode\n$output_mode_str\n-output.mode.user.ulx\n$output_mode_user_ulx_number\n-output.mode.user.uly\n$output_mode_user_uly_number\n-output.mode.user.sizex\n$output_mode_user_sizex_number\n-output.mode.user.sizey\n$output_mode_user_sizey_number\n-output.mode.user.spacingx\n$output_mode_user_spacingx_number\n-output.mode.user.spacingy\n$output_mode_user_spacingy_number\n-map\n$map_str\n-map.utm.zone\n$map_utm_zone_number\n-map.utm.northhem\n$map_utm_northhem_bool\n-map.epsg.code\n$map_epsg_code_number\n-stereorect.fwdgridstep\n$stereorect_fwdgridstep_number\n-stereorect.invgridssrate\n$stereorect_invgridssrate_number\n-bm.metric\n$bm_metric_str\n-bm.metric.lp.p\n$bm_metric_lp_p_number\n-bm.radius\n$bm_radius_number\n-bm.minhoffset\n$bm_minhoffset_number\n-bm.maxhoffset\n$bm_maxhoffset_number\n-postproc.bij\n$postproc_bij_bool\n-postproc.med\n$postproc_med_bool\n-postproc.metrict\n$postproc_metrict_number\n-mask.variancet\n$mask_variancet_number"
  },
  {
    "id": "StereoRectificationGridGenerator",
    "label": "StereoRectificationGridGenerator",
    "version": "7.3.0",
    "description": "Generates two deformation fields to resample in epipolar geometry, a pair of stereo images up to the sensor model precision",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "bc6542d1-29e6-405d-a040-1a3327a98e75",
        "parentId": "StereoRectificationGridGenerator",
        "name": "io.inleft",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "198596be-5b00-4230-a867-5cb202516628",
        "parentId": "StereoRectificationGridGenerator",
        "name": "io.inright",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e2ae9d65-6273-45f7-81b3-53db8203c4d1",
        "parentId": "StereoRectificationGridGenerator",
        "name": "epi.elevation.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "0bce56c3-96af-4e1d-887e-e09f180a31cd",
        "parentId": "StereoRectificationGridGenerator",
        "name": "io.outleft",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_StereoRectificationGridGenerator_1.tif"
        }
      },
      {
        "id": "b6190773-3379-4e89-9ebf-14274d385557",
        "parentId": "StereoRectificationGridGenerator",
        "name": "io.outright",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_StereoRectificationGridGenerator_2.tif"
        }
      },
      {
        "id": "a05e04f8-5504-4bcf-9226-f94b80ff1aad",
        "parentId": "StereoRectificationGridGenerator",
        "name": "inverse.outleft",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_StereoRectificationGridGenerator_3.tif"
        }
      },
      {
        "id": "9f72edaf-1325-4d72-bb53-c7c2845d4f83",
        "parentId": "StereoRectificationGridGenerator",
        "name": "inverse.outright",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_StereoRectificationGridGenerator_4.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_StereoRectificationGridGenerator.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "epi_elevation_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "epi.elevation.dem",
        "notNull": false
      },
      {
        "id": "epi_elevation_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "epi.elevation.default",
        "notNull": true
      },
      {
        "id": "epi_elevation_avgdem_step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Step of sub-sampling for average elevation estimation",
        "label": "epi.elevation.avgdem.step",
        "notNull": true
      },
      {
        "id": "epi_elevation_avgdem_value_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Average elevation value estimated from DEM",
        "label": "epi.elevation.avgdem.value",
        "notNull": true
      },
      {
        "id": "epi_elevation_avgdem_mindisp_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Disparity corresponding to estimated minimum elevation over the left image",
        "label": "epi.elevation.avgdem.mindisp",
        "notNull": true
      },
      {
        "id": "epi_elevation_avgdem_maxdisp_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Disparity corresponding to estimated maximum elevation over the left image",
        "label": "epi.elevation.avgdem.maxdisp",
        "notNull": true
      },
      {
        "id": "epi_scale_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "The scale parameter allows generating zoomed-in (scale < 1) or zoomed-out (scale > 1) epipolar images.",
        "label": "epi.scale",
        "notNull": true
      },
      {
        "id": "epi_step_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Stereo-rectification deformation grid only varies slowly. Therefore, it is recommended to use a coarser grid (higher step value) in case of large images",
        "label": "epi.step",
        "notNull": true
      },
      {
        "id": "epi_rectsizex_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The application computes the optimal rectified image size so that the whole left input image fits into the rectified area. However, due to the scale and step parameter, this size may not match the size of the deformation field output. In this case, one can use these output values.",
        "label": "epi.rectsizex",
        "notNull": true
      },
      {
        "id": "epi_rectsizey_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "The application computes the optimal rectified image size so that the whole left input image fits into the rectified area. However, due to the scale and step parameter, this size may not match the size of the deformation field output. In this case, one can use these output values.",
        "label": "epi.rectsizey",
        "notNull": true
      },
      {
        "id": "epi_baseline_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "This parameter is the mean value, in pixels.meters^-1, of the baseline to sensor altitude ratio. It can be used to convert disparities to physical elevation, since a disparity of one pixel will correspond to an elevation offset of the invert of this value with respect to the mean elevation.",
        "label": "epi.baseline",
        "notNull": true
      },
      {
        "id": "inverse_ssrate_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 16,
        "description": "Grid inversion is an heavy process that implies spline regression on control points. To avoid eating to much memory, this parameter allows one to first sub-sample the field to invert.",
        "label": "inverse.ssrate",
        "notNull": true
      }
    ],
    "templatecontents": "-io.inleft\n$io_inleft\n-io.inright\n$io_inright\n-epi.elevation.geoid\n$epi_elevation_geoid\n-io.outleft\n$io_outleft\n-io.outright\n$io_outright\n-inverse.outleft\n$inverse_outleft\n-inverse.outright\n$inverse_outright\n-epi.elevation.dem\n$epi_elevation_dem_file\n-epi.elevation.default\n$epi_elevation_default_number\n-epi.elevation.avgdem.step\n$epi_elevation_avgdem_step_number\n-epi.elevation.avgdem.value\n$epi_elevation_avgdem_value_number\n-epi.elevation.avgdem.mindisp\n$epi_elevation_avgdem_mindisp_number\n-epi.elevation.avgdem.maxdisp\n$epi_elevation_avgdem_maxdisp_number\n-epi.scale\n$epi_scale_number\n-epi.step\n$epi_step_number\n-epi.rectsizex\n$epi_rectsizex_number\n-epi.rectsizey\n$epi_rectsizey_number\n-epi.baseline\n$epi_baseline_number\n-inverse.ssrate\n$inverse_ssrate_number"
  },
  {
    "id": "Superimpose",
    "label": "Superimpose",
    "version": "7.3.0",
    "description": "Using available image metadata, project one image onto another one",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "3ddaf4ce-378f-425e-aa11-7cc0ae86ee45",
        "parentId": "Superimpose",
        "name": "inr",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "11674677-d965-46f7-8654-c42cde3e7d3d",
        "parentId": "Superimpose",
        "name": "inm",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8d6be677-f979-460d-83b4-dba531326ad2",
        "parentId": "Superimpose",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "591bfb8f-6550-4cf1-adea-4df6b84a6f02",
        "parentId": "Superimpose",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Superimpose_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Superimpose.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "lms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 4,
        "description": "Generate a coarser deformation field with the given spacing",
        "label": "lms",
        "notNull": true
      },
      {
        "id": "fv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Fill value for area outside the reprojected image",
        "label": "fv",
        "notNull": true
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "default",
        "description": "Superimposition mode",
        "label": "mode",
        "valueSet": [
          "default",
          "phr"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "bco",
        "description": "This group of parameters allows defining how the input image will be interpolated during resampling.",
        "label": "interpolator",
        "valueSet": [
          "bco",
          "nn",
          "linear"
        ],
        "notNull": true
      },
      {
        "id": "interpolator_bco_radius_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "This parameter allows controlling the size of the bicubic interpolation filter. If the target pixel size is higher than the input pixel size, increasing this parameter will reduce aliasing artifacts.",
        "label": "interpolator.bco.radius",
        "notNull": true
      }
    ],
    "templatecontents": "-inr\n$inr\n-inm\n$inm\n-elev.geoid\n$elev_geoid\n-out\n$out\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-lms\n$lms_number\n-fv\n$fv_number\n-mode\n$mode_str\n-interpolator\n$interpolator_str\n-interpolator.bco.radius\n$interpolator_bco_radius_number"
  },
  {
    "id": "Synthetize",
    "label": "Synthetize",
    "version": "7.3.0",
    "description": "This is the Synthetize application",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [],
    "targets": [
      {
        "id": "204b7bfd-3047-4c1f-b03c-6bf47bd2bd82",
        "parentId": "Synthetize",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_Synthetize_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_Synthetize.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "il_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Input image list",
        "label": "il",
        "notNull": true
      }
    ],
    "templatecontents": "-out\n$out\n-il\n$il_str"
  },
  {
    "id": "TestApplication",
    "label": "TestApplication",
    "version": "7.3.0",
    "description": "This application helps developers to test parameters types",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "MISC",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6c4b2736-d211-4eaf-8031-a285acadde1b",
        "parentId": "TestApplication",
        "name": "filename",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d43032c4-19f3-40c0-a9ed-b0802660d859",
        "parentId": "TestApplication",
        "name": "ingroup.images.inputimage",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a2d328b8-3274-4789-9629-00b5d1a52605",
        "parentId": "TestApplication",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e7cd85e2-2520-47ba-940c-e758d95a5158",
        "parentId": "TestApplication",
        "name": "fl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "fa274a37-b52b-409f-b993-50df0f3b9baa",
        "parentId": "TestApplication",
        "name": "vdl",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "71f6c097-5df1-4aff-8658-6e5f5f7bbfba",
        "parentId": "TestApplication",
        "name": "outfilename",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TestApplication_1.csv"
        }
      },
      {
        "id": "94a38249-508e-4ca0-b55d-a55822987fbc",
        "parentId": "TestApplication",
        "name": "outgroup.outputimage",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_TestApplication_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TestApplication.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "boolean_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "",
        "label": "boolean",
        "notNull": true
      },
      {
        "id": "int_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "",
        "label": "int",
        "notNull": false
      },
      {
        "id": "float_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "float",
        "notNull": false
      },
      {
        "id": "string_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "string",
        "notNull": true
      },
      {
        "id": "directory_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "directory",
        "notNull": true
      },
      {
        "id": "choice_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "choice1",
        "description": "",
        "label": "choice",
        "valueSet": [
          "choice1",
          "choice2",
          "choice3"
        ],
        "notNull": true
      },
      {
        "id": "choice_choice1.floatchoice1_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.125,
        "description": "",
        "label": "choice.choice1.floatchoice1",
        "notNull": true
      },
      {
        "id": "choice_choice3.floatchoice3_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 5,
        "description": "",
        "label": "choice.choice3.floatchoice3",
        "notNull": true
      },
      {
        "id": "ingroup_integer_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "ingroup.integer",
        "notNull": true
      },
      {
        "id": "sl_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "sl",
        "notNull": false
      },
      {
        "id": "cl_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "cl",
        "notNull": true
      }
    ],
    "templatecontents": "-filename\n$filename\n-ingroup.images.inputimage\n$ingroup_images_inputimage\n-il\n$il\n-fl\n$fl\n-vdl\n$vdl\n-outfilename\n$outfilename\n-outgroup.outputimage\n$outgroup_outputimage\n-boolean\n$boolean_bool\n-int\n$int_number\n-float\n$float_number\n-string\n$string_str\n-directory\n$directory_file\n-choice\n$choice_str\n-choice.choice1.floatchoice1\n$choice_choice1.floatchoice1_number\n-choice.choice3.floatchoice3\n$choice_choice3.floatchoice3_number\n-ingroup.integer\n$ingroup_integer_number\n-sl\n$sl_str\n-cl\n$cl_None"
  },
  {
    "id": "TileFusion",
    "label": "TileFusion",
    "version": "7.3.0",
    "description": "Fusion of an image made of several tile files.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "d37d67c1-9f9e-4b6a-8dff-c392973bb9c9",
        "parentId": "TileFusion",
        "name": "il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d8ae9a16-3d54-4e40-8d10-1f32b09cef35",
        "parentId": "TileFusion",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_TileFusion_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TileFusion.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "cols_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of columns in the tile array",
        "label": "cols",
        "notNull": true
      },
      {
        "id": "rows_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of rows in the tile array",
        "label": "rows",
        "notNull": true
      }
    ],
    "templatecontents": "-il\n$il\n-out\n$out\n-cols\n$cols_number\n-rows\n$rows_number"
  },
  {
    "id": "TrainDimensionalityReduction",
    "label": "TrainDimensionalityReduction",
    "version": "7.3.0",
    "description": "Train a dimensionality reduction model",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "da74ea8d-62ec-4031-8211-4bc1ff93ca7e",
        "parentId": "TrainDimensionalityReduction",
        "name": "io.vd",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "9d65fef5-1a96-461a-843f-dee39c7ddfc8",
        "parentId": "TrainDimensionalityReduction",
        "name": "io.stats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "86d6ebb7-83fa-4544-8c5d-1cb97333144f",
        "parentId": "TrainDimensionalityReduction",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainDimensionalityReduction_1.txt"
        }
      },
      {
        "id": "c5f0b612-b114-42a1-bf26-ad2ca4165b76",
        "parentId": "TrainDimensionalityReduction",
        "name": "algorithm.autoencoder.learningcurve",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainDimensionalityReduction_2.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainDimensionalityReduction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "feat_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data used as features for training.",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "algorithm_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "som",
        "description": "Choice of the dimensionality reduction algorithm to use for the training.",
        "label": "algorithm",
        "valueSet": [
          "som",
          "autoencoder",
          "pca"
        ],
        "notNull": true
      },
      {
        "id": "algorithm_som_s_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "[10,10]",
        "description": "Sizes of the SOM map (one per dimension). For instance, [12;15] means a 2D map of size 12x15. Support2D to 5D maps.",
        "label": "algorithm.som.s",
        "notNull": true
      },
      {
        "id": "algorithm_som_n_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "[3,3]",
        "description": "Sizes of the initial neighborhood in the SOM map (one per dimension). The number of sizes should be the same as the map sizes",
        "label": "algorithm.som.n",
        "notNull": true
      },
      {
        "id": "algorithm_som_ni_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "Number of iterations for SOM learning",
        "label": "algorithm.som.ni",
        "notNull": true
      },
      {
        "id": "algorithm_som_bi_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0,
        "description": "Initial learning coefficient",
        "label": "algorithm.som.bi",
        "notNull": true
      },
      {
        "id": "algorithm_som_bf_number",
        "type": "REGULAR",
        "dataType": "double",
        "defaultValue": 0.10000000149011612,
        "description": "Final learning coefficient",
        "label": "algorithm.som.bf",
        "notNull": true
      },
      {
        "id": "algorithm_som_iv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 10.0,
        "description": "Maximum initial neuron weight",
        "label": "algorithm.som.iv",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_nbiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of iterations used during training.",
        "label": "algorithm.autoencoder.nbiter",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_nbiterfinetuning_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The maximum number of iterations used during fine tuning of the whole network.",
        "label": "algorithm.autoencoder.nbiterfinetuning",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_epsilon_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Epsilon",
        "label": "algorithm.autoencoder.epsilon",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_initfactor_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Parameter that control the weight initialization of the autoencoder",
        "label": "algorithm.autoencoder.initfactor",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_nbneuron_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each hidden layer.",
        "label": "algorithm.autoencoder.nbneuron",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_regularization_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Strength of the L2 regularization used during training",
        "label": "algorithm.autoencoder.regularization",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_noise_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Strength of the noise",
        "label": "algorithm.autoencoder.noise",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_rho_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Sparsity parameter",
        "label": "algorithm.autoencoder.rho",
        "notNull": true
      },
      {
        "id": "algorithm_autoencoder_beta_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Sparsity regularization strength",
        "label": "algorithm.autoencoder.beta",
        "notNull": true
      },
      {
        "id": "algorithm_pca_dim_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Dimension of the output of the pca transformation.",
        "label": "algorithm.pca.dim",
        "notNull": true
      }
    ],
    "templatecontents": "-io.vd\n$io_vd\n-io.stats\n$io_stats\n-io.out\n$io_out\n-algorithm.autoencoder.learningcurve\n$algorithm_autoencoder_learningcurve\n-feat\n$feat_str\n-algorithm\n$algorithm_str\n-algorithm.som.s\n$algorithm_som_s_str\n-algorithm.som.n\n$algorithm_som_n_str\n-algorithm.som.ni\n$algorithm_som_ni_number\n-algorithm.som.bi\n$algorithm_som_bi_number\n-algorithm.som.bf\n$algorithm_som_bf_number\n-algorithm.som.iv\n$algorithm_som_iv_number\n-algorithm.autoencoder.nbiter\n$algorithm_autoencoder_nbiter_number\n-algorithm.autoencoder.nbiterfinetuning\n$algorithm_autoencoder_nbiterfinetuning_number\n-algorithm.autoencoder.epsilon\n$algorithm_autoencoder_epsilon_number\n-algorithm.autoencoder.initfactor\n$algorithm_autoencoder_initfactor_number\n-algorithm.autoencoder.nbneuron\n$algorithm_autoencoder_nbneuron_str\n-algorithm.autoencoder.regularization\n$algorithm_autoencoder_regularization_str\n-algorithm.autoencoder.noise\n$algorithm_autoencoder_noise_str\n-algorithm.autoencoder.rho\n$algorithm_autoencoder_rho_str\n-algorithm.autoencoder.beta\n$algorithm_autoencoder_beta_str\n-algorithm.pca.dim\n$algorithm_pca_dim_number"
  },
  {
    "id": "TrainImagesClassifier",
    "label": "TrainImagesClassifier",
    "version": "7.3.0",
    "description": "Train a classifier from multiple pairs of images and training vector data.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "b897f3b7-8dad-4157-a952-ca80ef2fd83f",
        "parentId": "TrainImagesClassifier",
        "name": "io.il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "65c3bac3-19fc-4ed7-9767-5b4afdfe227f",
        "parentId": "TrainImagesClassifier",
        "name": "io.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "685c33f4-a125-409e-9ac5-63e111ed3b88",
        "parentId": "TrainImagesClassifier",
        "name": "io.valid",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "b454eb55-b71f-46dd-89e2-8fdf103a710e",
        "parentId": "TrainImagesClassifier",
        "name": "io.imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "18a2341b-ddb2-4531-ba60-35adcbace9ee",
        "parentId": "TrainImagesClassifier",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "497fd112-28a6-4cf6-a77b-ae841b05b014",
        "parentId": "TrainImagesClassifier",
        "name": "classifier.sharkkm.incentroids",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "e4e27bf1-11b5-4872-90c4-7378b00a7e8d",
        "parentId": "TrainImagesClassifier",
        "name": "classifier.sharkkm.cstats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "17fbde28-b5e2-4850-b02c-a02edfce9e94",
        "parentId": "TrainImagesClassifier",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainImagesClassifier_1.txt"
        }
      },
      {
        "id": "84da3969-6a97-4abb-846f-5b21b7d2b8a5",
        "parentId": "TrainImagesClassifier",
        "name": "io.confmatout",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainImagesClassifier_2.csv"
        }
      },
      {
        "id": "d760a7e4-0ab6-4140-84ee-7770b01e85bc",
        "parentId": "TrainImagesClassifier",
        "name": "classifier.sharkkm.outcentroids",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainImagesClassifier_3.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainImagesClassifier.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "cleanup_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "If activated, the application will try to clean all temporary files it created",
        "label": "cleanup",
        "notNull": true
      },
      {
        "id": "sample_mt_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum size per class (in pixels) of the training sample list (default = 1000) (no limit = -1). If equal to -1, then the maximal size of the available training sample list per class will be equal to the surface area of the smallest class multiplied by the training sample ratio.",
        "label": "sample.mt",
        "notNull": true
      },
      {
        "id": "sample_mv_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum size per class (in pixels) of the validation sample list (default = 1000) (no limit = -1). If equal to -1, then the maximal size of the available validation sample list per class will be equal to the surface area of the smallest class multiplied by the validation sample ratio.",
        "label": "sample.mv",
        "notNull": true
      },
      {
        "id": "sample_bm_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Bound the number of samples for each class by the number of available samples by the smaller class. Proportions between training and validation are respected. Default is true (=1).",
        "label": "sample.bm",
        "notNull": true
      },
      {
        "id": "sample_vtr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Ratio between training and validation samples (0.0 = all training, 1.0 = all validation) (default = 0.5).",
        "label": "sample.vtr",
        "notNull": true
      },
      {
        "id": "sample_vfn_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field containing the class id for supervision. The values in this field shall be cast into integers.",
        "label": "sample.vfn",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "classifier_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "libsvm",
        "description": "Choice of the classifier to use for the training.",
        "label": "classifier",
        "valueSet": [
          "libsvm",
          "boost",
          "dt",
          "ann",
          "bayes",
          "rf",
          "knn",
          "sharkrf",
          "sharkkm"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_k_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "SVM Kernel Type.",
        "label": "classifier.libsvm.k",
        "valueSet": [
          "linear",
          "rbf",
          "poly",
          "sigmoid"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "csvc",
        "description": "Type of SVM formulation.",
        "label": "classifier.libsvm.m",
        "valueSet": [
          "csvc",
          "nusvc",
          "oneclass"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_c_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "SVM models have a cost parameter C (1 by default) to control the trade-off between training errors and forcing rigid margins.",
        "label": "classifier.libsvm.c",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_nu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Cost parameter Nu, in the range 0..1, the larger the value, the smoother the decision.",
        "label": "classifier.libsvm.nu",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_opt_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "SVM parameters optimization flag.",
        "label": "classifier.libsvm.opt",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_prob_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Probability estimation flag.",
        "label": "classifier.libsvm.prob",
        "notNull": true
      },
      {
        "id": "classifier_boost_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "real",
        "description": "Type of Boosting algorithm.",
        "label": "classifier.boost.t",
        "valueSet": [
          "discrete",
          "real",
          "logit",
          "gentle"
        ],
        "notNull": true
      },
      {
        "id": "classifier_boost_w_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The number of weak classifiers.",
        "label": "classifier.boost.w",
        "notNull": true
      },
      {
        "id": "classifier_boost_r_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.949999988079071,
        "description": "A threshold between 0 and 1 used to save computational time. Samples with summary weight <= (1 - weight_trim_rate) do not participate in the next iteration of training. Set this parameter to 0 to turn off this functionality.",
        "label": "classifier.boost.r",
        "notNull": true
      },
      {
        "id": "classifier_boost_m_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Maximum depth of the tree.",
        "label": "classifier.boost.m",
        "notNull": true
      },
      {
        "id": "classifier_dt_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The training algorithm attempts to split each node while its depth is smaller than the maximum possible depth of the tree. The actual depth may be smaller if the other termination criteria are met, and/or if the tree is pruned.",
        "label": "classifier.dt.max",
        "notNull": true
      },
      {
        "id": "classifier_dt_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then this node will not be split.",
        "label": "classifier.dt.min",
        "notNull": true
      },
      {
        "id": "classifier_dt_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split further.",
        "label": "classifier.dt.ra",
        "notNull": true
      },
      {
        "id": "classifier_dt_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.dt.cat",
        "notNull": true
      },
      {
        "id": "classifier_dt_r_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then a pruning will be harsher. This will make a tree more compact and more resistant to the training data noise but a bit less accurate.",
        "label": "classifier.dt.r",
        "notNull": true
      },
      {
        "id": "classifier_dt_t_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then pruned branches are physically removed from the tree.",
        "label": "classifier.dt.t",
        "notNull": true
      },
      {
        "id": "classifier_ann_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reg",
        "description": "Type of training method for the multilayer perceptron (MLP) neural network.",
        "label": "classifier.ann.t",
        "valueSet": [
          "back",
          "reg"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_sizes_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each intermediate layer (excluding input and output layers).",
        "label": "classifier.ann.sizes",
        "notNull": true
      },
      {
        "id": "classifier_ann_f_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sig",
        "description": "This function determine whether the output of the node is positive or not depending on the output of the transfert function.",
        "label": "classifier.ann.f",
        "valueSet": [
          "ident",
          "sig",
          "gau"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_a_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.a",
        "notNull": true
      },
      {
        "id": "classifier_ann_b_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Beta parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.b",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the weight gradient term in the BACKPROP method. The recommended value is about 0.1.",
        "label": "classifier.ann.bpdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.",
        "label": "classifier.ann.bpms",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Initial value Delta_0 of update-values Delta_{ij} in RPROP method (default = 0.1).",
        "label": "classifier.ann.rdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdwm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0000000116860974e-7,
        "description": "Update-values lower limit Delta_{min} in RPROP method. It must be positive (default = 1e-7).",
        "label": "classifier.ann.rdwm",
        "notNull": true
      },
      {
        "id": "classifier_ann_term_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "Termination criteria.",
        "label": "classifier.ann.term",
        "valueSet": [
          "iter",
          "eps",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Epsilon value used in the Termination criteria.",
        "label": "classifier.ann.eps",
        "notNull": true
      },
      {
        "id": "classifier_ann_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations used in the Termination criteria.",
        "label": "classifier.ann.iter",
        "notNull": true
      },
      {
        "id": "classifier_rf_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods.",
        "label": "classifier.rf.max",
        "notNull": true
      },
      {
        "id": "classifier_rf_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.rf.min",
        "notNull": true
      },
      {
        "id": "classifier_rf_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split.",
        "label": "classifier.rf.ra",
        "notNull": true
      },
      {
        "id": "classifier_rf_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.rf.cat",
        "notNull": true
      },
      {
        "id": "classifier_rf_var_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The size of the subset of features, randomly selected at each tree node, that are used to find the best split(s). If you set it to 0, then the size will be set to the square root of the total number of features.",
        "label": "classifier.rf.var",
        "notNull": true
      },
      {
        "id": "classifier_rf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.rf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_rf_acc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Sufficient accuracy (OOB error).",
        "label": "classifier.rf.acc",
        "notNull": true
      },
      {
        "id": "classifier_knn_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "The number of neighbors to use.",
        "label": "classifier.knn.k",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.sharkrf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nodesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 25,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.sharkrf.nodesize",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_mtry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The number of features (variables) which will be tested at each node in order to compute the split. If set to zero, the square root of the number of features is used.",
        "label": "classifier.sharkrf.mtry",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_oobr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6600000262260437,
        "description": "Set the fraction of the original training dataset to use as the out of bag sample.A good default value is 0.66. ",
        "label": "classifier.sharkrf.oobr",
        "notNull": true
      },
      {
        "id": "classifier_sharkkm_maxiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The maximum number of iterations for the kmeans algorithm. 0=unlimited",
        "label": "classifier.sharkkm.maxiter",
        "notNull": true
      },
      {
        "id": "classifier_sharkkm_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "The number of classes used for the kmeans algorithm. Default set to 2 class",
        "label": "classifier.sharkkm.k",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-io.il\n$io_il\n-io.vd\n$io_vd\n-io.valid\n$io_valid\n-io.imstat\n$io_imstat\n-elev.geoid\n$elev_geoid\n-classifier.sharkkm.incentroids\n$classifier_sharkkm_incentroids\n-classifier.sharkkm.cstats\n$classifier_sharkkm_cstats\n-io.out\n$io_out\n-io.confmatout\n$io_confmatout\n-classifier.sharkkm.outcentroids\n$classifier_sharkkm_outcentroids\n-cleanup\n$cleanup_bool\n-sample.mt\n$sample_mt_number\n-sample.mv\n$sample_mv_number\n-sample.bm\n$sample_bm_number\n-sample.vtr\n$sample_vtr_number\n-sample.vfn\n$sample_vfn_None\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-classifier\n$classifier_str\n-classifier.libsvm.k\n$classifier_libsvm_k_str\n-classifier.libsvm.m\n$classifier_libsvm_m_str\n-classifier.libsvm.c\n$classifier_libsvm_c_number\n-classifier.libsvm.nu\n$classifier_libsvm_nu_number\n-classifier.libsvm.opt\n$classifier_libsvm_opt_bool\n-classifier.libsvm.prob\n$classifier_libsvm_prob_bool\n-classifier.boost.t\n$classifier_boost_t_str\n-classifier.boost.w\n$classifier_boost_w_number\n-classifier.boost.r\n$classifier_boost_r_number\n-classifier.boost.m\n$classifier_boost_m_number\n-classifier.dt.max\n$classifier_dt_max_number\n-classifier.dt.min\n$classifier_dt_min_number\n-classifier.dt.ra\n$classifier_dt_ra_number\n-classifier.dt.cat\n$classifier_dt_cat_number\n-classifier.dt.r\n$classifier_dt_r_bool\n-classifier.dt.t\n$classifier_dt_t_bool\n-classifier.ann.t\n$classifier_ann_t_str\n-classifier.ann.sizes\n$classifier_ann_sizes_str\n-classifier.ann.f\n$classifier_ann_f_str\n-classifier.ann.a\n$classifier_ann_a_number\n-classifier.ann.b\n$classifier_ann_b_number\n-classifier.ann.bpdw\n$classifier_ann_bpdw_number\n-classifier.ann.bpms\n$classifier_ann_bpms_number\n-classifier.ann.rdw\n$classifier_ann_rdw_number\n-classifier.ann.rdwm\n$classifier_ann_rdwm_number\n-classifier.ann.term\n$classifier_ann_term_str\n-classifier.ann.eps\n$classifier_ann_eps_number\n-classifier.ann.iter\n$classifier_ann_iter_number\n-classifier.rf.max\n$classifier_rf_max_number\n-classifier.rf.min\n$classifier_rf_min_number\n-classifier.rf.ra\n$classifier_rf_ra_number\n-classifier.rf.cat\n$classifier_rf_cat_number\n-classifier.rf.var\n$classifier_rf_var_number\n-classifier.rf.nbtrees\n$classifier_rf_nbtrees_number\n-classifier.rf.acc\n$classifier_rf_acc_number\n-classifier.knn.k\n$classifier_knn_k_number\n-classifier.sharkrf.nbtrees\n$classifier_sharkrf_nbtrees_number\n-classifier.sharkrf.nodesize\n$classifier_sharkrf_nodesize_number\n-classifier.sharkrf.mtry\n$classifier_sharkrf_mtry_number\n-classifier.sharkrf.oobr\n$classifier_sharkrf_oobr_number\n-classifier.sharkkm.maxiter\n$classifier_sharkkm_maxiter_number\n-classifier.sharkkm.k\n$classifier_sharkkm_k_number\n-rand\n$rand_number"
  },
  {
    "id": "TrainImagesRegression",
    "label": "TrainImagesRegression",
    "version": "7.3.0",
    "description": "Train a regression model from multiple triplets of feature images, predictor images and training vector data.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6652fe09-54ee-4026-9d9c-bf646637b58a",
        "parentId": "TrainImagesRegression",
        "name": "io.il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "56a3fa61-5ae6-474d-a335-d1d9c12a71b3",
        "parentId": "TrainImagesRegression",
        "name": "io.ip",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "785f95de-b0af-42ea-acf7-60949995a773",
        "parentId": "TrainImagesRegression",
        "name": "io.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "149be179-bb34-42c7-8c67-d4a35cac9499",
        "parentId": "TrainImagesRegression",
        "name": "io.valid",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "8e8374eb-46d2-4019-a22d-347c3b4d116d",
        "parentId": "TrainImagesRegression",
        "name": "io.imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "4463f57c-62ac-460f-8cb0-672e71262430",
        "parentId": "TrainImagesRegression",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "93285447-6568-4364-9858-55f08526fa8d",
        "parentId": "TrainImagesRegression",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainImagesRegression_1.txt"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainImagesRegression.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "io_mse_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Mean square error computed using the validation dataset",
        "label": "io.mse",
        "notNull": false
      },
      {
        "id": "sample_nt_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of training samples.",
        "label": "sample.nt",
        "notNull": false
      },
      {
        "id": "sample_nv_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Number of validation samples.",
        "label": "sample.nv",
        "notNull": false
      },
      {
        "id": "sample_ratio_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Ratio between training and validation samples.",
        "label": "sample.ratio",
        "notNull": true
      },
      {
        "id": "sample_type_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "periodic",
        "description": "Type of sampling (periodic, pattern based, random)",
        "label": "sample.type",
        "valueSet": [
          "periodic",
          "random"
        ],
        "notNull": true
      },
      {
        "id": "sample_type_periodic_jitter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Jitter amplitude added during sample selection (0 = no jitter)",
        "label": "sample.type.periodic.jitter",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      },
      {
        "id": "classifier_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "libsvm",
        "description": "Choice of the classifier to use for the training.",
        "label": "classifier",
        "valueSet": [
          "libsvm",
          "dt",
          "ann",
          "rf",
          "knn",
          "sharkrf"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_k_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "SVM Kernel Type.",
        "label": "classifier.libsvm.k",
        "valueSet": [
          "linear",
          "rbf",
          "poly",
          "sigmoid"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "epssvr",
        "description": "Type of SVM formulation.",
        "label": "classifier.libsvm.m",
        "valueSet": [
          "epssvr",
          "nusvr"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_c_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "SVM models have a cost parameter C (1 by default) to control the trade-off between training errors and forcing rigid margins.",
        "label": "classifier.libsvm.c",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_nu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Cost parameter Nu, in the range 0..1, the larger the value, the smoother the decision.",
        "label": "classifier.libsvm.nu",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_opt_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "SVM parameters optimization flag.",
        "label": "classifier.libsvm.opt",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_prob_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Probability estimation flag.",
        "label": "classifier.libsvm.prob",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0010000000474974513,
        "description": "The distance between feature vectors from the training set and the fitting hyper-plane must be less than Epsilon. For outliersthe penalty mutliplier is set by C.",
        "label": "classifier.libsvm.eps",
        "notNull": true
      },
      {
        "id": "classifier_dt_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The training algorithm attempts to split each node while its depth is smaller than the maximum possible depth of the tree. The actual depth may be smaller if the other termination criteria are met, and/or if the tree is pruned.",
        "label": "classifier.dt.max",
        "notNull": true
      },
      {
        "id": "classifier_dt_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then this node will not be split.",
        "label": "classifier.dt.min",
        "notNull": true
      },
      {
        "id": "classifier_dt_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split further.",
        "label": "classifier.dt.ra",
        "notNull": true
      },
      {
        "id": "classifier_dt_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.dt.cat",
        "notNull": true
      },
      {
        "id": "classifier_dt_r_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then a pruning will be harsher. This will make a tree more compact and more resistant to the training data noise but a bit less accurate.",
        "label": "classifier.dt.r",
        "notNull": true
      },
      {
        "id": "classifier_dt_t_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then pruned branches are physically removed from the tree.",
        "label": "classifier.dt.t",
        "notNull": true
      },
      {
        "id": "classifier_ann_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reg",
        "description": "Type of training method for the multilayer perceptron (MLP) neural network.",
        "label": "classifier.ann.t",
        "valueSet": [
          "back",
          "reg"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_sizes_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each intermediate layer (excluding input and output layers).",
        "label": "classifier.ann.sizes",
        "notNull": true
      },
      {
        "id": "classifier_ann_f_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sig",
        "description": "This function determine whether the output of the node is positive or not depending on the output of the transfert function.",
        "label": "classifier.ann.f",
        "valueSet": [
          "ident",
          "sig",
          "gau"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_a_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.a",
        "notNull": true
      },
      {
        "id": "classifier_ann_b_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Beta parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.b",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the weight gradient term in the BACKPROP method. The recommended value is about 0.1.",
        "label": "classifier.ann.bpdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.",
        "label": "classifier.ann.bpms",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Initial value Delta_0 of update-values Delta_{ij} in RPROP method (default = 0.1).",
        "label": "classifier.ann.rdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdwm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0000000116860974e-7,
        "description": "Update-values lower limit Delta_{min} in RPROP method. It must be positive (default = 1e-7).",
        "label": "classifier.ann.rdwm",
        "notNull": true
      },
      {
        "id": "classifier_ann_term_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "Termination criteria.",
        "label": "classifier.ann.term",
        "valueSet": [
          "iter",
          "eps",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Epsilon value used in the Termination criteria.",
        "label": "classifier.ann.eps",
        "notNull": true
      },
      {
        "id": "classifier_ann_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations used in the Termination criteria.",
        "label": "classifier.ann.iter",
        "notNull": true
      },
      {
        "id": "classifier_rf_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods.",
        "label": "classifier.rf.max",
        "notNull": true
      },
      {
        "id": "classifier_rf_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.rf.min",
        "notNull": true
      },
      {
        "id": "classifier_rf_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split.",
        "label": "classifier.rf.ra",
        "notNull": true
      },
      {
        "id": "classifier_rf_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.rf.cat",
        "notNull": true
      },
      {
        "id": "classifier_rf_var_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The size of the subset of features, randomly selected at each tree node, that are used to find the best split(s). If you set it to 0, then the size will be set to the square root of the total number of features.",
        "label": "classifier.rf.var",
        "notNull": true
      },
      {
        "id": "classifier_rf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.rf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_rf_acc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Sufficient accuracy (OOB error).",
        "label": "classifier.rf.acc",
        "notNull": true
      },
      {
        "id": "classifier_knn_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "The number of neighbors to use.",
        "label": "classifier.knn.k",
        "notNull": true
      },
      {
        "id": "classifier_knn_rule_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "mean",
        "description": "Decision rule for regression output",
        "label": "classifier.knn.rule",
        "valueSet": [
          "mean",
          "median"
        ],
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.sharkrf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nodesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 25,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.sharkrf.nodesize",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_mtry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The number of features (variables) which will be tested at each node in order to compute the split. If set to zero, the square root of the number of features is used.",
        "label": "classifier.sharkrf.mtry",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_oobr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6600000262260437,
        "description": "Set the fraction of the original training dataset to use as the out of bag sample.A good default value is 0.66. ",
        "label": "classifier.sharkrf.oobr",
        "notNull": true
      },
      {
        "id": "cleanup_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "If activated, the application will try to clean all temporary files it created",
        "label": "cleanup",
        "notNull": true
      }
    ],
    "templatecontents": "-io.il\n$io_il\n-io.ip\n$io_ip\n-io.vd\n$io_vd\n-io.valid\n$io_valid\n-io.imstat\n$io_imstat\n-elev.geoid\n$elev_geoid\n-io.out\n$io_out\n-io.mse\n$io_mse_number\n-sample.nt\n$sample_nt_number\n-sample.nv\n$sample_nv_number\n-sample.ratio\n$sample_ratio_number\n-sample.type\n$sample_type_str\n-sample.type.periodic.jitter\n$sample_type_periodic_jitter_number\n-rand\n$rand_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number\n-classifier\n$classifier_str\n-classifier.libsvm.k\n$classifier_libsvm_k_str\n-classifier.libsvm.m\n$classifier_libsvm_m_str\n-classifier.libsvm.c\n$classifier_libsvm_c_number\n-classifier.libsvm.nu\n$classifier_libsvm_nu_number\n-classifier.libsvm.opt\n$classifier_libsvm_opt_bool\n-classifier.libsvm.prob\n$classifier_libsvm_prob_bool\n-classifier.libsvm.eps\n$classifier_libsvm_eps_number\n-classifier.dt.max\n$classifier_dt_max_number\n-classifier.dt.min\n$classifier_dt_min_number\n-classifier.dt.ra\n$classifier_dt_ra_number\n-classifier.dt.cat\n$classifier_dt_cat_number\n-classifier.dt.r\n$classifier_dt_r_bool\n-classifier.dt.t\n$classifier_dt_t_bool\n-classifier.ann.t\n$classifier_ann_t_str\n-classifier.ann.sizes\n$classifier_ann_sizes_str\n-classifier.ann.f\n$classifier_ann_f_str\n-classifier.ann.a\n$classifier_ann_a_number\n-classifier.ann.b\n$classifier_ann_b_number\n-classifier.ann.bpdw\n$classifier_ann_bpdw_number\n-classifier.ann.bpms\n$classifier_ann_bpms_number\n-classifier.ann.rdw\n$classifier_ann_rdw_number\n-classifier.ann.rdwm\n$classifier_ann_rdwm_number\n-classifier.ann.term\n$classifier_ann_term_str\n-classifier.ann.eps\n$classifier_ann_eps_number\n-classifier.ann.iter\n$classifier_ann_iter_number\n-classifier.rf.max\n$classifier_rf_max_number\n-classifier.rf.min\n$classifier_rf_min_number\n-classifier.rf.ra\n$classifier_rf_ra_number\n-classifier.rf.cat\n$classifier_rf_cat_number\n-classifier.rf.var\n$classifier_rf_var_number\n-classifier.rf.nbtrees\n$classifier_rf_nbtrees_number\n-classifier.rf.acc\n$classifier_rf_acc_number\n-classifier.knn.k\n$classifier_knn_k_number\n-classifier.knn.rule\n$classifier_knn_rule_str\n-classifier.sharkrf.nbtrees\n$classifier_sharkrf_nbtrees_number\n-classifier.sharkrf.nodesize\n$classifier_sharkrf_nodesize_number\n-classifier.sharkrf.mtry\n$classifier_sharkrf_mtry_number\n-classifier.sharkrf.oobr\n$classifier_sharkrf_oobr_number\n-cleanup\n$cleanup_bool"
  },
  {
    "id": "TrainRegression",
    "label": "TrainRegression",
    "version": "7.3.0",
    "description": "Train a classifier from multiple images to perform regression.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7b9c832a-1d72-4049-ad3a-d7bd21dc4e96",
        "parentId": "TrainRegression",
        "name": "io.il",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "cd786841-e745-4dd3-8c0e-fa29bf05ce1e",
        "parentId": "TrainRegression",
        "name": "io.csv",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "6847266e-2bd2-447a-a4dd-e742f4c32b54",
        "parentId": "TrainRegression",
        "name": "io.imstat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "6a12e6eb-6ff8-41bf-8421-e081dfe870d2",
        "parentId": "TrainRegression",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainRegression_1.txt"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainRegression.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "io_mse_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Mean square error computed with the validation predictors",
        "label": "io.mse",
        "notNull": true
      },
      {
        "id": "sample_mt_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of training predictors (default = 1000) (no limit = -1).",
        "label": "sample.mt",
        "notNull": true
      },
      {
        "id": "sample_mv_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of validation predictors (default = 1000) (no limit = -1).",
        "label": "sample.mv",
        "notNull": true
      },
      {
        "id": "sample_vtr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Ratio between training and validation samples (0.0 = all training, 1.0 = all validation) (default = 0.5).",
        "label": "sample.vtr",
        "notNull": true
      },
      {
        "id": "classifier_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "libsvm",
        "description": "Choice of the classifier to use for the training.",
        "label": "classifier",
        "valueSet": [
          "libsvm",
          "dt",
          "ann",
          "rf",
          "knn",
          "sharkrf"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_k_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "SVM Kernel Type.",
        "label": "classifier.libsvm.k",
        "valueSet": [
          "linear",
          "rbf",
          "poly",
          "sigmoid"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "epssvr",
        "description": "Type of SVM formulation.",
        "label": "classifier.libsvm.m",
        "valueSet": [
          "epssvr",
          "nusvr"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_c_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "SVM models have a cost parameter C (1 by default) to control the trade-off between training errors and forcing rigid margins.",
        "label": "classifier.libsvm.c",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_nu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Cost parameter Nu, in the range 0..1, the larger the value, the smoother the decision.",
        "label": "classifier.libsvm.nu",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_opt_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "SVM parameters optimization flag.",
        "label": "classifier.libsvm.opt",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_prob_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Probability estimation flag.",
        "label": "classifier.libsvm.prob",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0010000000474974513,
        "description": "The distance between feature vectors from the training set and the fitting hyper-plane must be less than Epsilon. For outliersthe penalty mutliplier is set by C.",
        "label": "classifier.libsvm.eps",
        "notNull": true
      },
      {
        "id": "classifier_dt_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The training algorithm attempts to split each node while its depth is smaller than the maximum possible depth of the tree. The actual depth may be smaller if the other termination criteria are met, and/or if the tree is pruned.",
        "label": "classifier.dt.max",
        "notNull": true
      },
      {
        "id": "classifier_dt_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then this node will not be split.",
        "label": "classifier.dt.min",
        "notNull": true
      },
      {
        "id": "classifier_dt_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split further.",
        "label": "classifier.dt.ra",
        "notNull": true
      },
      {
        "id": "classifier_dt_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.dt.cat",
        "notNull": true
      },
      {
        "id": "classifier_dt_r_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then a pruning will be harsher. This will make a tree more compact and more resistant to the training data noise but a bit less accurate.",
        "label": "classifier.dt.r",
        "notNull": true
      },
      {
        "id": "classifier_dt_t_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then pruned branches are physically removed from the tree.",
        "label": "classifier.dt.t",
        "notNull": true
      },
      {
        "id": "classifier_ann_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reg",
        "description": "Type of training method for the multilayer perceptron (MLP) neural network.",
        "label": "classifier.ann.t",
        "valueSet": [
          "back",
          "reg"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_sizes_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each intermediate layer (excluding input and output layers).",
        "label": "classifier.ann.sizes",
        "notNull": true
      },
      {
        "id": "classifier_ann_f_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sig",
        "description": "This function determine whether the output of the node is positive or not depending on the output of the transfert function.",
        "label": "classifier.ann.f",
        "valueSet": [
          "ident",
          "sig",
          "gau"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_a_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.a",
        "notNull": true
      },
      {
        "id": "classifier_ann_b_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Beta parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.b",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the weight gradient term in the BACKPROP method. The recommended value is about 0.1.",
        "label": "classifier.ann.bpdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.",
        "label": "classifier.ann.bpms",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Initial value Delta_0 of update-values Delta_{ij} in RPROP method (default = 0.1).",
        "label": "classifier.ann.rdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdwm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0000000116860974e-7,
        "description": "Update-values lower limit Delta_{min} in RPROP method. It must be positive (default = 1e-7).",
        "label": "classifier.ann.rdwm",
        "notNull": true
      },
      {
        "id": "classifier_ann_term_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "Termination criteria.",
        "label": "classifier.ann.term",
        "valueSet": [
          "iter",
          "eps",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Epsilon value used in the Termination criteria.",
        "label": "classifier.ann.eps",
        "notNull": true
      },
      {
        "id": "classifier_ann_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations used in the Termination criteria.",
        "label": "classifier.ann.iter",
        "notNull": true
      },
      {
        "id": "classifier_rf_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods.",
        "label": "classifier.rf.max",
        "notNull": true
      },
      {
        "id": "classifier_rf_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.rf.min",
        "notNull": true
      },
      {
        "id": "classifier_rf_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split.",
        "label": "classifier.rf.ra",
        "notNull": true
      },
      {
        "id": "classifier_rf_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.rf.cat",
        "notNull": true
      },
      {
        "id": "classifier_rf_var_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The size of the subset of features, randomly selected at each tree node, that are used to find the best split(s). If you set it to 0, then the size will be set to the square root of the total number of features.",
        "label": "classifier.rf.var",
        "notNull": true
      },
      {
        "id": "classifier_rf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.rf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_rf_acc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Sufficient accuracy (OOB error).",
        "label": "classifier.rf.acc",
        "notNull": true
      },
      {
        "id": "classifier_knn_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "The number of neighbors to use.",
        "label": "classifier.knn.k",
        "notNull": true
      },
      {
        "id": "classifier_knn_rule_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "mean",
        "description": "Decision rule for regression output",
        "label": "classifier.knn.rule",
        "valueSet": [
          "mean",
          "median"
        ],
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.sharkrf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nodesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 25,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.sharkrf.nodesize",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_mtry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The number of features (variables) which will be tested at each node in order to compute the split. If set to zero, the square root of the number of features is used.",
        "label": "classifier.sharkrf.mtry",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_oobr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6600000262260437,
        "description": "Set the fraction of the original training dataset to use as the out of bag sample.A good default value is 0.66. ",
        "label": "classifier.sharkrf.oobr",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-io.il\n$io_il\n-io.csv\n$io_csv\n-io.imstat\n$io_imstat\n-io.out\n$io_out\n-io.mse\n$io_mse_number\n-sample.mt\n$sample_mt_number\n-sample.mv\n$sample_mv_number\n-sample.vtr\n$sample_vtr_number\n-classifier\n$classifier_str\n-classifier.libsvm.k\n$classifier_libsvm_k_str\n-classifier.libsvm.m\n$classifier_libsvm_m_str\n-classifier.libsvm.c\n$classifier_libsvm_c_number\n-classifier.libsvm.nu\n$classifier_libsvm_nu_number\n-classifier.libsvm.opt\n$classifier_libsvm_opt_bool\n-classifier.libsvm.prob\n$classifier_libsvm_prob_bool\n-classifier.libsvm.eps\n$classifier_libsvm_eps_number\n-classifier.dt.max\n$classifier_dt_max_number\n-classifier.dt.min\n$classifier_dt_min_number\n-classifier.dt.ra\n$classifier_dt_ra_number\n-classifier.dt.cat\n$classifier_dt_cat_number\n-classifier.dt.r\n$classifier_dt_r_bool\n-classifier.dt.t\n$classifier_dt_t_bool\n-classifier.ann.t\n$classifier_ann_t_str\n-classifier.ann.sizes\n$classifier_ann_sizes_str\n-classifier.ann.f\n$classifier_ann_f_str\n-classifier.ann.a\n$classifier_ann_a_number\n-classifier.ann.b\n$classifier_ann_b_number\n-classifier.ann.bpdw\n$classifier_ann_bpdw_number\n-classifier.ann.bpms\n$classifier_ann_bpms_number\n-classifier.ann.rdw\n$classifier_ann_rdw_number\n-classifier.ann.rdwm\n$classifier_ann_rdwm_number\n-classifier.ann.term\n$classifier_ann_term_str\n-classifier.ann.eps\n$classifier_ann_eps_number\n-classifier.ann.iter\n$classifier_ann_iter_number\n-classifier.rf.max\n$classifier_rf_max_number\n-classifier.rf.min\n$classifier_rf_min_number\n-classifier.rf.ra\n$classifier_rf_ra_number\n-classifier.rf.cat\n$classifier_rf_cat_number\n-classifier.rf.var\n$classifier_rf_var_number\n-classifier.rf.nbtrees\n$classifier_rf_nbtrees_number\n-classifier.rf.acc\n$classifier_rf_acc_number\n-classifier.knn.k\n$classifier_knn_k_number\n-classifier.knn.rule\n$classifier_knn_rule_str\n-classifier.sharkrf.nbtrees\n$classifier_sharkrf_nbtrees_number\n-classifier.sharkrf.nodesize\n$classifier_sharkrf_nodesize_number\n-classifier.sharkrf.mtry\n$classifier_sharkrf_mtry_number\n-classifier.sharkrf.oobr\n$classifier_sharkrf_oobr_number\n-rand\n$rand_number"
  },
  {
    "id": "TrainVectorClassifier",
    "label": "TrainVectorClassifier",
    "version": "7.3.0",
    "description": "Train a classifier based on labeled geometries and a list of features to consider.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7e466445-ba63-4b8c-9b3e-777fe28a1b59",
        "parentId": "TrainVectorClassifier",
        "name": "io.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "362a8314-a6b7-48e7-b98a-9f16487932b9",
        "parentId": "TrainVectorClassifier",
        "name": "io.stats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "2bef2efd-4b70-4ac0-9a5f-adc3ce7566ff",
        "parentId": "TrainVectorClassifier",
        "name": "valid.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "a1a1ec6b-47a1-490c-8282-22d1a5ada03b",
        "parentId": "TrainVectorClassifier",
        "name": "classifier.sharkkm.incentroids",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "515d4e33-f1c9-4078-af77-f4ac79231602",
        "parentId": "TrainVectorClassifier",
        "name": "classifier.sharkkm.cstats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "cae2d532-73c9-4d0d-9664-aaed98c7bb3c",
        "parentId": "TrainVectorClassifier",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainVectorClassifier_1.txt"
        }
      },
      {
        "id": "ff3a4314-dde1-4921-a209-d3688edff5e2",
        "parentId": "TrainVectorClassifier",
        "name": "io.confmatout",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainVectorClassifier_2.csv"
        }
      },
      {
        "id": "b26bb3b9-fa7c-4418-865f-c9fdf67eb6cd",
        "parentId": "TrainVectorClassifier",
        "name": "classifier.sharkkm.outcentroids",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainVectorClassifier_3.csv"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainVectorClassifier.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index of the layer to use in the input vector file.",
        "label": "layer",
        "notNull": true
      },
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data to be used as features for training.",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "valid_layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index of the layer to use in the validation vector file.",
        "label": "valid.layer",
        "notNull": true
      },
      {
        "id": "cfield_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field containing the class id for supervision. The values in this field shall be cast into integers. Only geometries with this field available will be taken into account.",
        "label": "cfield",
        "notNull": true
      },
      {
        "id": "v_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Verbose mode, display the contingency table result.",
        "label": "v",
        "notNull": true
      },
      {
        "id": "classifier_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "libsvm",
        "description": "Choice of the classifier to use for the training.",
        "label": "classifier",
        "valueSet": [
          "libsvm",
          "boost",
          "dt",
          "ann",
          "bayes",
          "rf",
          "knn",
          "sharkrf",
          "sharkkm"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_k_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "SVM Kernel Type.",
        "label": "classifier.libsvm.k",
        "valueSet": [
          "linear",
          "rbf",
          "poly",
          "sigmoid"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "csvc",
        "description": "Type of SVM formulation.",
        "label": "classifier.libsvm.m",
        "valueSet": [
          "csvc",
          "nusvc",
          "oneclass"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_c_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "SVM models have a cost parameter C (1 by default) to control the trade-off between training errors and forcing rigid margins.",
        "label": "classifier.libsvm.c",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_nu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Cost parameter Nu, in the range 0..1, the larger the value, the smoother the decision.",
        "label": "classifier.libsvm.nu",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_opt_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "SVM parameters optimization flag.",
        "label": "classifier.libsvm.opt",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_prob_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Probability estimation flag.",
        "label": "classifier.libsvm.prob",
        "notNull": true
      },
      {
        "id": "classifier_boost_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "real",
        "description": "Type of Boosting algorithm.",
        "label": "classifier.boost.t",
        "valueSet": [
          "discrete",
          "real",
          "logit",
          "gentle"
        ],
        "notNull": true
      },
      {
        "id": "classifier_boost_w_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The number of weak classifiers.",
        "label": "classifier.boost.w",
        "notNull": true
      },
      {
        "id": "classifier_boost_r_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.949999988079071,
        "description": "A threshold between 0 and 1 used to save computational time. Samples with summary weight <= (1 - weight_trim_rate) do not participate in the next iteration of training. Set this parameter to 0 to turn off this functionality.",
        "label": "classifier.boost.r",
        "notNull": true
      },
      {
        "id": "classifier_boost_m_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "Maximum depth of the tree.",
        "label": "classifier.boost.m",
        "notNull": true
      },
      {
        "id": "classifier_dt_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The training algorithm attempts to split each node while its depth is smaller than the maximum possible depth of the tree. The actual depth may be smaller if the other termination criteria are met, and/or if the tree is pruned.",
        "label": "classifier.dt.max",
        "notNull": true
      },
      {
        "id": "classifier_dt_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then this node will not be split.",
        "label": "classifier.dt.min",
        "notNull": true
      },
      {
        "id": "classifier_dt_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split further.",
        "label": "classifier.dt.ra",
        "notNull": true
      },
      {
        "id": "classifier_dt_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.dt.cat",
        "notNull": true
      },
      {
        "id": "classifier_dt_r_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then a pruning will be harsher. This will make a tree more compact and more resistant to the training data noise but a bit less accurate.",
        "label": "classifier.dt.r",
        "notNull": true
      },
      {
        "id": "classifier_dt_t_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then pruned branches are physically removed from the tree.",
        "label": "classifier.dt.t",
        "notNull": true
      },
      {
        "id": "classifier_ann_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reg",
        "description": "Type of training method for the multilayer perceptron (MLP) neural network.",
        "label": "classifier.ann.t",
        "valueSet": [
          "back",
          "reg"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_sizes_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each intermediate layer (excluding input and output layers).",
        "label": "classifier.ann.sizes",
        "notNull": true
      },
      {
        "id": "classifier_ann_f_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sig",
        "description": "This function determine whether the output of the node is positive or not depending on the output of the transfert function.",
        "label": "classifier.ann.f",
        "valueSet": [
          "ident",
          "sig",
          "gau"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_a_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.a",
        "notNull": true
      },
      {
        "id": "classifier_ann_b_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Beta parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.b",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the weight gradient term in the BACKPROP method. The recommended value is about 0.1.",
        "label": "classifier.ann.bpdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.",
        "label": "classifier.ann.bpms",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Initial value Delta_0 of update-values Delta_{ij} in RPROP method (default = 0.1).",
        "label": "classifier.ann.rdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdwm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0000000116860974e-7,
        "description": "Update-values lower limit Delta_{min} in RPROP method. It must be positive (default = 1e-7).",
        "label": "classifier.ann.rdwm",
        "notNull": true
      },
      {
        "id": "classifier_ann_term_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "Termination criteria.",
        "label": "classifier.ann.term",
        "valueSet": [
          "iter",
          "eps",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Epsilon value used in the Termination criteria.",
        "label": "classifier.ann.eps",
        "notNull": true
      },
      {
        "id": "classifier_ann_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations used in the Termination criteria.",
        "label": "classifier.ann.iter",
        "notNull": true
      },
      {
        "id": "classifier_rf_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods.",
        "label": "classifier.rf.max",
        "notNull": true
      },
      {
        "id": "classifier_rf_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.rf.min",
        "notNull": true
      },
      {
        "id": "classifier_rf_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split.",
        "label": "classifier.rf.ra",
        "notNull": true
      },
      {
        "id": "classifier_rf_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.rf.cat",
        "notNull": true
      },
      {
        "id": "classifier_rf_var_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The size of the subset of features, randomly selected at each tree node, that are used to find the best split(s). If you set it to 0, then the size will be set to the square root of the total number of features.",
        "label": "classifier.rf.var",
        "notNull": true
      },
      {
        "id": "classifier_rf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.rf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_rf_acc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Sufficient accuracy (OOB error).",
        "label": "classifier.rf.acc",
        "notNull": true
      },
      {
        "id": "classifier_knn_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "The number of neighbors to use.",
        "label": "classifier.knn.k",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.sharkrf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nodesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 25,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.sharkrf.nodesize",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_mtry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The number of features (variables) which will be tested at each node in order to compute the split. If set to zero, the square root of the number of features is used.",
        "label": "classifier.sharkrf.mtry",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_oobr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6600000262260437,
        "description": "Set the fraction of the original training dataset to use as the out of bag sample.A good default value is 0.66. ",
        "label": "classifier.sharkrf.oobr",
        "notNull": true
      },
      {
        "id": "classifier_sharkkm_maxiter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The maximum number of iterations for the kmeans algorithm. 0=unlimited",
        "label": "classifier.sharkkm.maxiter",
        "notNull": true
      },
      {
        "id": "classifier_sharkkm_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 2,
        "description": "The number of classes used for the kmeans algorithm. Default set to 2 class",
        "label": "classifier.sharkkm.k",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-io.vd\n$io_vd\n-io.stats\n$io_stats\n-valid.vd\n$valid_vd\n-classifier.sharkkm.incentroids\n$classifier_sharkkm_incentroids\n-classifier.sharkkm.cstats\n$classifier_sharkkm_cstats\n-io.out\n$io_out\n-io.confmatout\n$io_confmatout\n-classifier.sharkkm.outcentroids\n$classifier_sharkkm_outcentroids\n-layer\n$layer_number\n-feat\n$feat_None\n-valid.layer\n$valid_layer_number\n-cfield\n$cfield_None\n-v\n$v_bool\n-classifier\n$classifier_str\n-classifier.libsvm.k\n$classifier_libsvm_k_str\n-classifier.libsvm.m\n$classifier_libsvm_m_str\n-classifier.libsvm.c\n$classifier_libsvm_c_number\n-classifier.libsvm.nu\n$classifier_libsvm_nu_number\n-classifier.libsvm.opt\n$classifier_libsvm_opt_bool\n-classifier.libsvm.prob\n$classifier_libsvm_prob_bool\n-classifier.boost.t\n$classifier_boost_t_str\n-classifier.boost.w\n$classifier_boost_w_number\n-classifier.boost.r\n$classifier_boost_r_number\n-classifier.boost.m\n$classifier_boost_m_number\n-classifier.dt.max\n$classifier_dt_max_number\n-classifier.dt.min\n$classifier_dt_min_number\n-classifier.dt.ra\n$classifier_dt_ra_number\n-classifier.dt.cat\n$classifier_dt_cat_number\n-classifier.dt.r\n$classifier_dt_r_bool\n-classifier.dt.t\n$classifier_dt_t_bool\n-classifier.ann.t\n$classifier_ann_t_str\n-classifier.ann.sizes\n$classifier_ann_sizes_str\n-classifier.ann.f\n$classifier_ann_f_str\n-classifier.ann.a\n$classifier_ann_a_number\n-classifier.ann.b\n$classifier_ann_b_number\n-classifier.ann.bpdw\n$classifier_ann_bpdw_number\n-classifier.ann.bpms\n$classifier_ann_bpms_number\n-classifier.ann.rdw\n$classifier_ann_rdw_number\n-classifier.ann.rdwm\n$classifier_ann_rdwm_number\n-classifier.ann.term\n$classifier_ann_term_str\n-classifier.ann.eps\n$classifier_ann_eps_number\n-classifier.ann.iter\n$classifier_ann_iter_number\n-classifier.rf.max\n$classifier_rf_max_number\n-classifier.rf.min\n$classifier_rf_min_number\n-classifier.rf.ra\n$classifier_rf_ra_number\n-classifier.rf.cat\n$classifier_rf_cat_number\n-classifier.rf.var\n$classifier_rf_var_number\n-classifier.rf.nbtrees\n$classifier_rf_nbtrees_number\n-classifier.rf.acc\n$classifier_rf_acc_number\n-classifier.knn.k\n$classifier_knn_k_number\n-classifier.sharkrf.nbtrees\n$classifier_sharkrf_nbtrees_number\n-classifier.sharkrf.nodesize\n$classifier_sharkrf_nodesize_number\n-classifier.sharkrf.mtry\n$classifier_sharkrf_mtry_number\n-classifier.sharkrf.oobr\n$classifier_sharkrf_oobr_number\n-classifier.sharkkm.maxiter\n$classifier_sharkkm_maxiter_number\n-classifier.sharkkm.k\n$classifier_sharkkm_k_number\n-rand\n$rand_number"
  },
  {
    "id": "TrainVectorRegression",
    "label": "TrainVectorRegression",
    "version": "7.3.0",
    "description": "Train a regression algorithm based on geometries with list of predictor to consider and a label (dependent variable).",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "4aad0073-689d-4d4b-8180-627cf5bbe0af",
        "parentId": "TrainVectorRegression",
        "name": "io.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "8d50fafc-f237-446b-98bf-8fbbf24b82d4",
        "parentId": "TrainVectorRegression",
        "name": "io.stats",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "618ce295-7568-45e1-b5ba-1240dbf15cee",
        "parentId": "TrainVectorRegression",
        "name": "valid.vd",
        "cardinality": 0,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "fefb36ba-389b-4e7d-937f-c64c30db5820",
        "parentId": "TrainVectorRegression",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_TrainVectorRegression_1.txt"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_TrainVectorRegression.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "io_mse_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "Mean square error computed using the validation dataset",
        "label": "io.mse",
        "notNull": false
      },
      {
        "id": "layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index of the layer to use in the input vector file.",
        "label": "layer",
        "notNull": true
      },
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data to be used as features for training.",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "valid_layer_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "Index of the layer to use in the validation vector file.",
        "label": "valid.layer",
        "notNull": true
      },
      {
        "id": "cfield_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field containing the class id for supervision. The values in this field shall be cast into integers. Only geometries with this field available will be taken into account.",
        "label": "cfield",
        "notNull": true
      },
      {
        "id": "v_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": true,
        "description": "Verbose mode, display the contingency table result.",
        "label": "v",
        "notNull": true
      },
      {
        "id": "classifier_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "libsvm",
        "description": "Choice of the classifier to use for the training.",
        "label": "classifier",
        "valueSet": [
          "libsvm",
          "dt",
          "ann",
          "rf",
          "knn",
          "sharkrf"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_k_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "linear",
        "description": "SVM Kernel Type.",
        "label": "classifier.libsvm.k",
        "valueSet": [
          "linear",
          "rbf",
          "poly",
          "sigmoid"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_m_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "epssvr",
        "description": "Type of SVM formulation.",
        "label": "classifier.libsvm.m",
        "valueSet": [
          "epssvr",
          "nusvr"
        ],
        "notNull": true
      },
      {
        "id": "classifier_libsvm_c_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "SVM models have a cost parameter C (1 by default) to control the trade-off between training errors and forcing rigid margins.",
        "label": "classifier.libsvm.c",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_nu_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.5,
        "description": "Cost parameter Nu, in the range 0..1, the larger the value, the smoother the decision.",
        "label": "classifier.libsvm.nu",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_opt_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "SVM parameters optimization flag.",
        "label": "classifier.libsvm.opt",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_prob_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Probability estimation flag.",
        "label": "classifier.libsvm.prob",
        "notNull": true
      },
      {
        "id": "classifier_libsvm_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.0010000000474974513,
        "description": "The distance between feature vectors from the training set and the fitting hyper-plane must be less than Epsilon. For outliersthe penalty mutliplier is set by C.",
        "label": "classifier.libsvm.eps",
        "notNull": true
      },
      {
        "id": "classifier_dt_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "The training algorithm attempts to split each node while its depth is smaller than the maximum possible depth of the tree. The actual depth may be smaller if the other termination criteria are met, and/or if the tree is pruned.",
        "label": "classifier.dt.max",
        "notNull": true
      },
      {
        "id": "classifier_dt_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then this node will not be split.",
        "label": "classifier.dt.min",
        "notNull": true
      },
      {
        "id": "classifier_dt_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split further.",
        "label": "classifier.dt.ra",
        "notNull": true
      },
      {
        "id": "classifier_dt_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.dt.cat",
        "notNull": true
      },
      {
        "id": "classifier_dt_r_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then a pruning will be harsher. This will make a tree more compact and more resistant to the training data noise but a bit less accurate.",
        "label": "classifier.dt.r",
        "notNull": true
      },
      {
        "id": "classifier_dt_t_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "If true, then pruned branches are physically removed from the tree.",
        "label": "classifier.dt.t",
        "notNull": true
      },
      {
        "id": "classifier_ann_t_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reg",
        "description": "Type of training method for the multilayer perceptron (MLP) neural network.",
        "label": "classifier.ann.t",
        "valueSet": [
          "back",
          "reg"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_sizes_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "The number of neurons in each intermediate layer (excluding input and output layers).",
        "label": "classifier.ann.sizes",
        "notNull": true
      },
      {
        "id": "classifier_ann_f_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "sig",
        "description": "This function determine whether the output of the node is positive or not depending on the output of the transfert function.",
        "label": "classifier.ann.f",
        "valueSet": [
          "ident",
          "sig",
          "gau"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_a_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Alpha parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.a",
        "notNull": true
      },
      {
        "id": "classifier_ann_b_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "Beta parameter of the activation function (used only with sigmoid and gaussian functions).",
        "label": "classifier.ann.b",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the weight gradient term in the BACKPROP method. The recommended value is about 0.1.",
        "label": "classifier.ann.bpdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_bpms_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Strength of the momentum term (the difference between weights on the 2 previous iterations). This parameter provides some inertia to smooth the random fluctuations of the weights. It can vary from 0 (the feature is disabled) to 1 and beyond. The value 0.1 or so is good enough.",
        "label": "classifier.ann.bpms",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdw_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.10000000149011612,
        "description": "Initial value Delta_0 of update-values Delta_{ij} in RPROP method (default = 0.1).",
        "label": "classifier.ann.rdw",
        "notNull": true
      },
      {
        "id": "classifier_ann_rdwm_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1.0000000116860974e-7,
        "description": "Update-values lower limit Delta_{min} in RPROP method. It must be positive (default = 1e-7).",
        "label": "classifier.ann.rdwm",
        "notNull": true
      },
      {
        "id": "classifier_ann_term_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "all",
        "description": "Termination criteria.",
        "label": "classifier.ann.term",
        "valueSet": [
          "iter",
          "eps",
          "all"
        ],
        "notNull": true
      },
      {
        "id": "classifier_ann_eps_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Epsilon value used in the Termination criteria.",
        "label": "classifier.ann.eps",
        "notNull": true
      },
      {
        "id": "classifier_ann_iter_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1000,
        "description": "Maximum number of iterations used in the Termination criteria.",
        "label": "classifier.ann.iter",
        "notNull": true
      },
      {
        "id": "classifier_rf_max_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 5,
        "description": "The depth of the tree. A low value will likely underfit and conversely a high value will likely overfit. The optimal value can be obtained using cross validation or other suitable methods.",
        "label": "classifier.rf.max",
        "notNull": true
      },
      {
        "id": "classifier_rf_min_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.rf.min",
        "notNull": true
      },
      {
        "id": "classifier_rf_ra_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "If all absolute differences between an estimated value in a node and the values of the train samples in this node are smaller than this regression accuracy parameter, then the node will not be split.",
        "label": "classifier.rf.ra",
        "notNull": true
      },
      {
        "id": "classifier_rf_cat_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 10,
        "description": "Cluster possible values of a categorical variable into K <= cat clusters to find a suboptimal split.",
        "label": "classifier.rf.cat",
        "notNull": true
      },
      {
        "id": "classifier_rf_var_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The size of the subset of features, randomly selected at each tree node, that are used to find the best split(s). If you set it to 0, then the size will be set to the square root of the total number of features.",
        "label": "classifier.rf.var",
        "notNull": true
      },
      {
        "id": "classifier_rf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.rf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_rf_acc_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.009999999776482582,
        "description": "Sufficient accuracy (OOB error).",
        "label": "classifier.rf.acc",
        "notNull": true
      },
      {
        "id": "classifier_knn_k_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 32,
        "description": "The number of neighbors to use.",
        "label": "classifier.knn.k",
        "notNull": true
      },
      {
        "id": "classifier_knn_rule_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "mean",
        "description": "Decision rule for regression output",
        "label": "classifier.knn.rule",
        "valueSet": [
          "mean",
          "median"
        ],
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nbtrees_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 100,
        "description": "The maximum number of trees in the forest. Typically, the more trees you have, the better the accuracy. However, the improvement in accuracy generally diminishes and reaches an asymptote for a certain number of trees. Also to keep in mind, increasing the number of trees increases the prediction time linearly.",
        "label": "classifier.sharkrf.nbtrees",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_nodesize_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 25,
        "description": "If the number of samples in a node is smaller than this parameter, then the node will not be split. A reasonable value is a small percentage of the total data e.g. 1 percent.",
        "label": "classifier.sharkrf.nodesize",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_mtry_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 0,
        "description": "The number of features (variables) which will be tested at each node in order to compute the split. If set to zero, the square root of the number of features is used.",
        "label": "classifier.sharkrf.mtry",
        "notNull": true
      },
      {
        "id": "classifier_sharkrf_oobr_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0.6600000262260437,
        "description": "Set the fraction of the original training dataset to use as the out of bag sample.A good default value is 0.66. ",
        "label": "classifier.sharkrf.oobr",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-io.vd\n$io_vd\n-io.stats\n$io_stats\n-valid.vd\n$valid_vd\n-io.out\n$io_out\n-io.mse\n$io_mse_number\n-layer\n$layer_number\n-feat\n$feat_None\n-valid.layer\n$valid_layer_number\n-cfield\n$cfield_None\n-v\n$v_bool\n-classifier\n$classifier_str\n-classifier.libsvm.k\n$classifier_libsvm_k_str\n-classifier.libsvm.m\n$classifier_libsvm_m_str\n-classifier.libsvm.c\n$classifier_libsvm_c_number\n-classifier.libsvm.nu\n$classifier_libsvm_nu_number\n-classifier.libsvm.opt\n$classifier_libsvm_opt_bool\n-classifier.libsvm.prob\n$classifier_libsvm_prob_bool\n-classifier.libsvm.eps\n$classifier_libsvm_eps_number\n-classifier.dt.max\n$classifier_dt_max_number\n-classifier.dt.min\n$classifier_dt_min_number\n-classifier.dt.ra\n$classifier_dt_ra_number\n-classifier.dt.cat\n$classifier_dt_cat_number\n-classifier.dt.r\n$classifier_dt_r_bool\n-classifier.dt.t\n$classifier_dt_t_bool\n-classifier.ann.t\n$classifier_ann_t_str\n-classifier.ann.sizes\n$classifier_ann_sizes_str\n-classifier.ann.f\n$classifier_ann_f_str\n-classifier.ann.a\n$classifier_ann_a_number\n-classifier.ann.b\n$classifier_ann_b_number\n-classifier.ann.bpdw\n$classifier_ann_bpdw_number\n-classifier.ann.bpms\n$classifier_ann_bpms_number\n-classifier.ann.rdw\n$classifier_ann_rdw_number\n-classifier.ann.rdwm\n$classifier_ann_rdwm_number\n-classifier.ann.term\n$classifier_ann_term_str\n-classifier.ann.eps\n$classifier_ann_eps_number\n-classifier.ann.iter\n$classifier_ann_iter_number\n-classifier.rf.max\n$classifier_rf_max_number\n-classifier.rf.min\n$classifier_rf_min_number\n-classifier.rf.ra\n$classifier_rf_ra_number\n-classifier.rf.cat\n$classifier_rf_cat_number\n-classifier.rf.var\n$classifier_rf_var_number\n-classifier.rf.nbtrees\n$classifier_rf_nbtrees_number\n-classifier.rf.acc\n$classifier_rf_acc_number\n-classifier.knn.k\n$classifier_knn_k_number\n-classifier.knn.rule\n$classifier_knn_rule_str\n-classifier.sharkrf.nbtrees\n$classifier_sharkrf_nbtrees_number\n-classifier.sharkrf.nodesize\n$classifier_sharkrf_nodesize_number\n-classifier.sharkrf.mtry\n$classifier_sharkrf_mtry_number\n-classifier.sharkrf.oobr\n$classifier_sharkrf_oobr_number\n-rand\n$rand_number"
  },
  {
    "id": "VectorClassifier",
    "label": "VectorClassifier",
    "version": "7.3.0",
    "description": "Performs a classification of the input vector data according to a model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "3482ede9-0920-4898-b161-090b0463a4db",
        "parentId": "VectorClassifier",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "9e5e8dcc-939f-416b-b5af-f6af55c418f7",
        "parentId": "VectorClassifier",
        "name": "instat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d8b851af-ecd7-4c4a-8260-d7934e49d6a6",
        "parentId": "VectorClassifier",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "8bbbef2c-a51b-45a7-80b0-53007e4786b8",
        "parentId": "VectorClassifier",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_VectorClassifier_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorClassifier.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "cfield_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "predicted",
        "description": "Field containing the predicted class.Only geometries with this field available will be taken into account.\nThe field is added either in the input file (if 'out' off) or in the output file.\nCaution, the 'cfield' must not exist in the input file if you are updating the file.",
        "label": "cfield",
        "notNull": true
      },
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data used as features for training. Put the same field names as the TrainVectorClassifier application.",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "confmap_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "Confidence map of the produced classification. The confidence index depends on the model: \n\n* LibSVM: difference between the two highest probabilities (needs a model with probability estimates, so that classes probabilities can be computed for each sample)\n* Boost: sum of votes\n* DecisionTree: (not supported)\n* KNearestNeighbors: number of neighbors with the same label\n* NeuralNetwork: difference between the two highest responses\n* NormalBayes: (not supported)\n* RandomForest: Confidence (proportion of votes for the majority class). Margin (normalized difference of the votes of the 2 majority classes) is not available for now.\n* SVM: distance to margin (only works for 2-class models)\n",
        "label": "confmap",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-instat\n$instat\n-model\n$model\n-out\n$out\n-cfield\n$cfield_str\n-feat\n$feat_None\n-confmap\n$confmap_bool"
  },
  {
    "id": "VectorDataExtractROI",
    "label": "VectorDataExtractROI",
    "version": "7.3.0",
    "description": "Perform an extract ROI on the input vector data according to the input image extent",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "6b04e629-b194-4230-8ffa-4f3d2b980603",
        "parentId": "VectorDataExtractROI",
        "name": "io.vd",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "c11aacd7-0115-42db-90ea-2883521f71f6",
        "parentId": "VectorDataExtractROI",
        "name": "io.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "ee1cf392-a326-4095-8547-5ae5ec5d50d9",
        "parentId": "VectorDataExtractROI",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "d61877e4-8e86-4f1e-81ff-57d288450f9f",
        "parentId": "VectorDataExtractROI",
        "name": "io.out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_VectorDataExtractROI_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorDataExtractROI.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-io.vd\n$io_vd\n-io.in\n$io_in\n-elev.geoid\n$elev_geoid\n-io.out\n$io_out\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "VectorDataReprojection",
    "label": "VectorDataReprojection",
    "version": "7.3.0",
    "description": "Reproject a vector data using support image projection reference, or a user specified map projection",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "301fd084-4a06-4428-b4ef-f2b09f5e1454",
        "parentId": "VectorDataReprojection",
        "name": "in.vd",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "dc5be520-ecae-499e-9396-e48d4fab48e7",
        "parentId": "VectorDataReprojection",
        "name": "in.kwl",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "8741c5d1-667a-4400-9a31-3af6dd3aedf3",
        "parentId": "VectorDataReprojection",
        "name": "out.proj.image.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "183771b1-af73-417b-aa66-7bd69c0cf88e",
        "parentId": "VectorDataReprojection",
        "name": "elev.geoid",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "cd97741a-29e9-4902-827f-e1399d1824e6",
        "parentId": "VectorDataReprojection",
        "name": "out.vd",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_VectorDataReprojection_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorDataReprojection.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "out_proj_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "image",
        "description": "",
        "label": "out.proj",
        "valueSet": [
          "image",
          "user"
        ],
        "notNull": true
      },
      {
        "id": "out_proj_user_map_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "utm",
        "description": "Defines the map projection to be used.",
        "label": "out.proj.user.map",
        "valueSet": [
          "utm",
          "lambert2",
          "lambert93",
          "wgs",
          "epsg"
        ],
        "notNull": true
      },
      {
        "id": "out_proj_user_map_utm_zone_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 31,
        "description": "The zone number ranges from 1 to 60 and allows defining the transverse mercator projection (along with the hemisphere)",
        "label": "out.proj.user.map.utm.zone",
        "notNull": true
      },
      {
        "id": "out_proj_user_map_utm_northhem_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "The transverse mercator projections are defined by their zone number as well as the hemisphere. Activate this parameter if your image is in the northern hemisphere.",
        "label": "out.proj.user.map.utm.northhem",
        "notNull": true
      },
      {
        "id": "out_proj_user_map_epsg_code_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 4326,
        "description": "See www.spatialreference.org to find which EPSG code is associated to your projection",
        "label": "out.proj.user.map.epsg.code",
        "notNull": true
      },
      {
        "id": "elev_dem_file",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "This parameter allows selecting a directory containing Digital Elevation Model files. Note that this directory should contain only DEM files. Unexpected behaviour might occurs if other images are found in this directory.",
        "label": "elev.dem",
        "notNull": false
      },
      {
        "id": "elev_default_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "This parameter allows setting the default height above ellipsoid when there is no DEM available, no coverage for some points or pixels with no_data in the DEM tiles, and no geoid file has been set. This is also used by some application as an average elevation value.",
        "label": "elev.default",
        "notNull": true
      }
    ],
    "templatecontents": "-in.vd\n$in_vd\n-in.kwl\n$in_kwl\n-out.proj.image.in\n$out_proj_image_in\n-elev.geoid\n$elev_geoid\n-out.vd\n$out_vd\n-out.proj\n$out_proj_str\n-out.proj.user.map\n$out_proj_user_map_str\n-out.proj.user.map.utm.zone\n$out_proj_user_map_utm_zone_number\n-out.proj.user.map.utm.northhem\n$out_proj_user_map_utm_northhem_bool\n-out.proj.user.map.epsg.code\n$out_proj_user_map_epsg_code_number\n-elev.dem\n$elev_dem_file\n-elev.default\n$elev_default_number"
  },
  {
    "id": "VectorDataSetField",
    "label": "VectorDataSetField",
    "version": "7.3.0",
    "description": "Set a field in vector data.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "7b306787-d83a-4b4a-b044-9ef4189a39ff",
        "parentId": "VectorDataSetField",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      }
    ],
    "targets": [
      {
        "id": "75c4ce9f-49d4-433d-9214-c3b5bafe4f7d",
        "parentId": "VectorDataSetField",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_VectorDataSetField_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorDataSetField.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "fn_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field name",
        "label": "fn",
        "notNull": true
      },
      {
        "id": "fv_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "Field value",
        "label": "fv",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-out\n$out\n-fn\n$fn_str\n-fv\n$fv_str"
  },
  {
    "id": "VectorDataTransform",
    "label": "VectorDataTransform",
    "version": "7.3.0",
    "description": "Apply a transform to each vertex of the input VectorData",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "23847fa1-f3ed-4b8d-a554-5b582ac8bc4b",
        "parentId": "VectorDataTransform",
        "name": "vd",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "8dbaf08a-df04-4993-aeb8-68525fbd2915",
        "parentId": "VectorDataTransform",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "550a4cb3-f771-4c10-a029-8dce8b67f40f",
        "parentId": "VectorDataTransform",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_VectorDataTransform_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorDataTransform.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "transform_tx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Translation in the X direction (in pixels)",
        "label": "transform.tx",
        "notNull": true
      },
      {
        "id": "transform_ty_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Translation in the Y direction (in pixels)",
        "label": "transform.ty",
        "notNull": true
      },
      {
        "id": "transform_ro_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Angle of the rotation (in degrees)",
        "label": "transform.ro",
        "notNull": true
      },
      {
        "id": "transform_centerx_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "X coordinate of the rotation and scaling center (in physical units)",
        "label": "transform.centerx",
        "notNull": true
      },
      {
        "id": "transform_centery_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 0,
        "description": "Y coordinate of the rotation and scaling center (in physical units)",
        "label": "transform.centery",
        "notNull": true
      },
      {
        "id": "transform_scale_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": 1,
        "description": "The scale coefficient to apply",
        "label": "transform.scale",
        "notNull": true
      }
    ],
    "templatecontents": "-vd\n$vd\n-in\n$in\n-out\n$out\n-transform.tx\n$transform_tx_number\n-transform.ty\n$transform_ty_number\n-transform.ro\n$transform_ro_number\n-transform.centerx\n$transform_centerx_number\n-transform.centery\n$transform_centery_number\n-transform.scale\n$transform_scale_number"
  },
  {
    "id": "VectorDimensionalityReduction",
    "label": "VectorDimensionalityReduction",
    "version": "7.3.0",
    "description": "Performs dimensionality reduction of the input vector data according to a model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "df718c03-b9b1-422b-930f-f096a46e3f2c",
        "parentId": "VectorDimensionalityReduction",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "db3b6b64-2d71-4a60-8dbe-54d1c6fc1ba4",
        "parentId": "VectorDimensionalityReduction",
        "name": "instat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "d3c44f0a-54ce-4d5d-b671-ed70f3a699be",
        "parentId": "VectorDimensionalityReduction",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "ecd297bd-a88e-4c8f-aa17-7a608d40b3d2",
        "parentId": "VectorDimensionalityReduction",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_VectorDimensionalityReduction_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorDimensionalityReduction.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data used as features for reduction.",
        "label": "feat",
        "notNull": true
      },
      {
        "id": "featout_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "prefix",
        "description": "Naming of output features",
        "label": "featout",
        "valueSet": [
          "prefix",
          "list"
        ],
        "notNull": true
      },
      {
        "id": "featout_prefix_name_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "reduced_",
        "description": "Name prefix for output features. This prefix is followed by the numeric index of each output feature.",
        "label": "featout.prefix.name",
        "notNull": true
      },
      {
        "id": "featout_list_names_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names for the output features which result from the reduction.",
        "label": "featout.list.names",
        "notNull": true
      },
      {
        "id": "pcadim_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "This optional parameter can be set to reduce the number of eignevectors used in the PCA model file. This parameter can't be used for other models",
        "label": "pcadim",
        "notNull": false
      },
      {
        "id": "mode_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "overwrite",
        "description": "This parameter determines if the output file is overwritten or updated [overwrite/update]. If an output file name is given, the original file is copied before creating the new features.",
        "label": "mode",
        "valueSet": [
          "overwrite",
          "update"
        ],
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-instat\n$instat\n-model\n$model\n-out\n$out\n-feat\n$feat_None\n-featout\n$featout_str\n-featout.prefix.name\n$featout_prefix_name_str\n-featout.list.names\n$featout_list_names_str\n-pcadim\n$pcadim_number\n-mode\n$mode_str"
  },
  {
    "id": "VectorRegression",
    "label": "VectorRegression",
    "version": "7.3.0",
    "description": "Performs regression on the input vector data according to a model file.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "VECTOR",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "0b93f5ac-3f38-4efb-a3a8-4b771209c8e1",
        "parentId": "VectorRegression",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "a8ba5c68-8b34-434b-8706-785989bd100c",
        "parentId": "VectorRegression",
        "name": "instat",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "20a8397d-1dd6-4554-a7db-47a500b86d02",
        "parentId": "VectorRegression",
        "name": "model",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "14eb1d63-679b-4566-b3e7-b6e4f4366dc7",
        "parentId": "VectorRegression",
        "name": "out",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "OTHER",
          "location": "output_otbcli_VectorRegression_1.shp"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VectorRegression.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "cfield_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "predicted",
        "description": "Field containing the predicted value.Only geometries with this field available will be taken into account.\nThe field is added either in the input file (if 'out' off) or in the output file.\nCaution, the 'cfield' must not exist in the input file if you are updating the file.",
        "label": "cfield",
        "notNull": true
      },
      {
        "id": "feat_None",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "List of field names in the input vector data used as features for training. Put the same field names as the TrainVectorRegression application.",
        "label": "feat",
        "notNull": true
      }
    ],
    "templatecontents": "-in\n$in\n-instat\n$instat\n-model\n$model\n-out\n$out\n-cfield\n$cfield_str\n-feat\n$feat_None"
  },
  {
    "id": "VertexComponentAnalysis",
    "label": "VertexComponentAnalysis",
    "version": "7.3.0",
    "description": "Given a set of mixed spectral vectors, estimate reference substances also known as endmembers using the Vertex Component Analysis algorithm.",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "OPTICAL",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "773854cb-cc9b-4b8a-94f9-7b844df12e87",
        "parentId": "VertexComponentAnalysis",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "bfe4074c-b781-4046-8a8c-539feaab218f",
        "parentId": "VertexComponentAnalysis",
        "name": "outendm",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_VertexComponentAnalysis_1.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_VertexComponentAnalysis.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "ne_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": 1,
        "description": "The number of endmembers to extract from the hyperspectral image.",
        "label": "ne",
        "notNull": true
      },
      {
        "id": "rand_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "Set a specific random seed with integer value.",
        "label": "rand",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-outendm\n$outendm\n-ne\n$ne_number\n-rand\n$rand_number"
  },
  {
    "id": "ZonalStatistics",
    "label": "ZonalStatistics",
    "version": "7.3.0",
    "description": "This application computes zonal statistics",
    "authors": "OTB Team",
    "copyright": "(C) CNES Apache License",
    "category": "RASTER",
    "nodeAffinity": "Any",
    "sources": [
      {
        "id": "924b14db-f9b1-4334-80ac-d1850862cbd0",
        "parentId": "ZonalStatistics",
        "name": "in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      },
      {
        "id": "1d48e954-095c-4ce9-be6b-084a03a3d2cc",
        "parentId": "ZonalStatistics",
        "name": "inzone.vector.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR"
        }
      },
      {
        "id": "68072770-0b56-44ff-8015-2df47f60afeb",
        "parentId": "ZonalStatistics",
        "name": "inzone.labelimage.in",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER"
        }
      }
    ],
    "targets": [
      {
        "id": "cc7a50f3-376f-47c3-b4c9-5f8b8242c285",
        "parentId": "ZonalStatistics",
        "name": "out.vector.filename",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "VECTOR",
          "location": "output_otbcli_ZonalStatistics_1.shp"
        }
      },
      {
        "id": "481243d9-5f6e-4004-897d-656b7bc27c7d",
        "parentId": "ZonalStatistics",
        "name": "out.raster.filename",
        "cardinality": 1,
        "dataDescriptor": {
          "formatType": "RASTER",
          "location": "output_otbcli_ZonalStatistics_2.tif"
        }
      }
    ],
    "containerId": "OTB-7.3.0",
    "fileLocation": "otbcli_ZonalStatistics.bat",
    "workingDirectory": ".",
    "templateType": "VELOCITY",
    "variables": [],
    "multiThread": true,
    "parallelism": 4,
    "visibility": "SYSTEM",
    "active": true,
    "parameterDescriptors": [
      {
        "id": "inbv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "inbv",
        "notNull": false
      },
      {
        "id": "inzone_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "vector",
        "description": "",
        "label": "inzone",
        "valueSet": [
          "vector",
          "labelimage"
        ],
        "notNull": true
      },
      {
        "id": "inzone_vector_reproject_bool",
        "type": "REGULAR",
        "dataType": "bool",
        "defaultValue": false,
        "description": "",
        "label": "inzone.vector.reproject",
        "notNull": true
      },
      {
        "id": "inzone_labelimage_nodata_number",
        "type": "REGULAR",
        "dataType": "int",
        "defaultValue": null,
        "description": "",
        "label": "inzone.labelimage.nodata",
        "notNull": false
      },
      {
        "id": "out_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": "vector",
        "description": "",
        "label": "out",
        "valueSet": [
          "vector",
          "xml",
          "raster"
        ],
        "notNull": true
      },
      {
        "id": "out_xml_filename_str",
        "type": "REGULAR",
        "dataType": "string",
        "defaultValue": null,
        "description": "",
        "label": "out.xml.filename",
        "notNull": true
      },
      {
        "id": "out_raster_bv_number",
        "type": "REGULAR",
        "dataType": "float",
        "defaultValue": null,
        "description": "",
        "label": "out.raster.bv",
        "notNull": false
      }
    ],
    "templatecontents": "-in\n$in\n-inzone.vector.in\n$inzone_vector_in\n-inzone.labelimage.in\n$inzone_labelimage_in\n-out.vector.filename\n$out_vector_filename\n-out.raster.filename\n$out_raster_filename\n-inbv\n$inbv_number\n-inzone\n$inzone_str\n-inzone.vector.reproject\n$inzone_vector_reproject_bool\n-inzone.labelimage.nodata\n$inzone_labelimage_nodata_number\n-out\n$out_str\n-out.xml.filename\n$out_xml_filename_str\n-out.raster.bv\n$out_raster_bv_number"
  }
]